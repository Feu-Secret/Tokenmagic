{"mappings":"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","sources":["<anon>","git-projects/Tokenmagic/tokenmagic/module/tokenmagic.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterAdjustment.js","git-projects/Tokenmagic/tokenmagic/fx/Anime.js","git-projects/Tokenmagic/tokenmagic/fx/filters/proto/FilterProto.js","git-projects/Tokenmagic/tokenmagic/module/proto/PlaceableObjectProto.js","git-projects/Tokenmagic/tokenmagic/module/constants.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterAscii.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterAdvancedBloom.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterDot.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterDistortion.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterOldFilm.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterGlow.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterOutline.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterBevel.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterDropShadow.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterDropShadowEx.js","git-projects/Tokenmagic/tokenmagic/fx/filters/CustomFilter.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/fragmentshaders/dropshadow.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/vertexshaders/customvertex2D.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterTwist.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterZoomBlur.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterBlur.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterBlurEx.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterShockWave.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterBulgePinch.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterRemoveShadow.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/fragmentshaders/removeshadow.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterRays.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/fragmentshaders/cosmicray.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterFog.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/fragmentshaders/fog.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterXFog.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/fragmentshaders/xfog.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterElectric.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/fragmentshaders/electricity.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterWaves.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/fragmentshaders/waves.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterFire.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/fragmentshaders/fire.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterFumes.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/fragmentshaders/fumes.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterFlood.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/fragmentshaders/flood.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterSmoke.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/fragmentshaders/smoke.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterForceField.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/fragmentshaders/forcefield.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterMirrorImages.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/fragmentshaders/mirrorimages.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterXRays.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/fragmentshaders/xray.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterLiquid.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/fragmentshaders/liquid.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterGleamingGlow.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/fragmentshaders/magicglow.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterPixelate.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterSpiderWeb.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/fragmentshaders/spiderweb.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterSolarRipples.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/fragmentshaders/ripples.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterGlobes.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/fragmentshaders/globes.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterTransform.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/fragmentshaders/matrix.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterSplash.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/fragmentshaders/splash.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterPolymorph.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/fragmentshaders/polymorph.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/vertexshaders/customvertex2DSampler.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterXFire.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/fragmentshaders/xfire.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterSprite.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/fragmentshaders/sprite.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterSpriteMask.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/fragmentshaders/spritemask.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterReplaceColor.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterDDTint.js","git-projects/Tokenmagic/tokenmagic/fx/glsl/fragmentshaders/ddtint.js","git-projects/Tokenmagic/tokenmagic/fx/presets/defaultpresets.js","git-projects/Tokenmagic/tokenmagic/migration/migration.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterCRT.js","git-projects/Tokenmagic/tokenmagic/fx/filters/FilterRGBSplit.js","git-projects/Tokenmagic/tokenmagic/module/settings.js","git-projects/Tokenmagic/tokenmagic/module/autoTemplate/dnd5e.js","git-projects/Tokenmagic/tokenmagic/module/autoTemplate/pf2e.js","git-projects/Tokenmagic/tokenmagic/module/autoTemplate/TheWitcherTRPG.js"],"sourcesContent":["\nclass $b144ce1eeabb28ed$export$b229f242afc35ae9 {\n    constructor(puppet){\n        const self = this;\n        this.puppet = puppet;\n        this.animated = null;\n        this.animeId = randomID();\n        // Time/synchronization related variables\n        this.frameTime = {};\n        this.elapsedTime = {};\n        this.loopElapsedTime = {};\n        this.loops = {};\n        this.internalLoops = {};\n        this.ping = {};\n        this.pauseBetweenElapsedTime = {};\n        this.pauseBetween = {};\n        this.shutdown = {};\n        if (!(this.puppet == null)) {\n            if (this.puppet.hasOwnProperty(\"animated\") && !(this.puppet.animated == null) && typeof this.puppet.animated === \"object\" && Object.keys(this.puppet.animated).length > 0) {\n                this.initAnimatedInternals(this.puppet.animated);\n                this.animated = this.puppet.animated; // easy access to the puppet's animodes\n            }\n            $b144ce1eeabb28ed$export$b229f242afc35ae9.addAnimation(self); // ready to tick\n        }\n    }\n    static rgbToValue(r, g, b) {\n        return r << 16 | g << 8 | b;\n    }\n    static valueToRgb(bin) {\n        const r = bin >> 16;\n        const g = bin >> 8 & 0xff;\n        const b = bin & 0xff;\n        return [\n            r,\n            g,\n            b\n        ];\n    }\n    static oscillation(elapsed, loopDuration, syncShift, val1, val2, func, isSync, xpi = $b144ce1eeabb28ed$export$b229f242afc35ae9.twoPi) {\n        return (val1 - val2) * (func(xpi * (isSync ? $b144ce1eeabb28ed$export$b229f242afc35ae9.getSynchronizedTime(loopDuration, syncShift) : elapsed / loopDuration + syncShift)) + 1) / 2 + val2;\n    }\n    static colOscillation(elapsed, loopDuration, syncShift, val1, val2, isSync, xpi = $b144ce1eeabb28ed$export$b229f242afc35ae9.twoPi) {\n        const rgbValue1 = $b144ce1eeabb28ed$export$b229f242afc35ae9.valueToRgb(val1);\n        const rgbValue2 = $b144ce1eeabb28ed$export$b229f242afc35ae9.valueToRgb(val2);\n        return $b144ce1eeabb28ed$export$b229f242afc35ae9.rgbToValue(Math.floor($b144ce1eeabb28ed$export$b229f242afc35ae9.oscillation(elapsed, loopDuration, syncShift, rgbValue1[0], rgbValue2[0], Math.cos, isSync, xpi)), Math.floor($b144ce1eeabb28ed$export$b229f242afc35ae9.oscillation(elapsed, loopDuration, syncShift, rgbValue1[1], rgbValue2[1], Math.cos, isSync, xpi)), Math.floor($b144ce1eeabb28ed$export$b229f242afc35ae9.oscillation(elapsed, loopDuration, syncShift, rgbValue1[2], rgbValue2[2], Math.cos, isSync, xpi)));\n    }\n    static getSynchronizedTime(loopDuration, syncShift) {\n        return $b144ce1eeabb28ed$export$b229f242afc35ae9._lastTime / loopDuration + syncShift;\n    }\n    static getSynchronizedRotation(loopDuration, syncShift) {\n        return 360 * (($b144ce1eeabb28ed$export$b229f242afc35ae9._lastTime + syncShift) % loopDuration) / loopDuration;\n    }\n    static getPuppetsByParams(params) {\n        let puppetArray = [];\n        $b144ce1eeabb28ed$export$b229f242afc35ae9._animeMap.forEach((anime, id)=>{\n            if (anime.puppet.placeableId === params.placeableId && anime.puppet.filterId === params.filterId && (!anime.puppet.hasOwnProperty(\"filterInternalId\") || anime.puppet.filterInternalId === params.filterInternalId)) puppetArray.push(anime.puppet);\n        });\n        return puppetArray;\n    }\n    static addAnimation(anime) {\n        $b144ce1eeabb28ed$export$b229f242afc35ae9._animeMap.set(anime.animeId, anime);\n        $b144ce1eeabb28ed$export$b229f242afc35ae9._resumeAnimation();\n    }\n    static removeAnimation(placeableId) {\n        $b144ce1eeabb28ed$export$b229f242afc35ae9._animeMap.forEach((anime, id)=>{\n            if (anime.puppet.placeableId === placeableId) $b144ce1eeabb28ed$export$b229f242afc35ae9._animeMap.delete(id);\n        });\n        if ($b144ce1eeabb28ed$export$b229f242afc35ae9._animeMap.size === 0) $b144ce1eeabb28ed$export$b229f242afc35ae9._suspendAnimation();\n    }\n    static removeAnimationByFilterId(placeableId, filterId) {\n        $b144ce1eeabb28ed$export$b229f242afc35ae9._animeMap.forEach((anime, id)=>{\n            if (anime.puppet.placeableId === placeableId && anime.puppet.filterId === filterId) $b144ce1eeabb28ed$export$b229f242afc35ae9._animeMap.delete(id);\n        });\n        if ($b144ce1eeabb28ed$export$b229f242afc35ae9._animeMap.size === 0) $b144ce1eeabb28ed$export$b229f242afc35ae9._suspendAnimation();\n    }\n    static resetAnimation() {\n        $b144ce1eeabb28ed$export$b229f242afc35ae9._animeMap = new Map();\n        $b144ce1eeabb28ed$export$b229f242afc35ae9._suspended = true;\n    }\n    static tick() {\n        $b144ce1eeabb28ed$export$b229f242afc35ae9._lastTime = canvas.app.ticker.lastTime;\n        $b144ce1eeabb28ed$export$b229f242afc35ae9._frameTime = $b144ce1eeabb28ed$export$b229f242afc35ae9._lastTime - $b144ce1eeabb28ed$export$b229f242afc35ae9._prevTime;\n        for (const [id, anime] of $b144ce1eeabb28ed$export$b229f242afc35ae9._animeMap)if (anime.puppet.enabled) {\n            if (anime.puppet.hasOwnProperty(\"preComputation\") && anime.puppet.placeableImg != null) anime.puppet.preComputation();\n            if (anime.puppet.hasOwnProperty(\"animated\") && !(anime.puppet.animated == null)) anime.animate($b144ce1eeabb28ed$export$b229f242afc35ae9._frameTime);\n        }\n        $b144ce1eeabb28ed$export$b229f242afc35ae9._prevTime = $b144ce1eeabb28ed$export$b229f242afc35ae9._lastTime;\n    }\n    static _suspendAnimation() {\n        if ($b144ce1eeabb28ed$export$b229f242afc35ae9._activated && !$b144ce1eeabb28ed$export$b229f242afc35ae9._suspended && !(0, $843aec23ddc05ff2$export$4876a704e2bf90fb)()) $b144ce1eeabb28ed$export$b229f242afc35ae9._detachFromTicker();\n        $b144ce1eeabb28ed$export$b229f242afc35ae9._suspended = true;\n    }\n    static _resumeAnimation() {\n        if ($b144ce1eeabb28ed$export$b229f242afc35ae9._activated && $b144ce1eeabb28ed$export$b229f242afc35ae9._suspended && !(0, $843aec23ddc05ff2$export$4876a704e2bf90fb)()) $b144ce1eeabb28ed$export$b229f242afc35ae9._attachToTicker();\n        $b144ce1eeabb28ed$export$b229f242afc35ae9._suspended = false;\n    }\n    static activateAnimation() {\n        if (!$b144ce1eeabb28ed$export$b229f242afc35ae9._activated && !$b144ce1eeabb28ed$export$b229f242afc35ae9._suspended && !(0, $843aec23ddc05ff2$export$4876a704e2bf90fb)()) $b144ce1eeabb28ed$export$b229f242afc35ae9._attachToTicker();\n        $b144ce1eeabb28ed$export$b229f242afc35ae9._activated = true;\n    }\n    static deactivateAnimation() {\n        if ($b144ce1eeabb28ed$export$b229f242afc35ae9._activated && !$b144ce1eeabb28ed$export$b229f242afc35ae9._suspended && !(0, $843aec23ddc05ff2$export$4876a704e2bf90fb)()) $b144ce1eeabb28ed$export$b229f242afc35ae9._detachFromTicker();\n        $b144ce1eeabb28ed$export$b229f242afc35ae9._activated = false;\n    }\n    static _attachToTicker() {\n        canvas.app.ticker.add($b144ce1eeabb28ed$export$b229f242afc35ae9.tick, this, PIXI.UPDATE_PRIORITY.LOW + 1);\n        $b144ce1eeabb28ed$export$b229f242afc35ae9._lastTime = canvas.app.ticker.lastTime;\n        $b144ce1eeabb28ed$export$b229f242afc35ae9._prevTime = $b144ce1eeabb28ed$export$b229f242afc35ae9._lastTime;\n    }\n    static _detachFromTicker() {\n        canvas.app.ticker.remove($b144ce1eeabb28ed$export$b229f242afc35ae9.tick, this);\n        $b144ce1eeabb28ed$export$b229f242afc35ae9._lastTime = 0;\n        $b144ce1eeabb28ed$export$b229f242afc35ae9._prevTime = 0;\n    }\n    static getAnimeMap() {\n        return $b144ce1eeabb28ed$export$b229f242afc35ae9._animeMap;\n    }\n    initAnimatedInternals(animated) {\n        Object.keys(animated).forEach((effect)=>{\n            // Internals init\n            this.initInternals(effect);\n        });\n    }\n    initInternals(effect) {\n        this.elapsedTime[effect] = 0;\n        this.loopElapsedTime[effect] = 0;\n        this.pauseBetweenElapsedTime[effect] = 0;\n        this.loops[effect] = 0;\n        this.internalLoops[effect] = 0;\n        this.frameTime[effect] = 0;\n        this.pauseBetween[effect] = false;\n        this.ping[effect] = false;\n        this.shutdown[effect] = false;\n    }\n    hasInternals(effect) {\n        return this.elapsedTime.hasOwnProperty(effect);\n    }\n    animate(frameTime) {\n        for (const effect of Object.keys(this.puppet.animated))if (this.animated[effect].active && this.cycleCheck(effect, frameTime)) {\n            if (this[this.animated[effect].animType] != null) this[this.animated[effect].animType](effect);\n            if (this.shutdown[effect]) {\n                this.animated[effect].active = false;\n                this.shutdown[effect] = false;\n                // persists the value of an effect which is terminated.\n                this.persistTerminatedEffect(effect);\n            } else {\n                this.loopElapsedTime[effect] += frameTime;\n                this.elapsedTime[effect] += frameTime;\n            }\n        }\n        this.autoDisableCheck();\n    }\n    cycleCheck(effect, frameTime) {\n        this.frameTime[effect] = frameTime;\n        if (this.isPauseBetweenLoop(effect, frameTime)) return false;\n        if (this.loopElapsedTime[effect] > this.animated[effect].loopDuration) {\n            this.loopElapsedTime[effect] -= this.animated[effect].loopDuration;\n            this.ping[effect] = true;\n            if (this.animated[effect].loops !== Infinity) {\n                this.loops[effect]++;\n                this.internalLoops[effect]++;\n            }\n            if (this.loops[effect] >= this.animated[effect].loops) {\n                // correction to stop exactly on the target value when the last loop end.\n                this.elapsedTime[effect] = this.internalLoops[effect] * this.animated[effect].loopDuration;\n                this.loops[effect] = 0;\n                this.loopElapsedTime[effect] = 0;\n                this.shutdown[effect] = true;\n            } else if (this.animated[effect].pauseBetweenDuration > 0) {\n                this.elapsedTime[effect] = this.animated[effect].loopDuration;\n                this.pauseBetween[effect] = true;\n            }\n        }\n        return true;\n    }\n    async persistTerminatedEffect(effect) {\n        if (!(this.puppet.filterOwner === game.data.userId)) return;\n        let animeInfo;\n        let doInit = true;\n        let flag = this.puppet.targetPlaceable.document.getFlag(\"tokenmagic\", \"animeInfo\");\n        if (flag) // fastest than array.find\n        for (const animeinfo of flag.values()){\n            if (animeinfo.tmFilterId === this.puppet.filterId && animeinfo.tmFilterInternalId === this.puppet.filterInternalId && animeinfo.tmFilterEffect === effect) {\n                if (animeinfo && animeinfo instanceof Object) {\n                    animeinfo.tmFilterEffectValue = this.puppet[effect];\n                    doInit = false;\n                    break;\n                }\n            }\n        }\n        if (doInit) {\n            animeInfo = [\n                {\n                    tmFilterId: this.puppet.filterId,\n                    tmFilterInternalId: this.puppet.filterInternalId,\n                    tmFilterEffect: effect,\n                    tmFilterEffectValue: this.puppet[effect]\n                }\n            ];\n            if (flag) flag = flag.concat(animeInfo);\n            else flag = animeInfo;\n        }\n        flag = duplicate(flag);\n        await this.puppet.targetPlaceable._TMFXsetAnimeFlag(flag);\n    }\n    autoDisableCheck() {\n        if (!(this.puppet.autoDisable || this.puppet.autoDestroy)) return;\n        if (!(this.puppet.filterOwner === game.data.userId)) return;\n        if (this.puppet.enabled === false && !this.puppet.autoDestroy) return;\n        if (Object.values(this.animated).every((animeEffect)=>animeEffect.active === false)) this.disableOrDestroy();\n    }\n    async disableOrDestroy() {\n        if (this.puppet == null) return;\n        const placeable = this.puppet.targetPlaceable;\n        if (placeable == null) return;\n        if (this.puppet.autoDestroy) await window.TokenMagic.deleteFilters(placeable, this.puppet.filterId);\n        else {\n            let params = {};\n            params.filterType = this.puppet.filterType;\n            params.filterId = this.puppet.filterId;\n            params.enabled = false;\n            await window.TokenMagic.updateFiltersByPlaceable(placeable, [\n                params\n            ]);\n        }\n    }\n    isPauseBetweenLoop(effect, frametime) {\n        if (this.pauseBetween[effect] && this.animated[effect].pauseBetweenDuration > 0) {\n            this.pauseBetweenElapsedTime[effect] += frametime;\n            if (this.pauseBetweenElapsedTime[effect] < this.animated[effect].pauseBetweenDuration) return true;\n            else {\n                this.pauseBetweenElapsedTime[effect] = 0;\n                return this.pauseBetween[effect] = false;\n            }\n        }\n        return false;\n    }\n    pauseBetweenCheck(effect, frametime) {\n        if (this.pauseStart[effect] && this.animated[effect].pauseStartDuration > 0) {\n            this.pauseStartElapsedTime[effect] += frametime;\n            if (this.pauseStartElapsedTime[effect] < this.animated[effect].pauseStartDuration) return false;\n            else {\n                this.pauseStart[effect] = false;\n                return true;\n            }\n        }\n    }\n    moveToward(effect) {\n        this.puppet[effect] = (this.animated[effect].val1 - this.animated[effect].val2) / this.animated[effect].loopDuration * this.elapsedTime[effect];\n    }\n    colorOscillation(effect) {\n        this.puppet[effect] = $b144ce1eeabb28ed$export$b229f242afc35ae9.colOscillation(this.elapsedTime[effect], this.animated[effect].loopDuration, this.animated[effect].syncShift, this.animated[effect].val1, this.animated[effect].val2, false);\n    }\n    halfColorOscillation(effect) {\n        this.puppet[effect] = $b144ce1eeabb28ed$export$b229f242afc35ae9.colOscillation(this.elapsedTime[effect], this.animated[effect].loopDuration, this.animated[effect].syncShift, this.animated[effect].val1, this.animated[effect].val2, false, Math.PI);\n    }\n    syncColorOscillation(effect) {\n        this.puppet[effect] = $b144ce1eeabb28ed$export$b229f242afc35ae9.colOscillation(this.elapsedTime[effect], this.animated[effect].loopDuration, this.animated[effect].syncShift, this.animated[effect].val1, this.animated[effect].val2, true);\n    }\n    cosOscillation(effect) {\n        this.puppet[effect] = $b144ce1eeabb28ed$export$b229f242afc35ae9.oscillation(this.elapsedTime[effect], this.animated[effect].loopDuration, this.animated[effect].syncShift, this.animated[effect].val1, this.animated[effect].val2, Math.cos, false);\n    }\n    halfCosOscillation(effect) {\n        this.puppet[effect] = $b144ce1eeabb28ed$export$b229f242afc35ae9.oscillation(this.elapsedTime[effect], this.animated[effect].loopDuration, this.animated[effect].syncShift, this.animated[effect].val1, this.animated[effect].val2, Math.cos, false, Math.PI);\n    }\n    sinOscillation(effect) {\n        this.puppet[effect] = $b144ce1eeabb28ed$export$b229f242afc35ae9.oscillation(this.elapsedTime[effect], this.animated[effect].loopDuration, this.animated[effect].syncShift, this.animated[effect].val1, this.animated[effect].val2, Math.sin, false);\n    }\n    halfSinOscillation(effect) {\n        this.puppet[effect] = $b144ce1eeabb28ed$export$b229f242afc35ae9.oscillation(this.elapsedTime[effect], this.animated[effect].loopDuration, this.animated[effect].syncShift, this.animated[effect].val1, this.animated[effect].val2, Math.sin, false, Math.PI);\n    }\n    chaoticOscillation(effect) {\n        this.puppet[effect] = $b144ce1eeabb28ed$export$b229f242afc35ae9.oscillation(this.elapsedTime[effect], this.animated[effect].loopDuration, this.animated[effect].syncShift + Math.random() * this.animated[effect].chaosFactor, this.animated[effect].val1, this.animated[effect].val2, Math.cos, false);\n    }\n    syncCosOscillation(effect) {\n        this.puppet[effect] = $b144ce1eeabb28ed$export$b229f242afc35ae9.oscillation(this.elapsedTime[effect], this.animated[effect].loopDuration, this.animated[effect].syncShift, this.animated[effect].val1, this.animated[effect].val2, Math.cos, true);\n    }\n    syncSinOscillation(effect) {\n        this.puppet[effect] = $b144ce1eeabb28ed$export$b229f242afc35ae9.oscillation(this.elapsedTime[effect], this.animated[effect].loopDuration, this.animated[effect].syncShift, this.animated[effect].val1, this.animated[effect].val2, Math.sin, true);\n    }\n    syncChaoticOscillation(effect) {\n        this.puppet[effect] = $b144ce1eeabb28ed$export$b229f242afc35ae9.oscillation(this.elapsedTime[effect], this.animated[effect].loopDuration, this.animated[effect].syncShift + Math.random() * this.animated[effect].chaosFactor, this.animated[effect].val1, this.animated[effect].val2, Math.cos, true);\n    }\n    rotation(effect) {\n        const computedRotation = 360 * this.elapsedTime[effect] / this.animated[effect].loopDuration;\n        this.puppet[effect] = this.animated[effect].clockWise ? computedRotation : 360 - computedRotation;\n    }\n    syncRotation(effect) {\n        const computedRotation = $b144ce1eeabb28ed$export$b229f242afc35ae9.getSynchronizedRotation(this.animated[effect].loopDuration, this.animated[effect].syncShift);\n        this.puppet[effect] = this.animated[effect].clockWise ? computedRotation : 360 - computedRotation;\n    }\n    randomNumber(effect) {\n        const randomNumber = Math.random() * (this.animated[effect].val2 - this.animated[effect].val1) + this.animated[effect].val1;\n        if (this.animated[effect].wantInteger) this.puppet[effect] = Math.floor(randomNumber);\n        else this.puppet[effect] = randomNumber;\n    }\n    randomNumberPerLoop(effect) {\n        if (this._ringing(effect)) this.randomNumber(effect);\n    }\n    randomColor(effect) {\n        this.puppet[effect] = Math.floor(Math.random() * 16777215);\n    }\n    randomColorPerLoop(effect) {\n        if (this._ringing(effect)) this.randomColor(effect);\n    }\n    move(effect) {\n        this.puppet[effect] += this.animated[effect].speed * this.frameTime[effect];\n    }\n    _ringing(effect) {\n        if (this.ping[effect]) {\n            this.ping[effect] = false;\n            return true;\n        }\n        return false;\n    }\n}\n$b144ce1eeabb28ed$export$b229f242afc35ae9._lastTime = 0;\n$b144ce1eeabb28ed$export$b229f242afc35ae9._prevTime = 0;\n$b144ce1eeabb28ed$export$b229f242afc35ae9._frameTime = 0;\n$b144ce1eeabb28ed$export$b229f242afc35ae9._animeMap = new Map();\n$b144ce1eeabb28ed$export$b229f242afc35ae9.twoPi = Math.PI * 2;\n$b144ce1eeabb28ed$export$b229f242afc35ae9._activated = false;\n$b144ce1eeabb28ed$export$b229f242afc35ae9._suspended = true;\n\n\n\n\nconst $2a8e669d7b55d798$export$7395e4cb572e863b = 0.5;\nconst $2a8e669d7b55d798$export$680af52575be3523 = \"NOFX\";\nconst $2a8e669d7b55d798$export$2f8ff78910784c41 = 10000;\n\n\nvar $f6b03d27daf6262f$export$5b94be486bc63144 = (0, $2a8e669d7b55d798$export$2f8ff78910784c41);\nPlaceableObject.prototype.TMFXaddFilters = async function(paramsArray, replace = false) {\n    await (0, $843aec23ddc05ff2$export$480e4c19201e4e74).addFilters(this, paramsArray, replace);\n};\nPlaceableObject.prototype.TMFXupdateFilters = async function(paramsArray) {\n    await (0, $843aec23ddc05ff2$export$480e4c19201e4e74).updateFiltersByPlaceable(this, paramsArray);\n};\nPlaceableObject.prototype.TMFXaddUpdateFilters = async function(paramsArray) {\n    await (0, $843aec23ddc05ff2$export$480e4c19201e4e74).addUpdateFilters(this, paramsArray);\n};\nPlaceableObject.prototype.TMFXdeleteFilters = async function(filterId = null) {\n    await (0, $843aec23ddc05ff2$export$480e4c19201e4e74).deleteFilters(this, filterId);\n};\nPlaceableObject.prototype.TMFXhasFilterType = function(filterType) {\n    return (0, $843aec23ddc05ff2$export$480e4c19201e4e74).hasFilterType(this, filterType);\n};\nPlaceableObject.prototype.TMFXhasFilterId = function(filterId) {\n    return (0, $843aec23ddc05ff2$export$480e4c19201e4e74).hasFilterId(this, filterId);\n};\nPlaceableObject.prototype._TMFXsetFlag = async function(flag) {\n    if ((0, $843aec23ddc05ff2$export$ae4b89d79d01bd2b)()) (0, $843aec23ddc05ff2$export$24d33a6f4bffea69)(this, flag, (0, $843aec23ddc05ff2$export$157d7b8c087faa7b).SET_FLAG);\n    else await this.document.setFlag(\"tokenmagic\", \"filters\", flag);\n};\nPlaceableObject.prototype._TMFXsetAnimeFlag = async function(flag) {\n    if ((0, $843aec23ddc05ff2$export$ae4b89d79d01bd2b)()) (0, $843aec23ddc05ff2$export$24d33a6f4bffea69)(this, flag, (0, $843aec23ddc05ff2$export$157d7b8c087faa7b).SET_ANIME_FLAG);\n    else await this.document.setFlag(\"tokenmagic\", \"animeInfo\", flag);\n};\nPlaceableObject.prototype._TMFXunsetFlag = async function() {\n    if ((0, $843aec23ddc05ff2$export$ae4b89d79d01bd2b)()) (0, $843aec23ddc05ff2$export$24d33a6f4bffea69)(this, null, (0, $843aec23ddc05ff2$export$157d7b8c087faa7b).SET_FLAG);\n    else await this.document.unsetFlag(\"tokenmagic\", \"filters\");\n};\nPlaceableObject.prototype._TMFXunsetAnimeFlag = async function() {\n    if ((0, $843aec23ddc05ff2$export$ae4b89d79d01bd2b)()) (0, $843aec23ddc05ff2$export$24d33a6f4bffea69)(this, null, (0, $843aec23ddc05ff2$export$157d7b8c087faa7b).SET_ANIME_FLAG);\n    else await this.document.unsetFlag(\"tokenmagic\", \"animeInfo\");\n};\nPlaceableObject.prototype._TMFXgetSprite = function() {\n    const type = this._TMFXgetPlaceableType();\n    switch(type){\n        case (0, $843aec23ddc05ff2$export$f2f6f02affe07ab5).TOKEN:\n            return this.mesh;\n        case (0, $843aec23ddc05ff2$export$f2f6f02affe07ab5).TILE:\n            return this.mesh ?? this.bg;\n        case (0, $843aec23ddc05ff2$export$f2f6f02affe07ab5).TEMPLATE:\n            return this.template;\n        case (0, $843aec23ddc05ff2$export$f2f6f02affe07ab5).DRAWING:\n            return this.hasText ? this.text : this.shape;\n        default:\n            return null;\n    }\n};\nPlaceableObject.prototype._TMFXgetPlaceablePadding = function() {\n    // get the placeable padding, by taking into account all filters and options\n    let accPadding = 0;\n    const filters = this._TMFXgetSprite().filters;\n    if (filters instanceof Array) for (const filter of filters){\n        if (!filter.enabled) continue;\n        if (canvas.app.renderer.filter.useMaxPadding) accPadding = Math.max(accPadding, filter.padding);\n        else accPadding += filter.padding;\n    }\n    return accPadding;\n};\nPlaceableObject.prototype._TMFXcheckSprite = function() {\n    const type = this._TMFXgetPlaceableType();\n    switch(type){\n        case (0, $843aec23ddc05ff2$export$f2f6f02affe07ab5).TOKEN:\n        case (0, $843aec23ddc05ff2$export$f2f6f02affe07ab5).TILE:\n            return !(this.mesh == null);\n        case (0, $843aec23ddc05ff2$export$f2f6f02affe07ab5).TEMPLATE:\n            return !(this.template == null);\n        case (0, $843aec23ddc05ff2$export$f2f6f02affe07ab5).DRAWING:\n            return !(this.shape == null);\n        default:\n            return null;\n    }\n};\nPlaceableObject.prototype._TMFXgetMaxFilterRank = function() {\n    const sprite = this._TMFXgetSprite();\n    if (sprite == null) return $f6b03d27daf6262f$export$5b94be486bc63144++;\n    if (sprite.filters == null) return $f6b03d27daf6262f$export$5b94be486bc63144++;\n    else {\n        let maxRank = Math.max(...sprite.filters.map((f)=>f.rank), (0, $2a8e669d7b55d798$export$2f8ff78910784c41));\n        $f6b03d27daf6262f$export$5b94be486bc63144 = Math.max(maxRank, $f6b03d27daf6262f$export$5b94be486bc63144) + 1;\n        return $f6b03d27daf6262f$export$5b94be486bc63144;\n    }\n};\nPlaceableObject.prototype._TMFXsetRawFilters = function(filters) {\n    function insertFilter(filters) {\n        function filterZOrderCompare(a, b) {\n            if (a.zOrder < b.zOrder) return -1;\n            if (a.zOrder > b.zOrder) return 1;\n            return 0;\n        }\n        function filterRankCompare(a, b) {\n            if (a.rank < b.rank) return -1;\n            if (a.rank > b.rank) return 1;\n            return 0;\n        }\n        if (!isZOrder) {\n            if (!filters.hasOwnProperty(\"rank\")) {\n                let maxRank = Math.max(...sprite.filters.map((f)=>f.rank), (0, $2a8e669d7b55d798$export$2f8ff78910784c41));\n                filters.rank = maxRank + 1;\n            }\n        }\n        sprite.filters.push(filters);\n        isZOrder ? sprite.filters.sort(filterZOrderCompare) : sprite.filters.sort(filterRankCompare);\n    }\n    function addFilter(filters) {\n        if (!isZOrder && !filters.hasOwnProperty(\"rank\")) filters.rank = (0, $2a8e669d7b55d798$export$2f8ff78910784c41);\n        sprite.filters = [\n            filters\n        ];\n    }\n    const isZOrder = (0, $843aec23ddc05ff2$export$222530a21fa4a417)();\n    const sprite = this._TMFXgetSprite();\n    if (sprite == null) return false;\n    if (filters == null) sprite.filters = null;\n    else sprite.filters == null ? addFilter(filters) : insertFilter(filters);\n    return true;\n};\nPlaceableObject.prototype._TMFXunsetRawFilters = function() {\n    return this._TMFXsetRawFilters(null);\n};\nPlaceableObject.prototype._TMFXgetPlaceableType = function() {\n    if ([\n        (0, $843aec23ddc05ff2$export$f2f6f02affe07ab5).TOKEN,\n        (0, $843aec23ddc05ff2$export$f2f6f02affe07ab5).TEMPLATE,\n        (0, $843aec23ddc05ff2$export$f2f6f02affe07ab5).TILE,\n        (0, $843aec23ddc05ff2$export$f2f6f02affe07ab5).DRAWING\n    ].includes(this.constructor.embeddedName)) return this.constructor.embeddedName;\n    return (0, $843aec23ddc05ff2$export$f2f6f02affe07ab5).NOT_SUPPORTED;\n};\n\n\nPIXI.Filter.prototype.setTMParams = function(params) {\n    this.autoDisable = false;\n    this.autoDestroy = false;\n    this.gridPadding = 0;\n    this.boundsPadding = new PIXI.Point(0, 0);\n    this.currentPadding = 0;\n    this.recalculatePadding = true;\n    this.dummy = false;\n    foundry.utils.mergeObject(this, params);\n    if (!this.dummy) {\n        this.rawPadding = this.rawPadding ?? this.padding ?? 0;\n        this.originalPadding = Math.max(this.rawPadding, (0, $843aec23ddc05ff2$export$a3e1d0865041c250)());\n        this.assignPlaceable();\n        this.activateTransform();\n        Object.defineProperty(this, \"padding\", {\n            get: function() {\n                if (this.recalculatePadding) this.calculatePadding();\n                return this.currentPadding;\n            },\n            set: function(padding) {\n                this.rawPadding = padding;\n                this.originalPadding = Math.max(padding, (0, $843aec23ddc05ff2$export$a3e1d0865041c250)());\n            }\n        });\n    } else this.apply = function(filterManager, input, output, clear) {\n        filterManager.applyFilter(this, input, output, clear);\n    };\n};\nPIXI.Filter.prototype.getPlaceable = function() {\n    return (0, $843aec23ddc05ff2$export$5008448b4c27fa2b)(this.placeableId, this.placeableType);\n};\nPIXI.Filter.prototype.getPlaceableType = function() {\n    return this.placeableType;\n};\nPIXI.Filter.prototype.calculatePadding = function() {\n    const target = this.placeableImg;\n    let width;\n    let height;\n    {\n        const ang = !this.sticky && this.placeableType !== (0, $843aec23ddc05ff2$export$f2f6f02affe07ab5).TOKEN ? target.rotation : 0;\n        const sin = Math.sin(ang);\n        const cos = Math.cos(ang);\n        width = Math.abs(target.width * cos) + Math.abs(target.height * sin);\n        height = Math.abs(target.width * sin) + Math.abs(target.height * cos);\n    }\n    if (this.gridPadding > 0) {\n        const gridSize = canvas.dimensions.size;\n        this.boundsPadding.x = this.boundsPadding.y = (this.gridPadding - 1) * gridSize;\n        this.boundsPadding.x += (gridSize - 1 - (width + gridSize - 1) % gridSize) / 2;\n        this.boundsPadding.y += (gridSize - 1 - (height + gridSize - 1) % gridSize) / 2;\n    } else this.boundsPadding.x = this.boundsPadding.y = this.rawPadding;\n    {\n        const ang = this.sticky ? target.rotation : 0;\n        const sin = Math.sin(ang);\n        const cos = Math.cos(ang);\n        this.currentPadding = Math.max(Math.abs(this.boundsPadding.x * cos) + Math.abs(this.boundsPadding.y * sin), Math.abs(this.boundsPadding.x * sin) + Math.abs(this.boundsPadding.y * cos)) + (this.originalPadding - this.rawPadding);\n    }\n    this.boundsPadding.x += (width - target.width) / 2;\n    this.boundsPadding.y += (height - target.height) / 2;\n    const scale = this.targetPlaceable.worldTransform.a;\n    this.boundsPadding.x *= scale;\n    this.boundsPadding.y *= scale;\n    this.currentPadding *= scale;\n};\nPIXI.Filter.prototype.assignPlaceable = function() {\n    this.targetPlaceable = this.getPlaceable();\n    this.targetPlaceable != null ? this.placeableImg = this.targetPlaceable._TMFXgetSprite() : this.placeableImg = null;\n};\nPIXI.Filter.prototype.activateTransform = function() {\n    this.preComputation = this.filterTransform;\n    this.filterTransform();\n    const apply = this.apply;\n    this.apply = function(filterManager, input, output, clear, state) {\n        if (\"handleTransform\" in this) this.handleTransform(state);\n        return apply.apply(this, arguments);\n    };\n};\nPIXI.Filter.prototype.filterTransform = function() {\n    if (this.hasOwnProperty(\"zIndex\")) this.targetPlaceable.zIndex = this.zIndex;\n};\nPIXI.Filter.prototype.normalizeTMParams = function() {\n    if (this.hasOwnProperty(\"animated\") && !(this.animated == null)) // Normalize animations properties\n    Object.keys(this.animated).forEach((effect)=>{\n        if (this.animated[effect].active == null || typeof this.animated[effect].active != \"boolean\") this.animated[effect].active = true;\n        if (this.animated[effect].loops == null || typeof this.animated[effect].loops != \"number\" || this.animated[effect].loops <= 0) this.animated[effect].loops = Infinity;\n        if (this.animated[effect].loopDuration == null || typeof this.animated[effect].loopDuration != \"number\" || this.animated[effect].loopDuration <= 0) this.animated[effect].loopDuration = 3000;\n        if (this.animated[effect].clockWise == null || typeof this.animated[effect].clockWise != \"boolean\") this.animated[effect].clockWise = true;\n        if (this.animated[effect].pauseBetweenDuration == null || typeof this.animated[effect].pauseBetweenDuration != \"number\" || this.animated[effect].pauseBetweenDuration <= 0) this.animated[effect].pauseBetweenDuration = 0;\n        if (this.animated[effect].syncShift == null || typeof this.animated[effect].syncShift != \"number\" || this.animated[effect].syncShift < 0) this.animated[effect].syncShift = 0;\n        if (this.animated[effect].val1 == null || typeof this.animated[effect].val1 != \"number\") this.animated[effect].val1 = 0;\n        if (this.animated[effect].val2 == null || typeof this.animated[effect].val2 != \"number\") this.animated[effect].val2 = 0;\n        if (this.anime[this.animated[effect].animType] === undefined) this.animated[effect].animType = null;\n        if (this.animated[effect].speed == null || typeof this.animated[effect].speed != \"number\") this.animated[effect].speed = 0;\n        if (this.animated[effect].chaosFactor == null || typeof this.animated[effect].chaosFactor != \"number\") this.animated[effect].chaosFactor = 0.25;\n        if (this.animated[effect].wantInteger == null || typeof this.animated[effect].wantInteger != \"boolean\") this.animated[effect].wantInteger = false;\n        if (!this.anime.hasInternals(effect)) this.anime.initInternals(effect);\n        this.anime.animated = this.animated;\n    });\n};\n\n\nclass $b18b66f231b68d33$export$1545cd3bbac349ce extends PIXI.filters.AdjustmentFilter {\n    constructor(params){\n        super();\n        this.enabled = false;\n        this.gamma = 1;\n        this.saturation = 1;\n        this.contrast = 1;\n        this.brightness = 1;\n        this.red = 1;\n        this.green = 1;\n        this.blue = 1;\n        this.alpha = 1;\n        this.zOrder = 30;\n        this.animating = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n}\n\n\n\n\nclass $266d272be8565e9a$export$1efdcfd4cb16ac29 extends PIXI.filters.AsciiFilter {\n    constructor(params){\n        super();\n        this.size = 8;\n        this.zOrder = 310;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n}\n\n\n\n\nclass $03f77eb51ab54ef5$export$e7bbc116d34f17bc extends PIXI.filters.AdvancedBloomFilter {\n    constructor(params){\n        super();\n        this.enabled = false;\n        this.threshold = 0.5;\n        this.bloomScale = 1.0;\n        this.brightness = 1.0;\n        this.blur = 4.0;\n        this.quality = 4.0;\n        this.zOrder = 40;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n}\n\n\n\n\nclass $66f275f0cec2a609$export$d75528d01a211954 extends PIXI.filters.DotFilter {\n    constructor(params){\n        super();\n        this.scale = 1;\n        this.angle = 5;\n        this.grayscale = true;\n        this.zOrder = 330;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n}\n\n\n\n\n\nclass $3bd1625f35d5c5ab$export$2d59c37be5e749a7 extends PIXI.filters.DisplacementFilter {\n    constructor(params){\n        // Loading distortion sprite\n        var displacementSpriteMask;\n        var spriteMaskPath;\n        spriteMaskPath = params.hasOwnProperty(\"maskPath\") ? (0, $843aec23ddc05ff2$export$3bebb302ab08af33)(params.maskPath) : \"modules/tokenmagic/fx/assets/distortion-1.png\";\n        displacementSpriteMask = PIXI.Sprite.from(spriteMaskPath);\n        super(displacementSpriteMask);\n        // Configuring distortion sprite\n        this.sprite = displacementSpriteMask;\n        this.wrapMode = PIXI.WRAP_MODES.REPEAT;\n        this.position = new PIXI.Point();\n        this.skew = new PIXI.Point();\n        this.pivot = new PIXI.Point();\n        this.anchorSet = 0.5;\n        this.transition = null;\n        this.padding = 15; // conf\n        this.enabled = false;\n        this.maskSpriteX = 0;\n        this.maskSpriteY = 0;\n        this.maskSpriteScaleX = 4;\n        this.maskSpriteScaleY = 4;\n        this.maskSpriteSkewX = 0;\n        this.maskSpriteSkewY = 0;\n        this.maskSpriteRotation = 0;\n        this.zOrder = 4000;\n        this.sticky = true;\n        this.animated = {};\n        this.setTMParams(params);\n        this.maskPath = spriteMaskPath;\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n            this.sprite.anchor.set(this.anchorSet);\n            this.sprite.texture.baseTexture.wrapMode = this.wrapMode;\n        }\n    }\n    set maskSpriteX(value) {\n        this.position.x = value;\n    }\n    set maskSpriteY(value) {\n        this.position.y = value;\n    }\n    get maskSpriteX() {\n        return this.position.x;\n    }\n    get maskSpriteY() {\n        return this.position.y;\n    }\n    set maskSpriteScaleX(value) {\n        this.scale.x = value;\n    }\n    set maskSpriteScaleY(value) {\n        this.scale.y = value;\n    }\n    get maskSpriteScaleX() {\n        return this.scale.x;\n    }\n    get maskSpriteScaleY() {\n        return this.scale.y;\n    }\n    set maskSpriteRotation(value) {\n        this.rotation = value;\n    }\n    get maskSpriteRotation() {\n        return this.rotation;\n    }\n    set maskSpriteSkewX(value) {\n        this.skew.x = value;\n    }\n    get maskSpriteSkewX() {\n        return this.skew.x;\n    }\n    set maskSpriteSkewY(value) {\n        this.skew.y = value;\n    }\n    get maskSpriteSkewY() {\n        return this.skew.y;\n    }\n    set maskSpritePivotX(value) {\n        this.pivot.x = value;\n    }\n    get maskSpritePivotX() {\n        return this.pivot.x;\n    }\n    set maskSpritePivotY(value) {\n        this.pivot.y = value;\n    }\n    get maskSpritePivotY() {\n        return this.pivot.y;\n    }\n    handleTransform() {\n        this.sprite.position.x = this.targetPlaceable.x + this.placeableImg.x + this.position.x;\n        this.sprite.position.y = this.targetPlaceable.y + this.placeableImg.y + this.position.y;\n        this.sprite.skew.x = this.skew.x;\n        this.sprite.skew.x = this.skew.y;\n        this.sprite.rotation = this.rotation;\n        this.sprite.pivot.x = this.pivot.x;\n        this.sprite.pivot.y = this.pivot.y;\n        if (this.sticky) this.sprite.rotation += this.placeableImg.rotation;\n        this.sprite.transform.updateTransform(canvas.stage.transform);\n    }\n    apply(filterManager, input, output, clear) {\n        this.uniforms.filterMatrix = filterManager.calculateSpriteMatrix(this.maskMatrix, this.maskSprite);\n        this.uniforms.scale.x = this.scale.x;\n        this.uniforms.scale.y = this.scale.y;\n        const wt = this.maskSprite.worldTransform;\n        this.uniforms.rotation[0] = wt.a;\n        this.uniforms.rotation[1] = wt.b;\n        this.uniforms.rotation[2] = wt.c;\n        this.uniforms.rotation[3] = wt.d;\n        filterManager.applyFilter(this, input, output, clear);\n    }\n}\n\n\n\n\nclass $8d4366a6c959b91c$export$2094be6cc744d7bc extends PIXI.filters.OldFilmFilter {\n    constructor(params){\n        super();\n        this.enabled = false;\n        this.vignetting = 0;\n        this.noise = 0.08;\n        this.scratch = 0.1;\n        this.scratchDensity = 0.1;\n        this.seed = 0;\n        this.zOrder = 60;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n}\n\n\n\n\nclass $8260b0df112cbb55$export$3ea2d657d9f1c2fe extends PIXI.filters.GlowFilter {\n    constructor(params){\n        super();\n        this.padding = 15;\n        this.enabled = false;\n        this.innerStrength = 0;\n        this.outerStrength = 6.5;\n        this.color = 0x0020ff;\n        this.quality = 1;\n        this.alpha = 1;\n        this.zOrder = 70;\n        this.animated = {};\n        this.setTMParams(params);\n        // Imposed value. Should not be a shader uniform\n        this.distance = 10;\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n}\n\n\n\n\nclass $d5c2fdb7e9f35bb9$export$c04494508d798797 extends PIXI.filters.OutlineFilter {\n    constructor(params){\n        super();\n        this.blendMode = PIXI.BLEND_MODES.NORMAL;\n        this.padding = 5;\n        this.enabled = false;\n        this.thickness = 3;\n        this.color = 0x000000;\n        this.quality = 1;\n        this.zOrder = 50;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n}\n\n\n\n\nclass $edefbbc41be796fb$export$bcacf43f99a4009b extends PIXI.filters.BevelFilter {\n    constructor(params){\n        super();\n        this.blendMode = PIXI.BLEND_MODES.NORMAL;\n        this.padding = 10;\n        this.enabled = false;\n        this.rotation = 0;\n        this.thickness = 5;\n        this.lightColor = 0xffffff;\n        this.lightAlpha = 0.95;\n        this.shadowColor = 0x000000;\n        this.shadowAlpha = 0.95;\n        this.zOrder = 90;\n        this.quality = 1;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n}\n\n\n\n\nconst $d39b4acfbdc1a130$var$_tempRect = new PIXI.Rectangle();\nclass $d39b4acfbdc1a130$export$c042bd0ff4d3251b extends PIXI.Filter {\n    constructor(...args){\n        super(...args);\n        if (!this.uniforms.filterMatrix || !this.uniforms.filterMatrixInverse) this.uniforms.filterMatrix = new PIXI.Matrix();\n        if (!this.uniforms.filterMatrixInverse) this.uniforms.filterMatrixInverse = new PIXI.Matrix();\n    }\n    apply(filterManager, input, output, clear) {\n        const filterMatrix = this.uniforms.filterMatrix;\n        if (filterMatrix) {\n            const { sourceFrame: sourceFrame, destinationFrame: destinationFrame, target: target } = filterManager.activeState;\n            filterMatrix.set(destinationFrame.width, 0, 0, destinationFrame.height, sourceFrame.x, sourceFrame.y);\n            const worldTransform = PIXI.Matrix.TEMP_MATRIX;\n            const localBounds = target.getLocalBounds($d39b4acfbdc1a130$var$_tempRect);\n            if (this.sticky) {\n                worldTransform.copyFrom(target.transform.worldTransform);\n                worldTransform.invert();\n                const rotation = target.transform.rotation;\n                const sin = Math.sin(rotation);\n                const cos = Math.cos(rotation);\n                const scaleX = Math.hypot(cos * worldTransform.a + sin * worldTransform.c, cos * worldTransform.b + sin * worldTransform.d);\n                const scaleY = Math.hypot(-sin * worldTransform.a + cos * worldTransform.c, -sin * worldTransform.b + cos * worldTransform.d);\n                localBounds.pad(scaleX * this.boundsPadding.x, scaleY * this.boundsPadding.y);\n            } else {\n                const transform = target.transform;\n                worldTransform.a = transform.scale.x;\n                worldTransform.b = 0;\n                worldTransform.c = 0;\n                worldTransform.d = transform.scale.y;\n                worldTransform.tx = transform.position.x - transform.pivot.x * transform.scale.x;\n                worldTransform.ty = transform.position.y - transform.pivot.y * transform.scale.y;\n                worldTransform.prepend(target.parent.transform.worldTransform);\n                worldTransform.invert();\n                const scaleX = Math.hypot(worldTransform.a, worldTransform.b);\n                const scaleY = Math.hypot(worldTransform.c, worldTransform.d);\n                localBounds.pad(scaleX * this.boundsPadding.x, scaleY * this.boundsPadding.y);\n            }\n            filterMatrix.prepend(worldTransform);\n            filterMatrix.translate(-localBounds.x, -localBounds.y);\n            filterMatrix.scale(1.0 / localBounds.width, 1.0 / localBounds.height);\n            const filterMatrixInverse = this.uniforms.filterMatrixInverse;\n            if (filterMatrixInverse) {\n                filterMatrixInverse.copyFrom(filterMatrix);\n                filterMatrixInverse.invert();\n            }\n        }\n        filterManager.applyFilter(this, input, output, clear);\n    }\n}\n\n\nconst $1a41de9de96a61b4$export$93b7586d956c930e = `\r\nvarying vec2 vTextureCoord;\r\nuniform sampler2D uSampler;\r\nuniform float alpha;\r\nuniform vec3 color;\r\n\r\nuniform vec2 shift;\r\nuniform vec4 inputSize;\r\n\r\nvoid main(void){\r\n    vec4 sample = texture2D(uSampler, vTextureCoord - shift * inputSize.zw);\r\n\r\n    // Premultiply alpha\r\n    sample.rgb = color.rgb * sample.a;\r\n\r\n    // alpha user alpha\r\n    sample *= alpha;\r\n\r\n    gl_FragColor = sample;\r\n}\r\n`;\n\n\n// Custom vertex shader with filterLocalCoord()\nconst $7b2095add72e19b6$export$c6eb01d07cc2e1e8 = `\r\nprecision mediump float;\r\n\r\nattribute vec2 aVertexPosition;\r\n\r\nuniform mat3 projectionMatrix;\r\nuniform mat3 filterMatrix;\r\nuniform vec4 inputSize;\r\nuniform vec4 outputFrame;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\nvec4 filterVertexPosition( void )\r\n{\r\n    vec2 position = aVertexPosition * max(outputFrame.zw, vec2(0.)) + outputFrame.xy;\r\n\r\n    return vec4((projectionMatrix * vec3(position, 1.0)).xy, 0., 1.);\r\n}\r\n\r\nvec2 filterTextureCoord( void )\r\n{\r\n    return aVertexPosition * (outputFrame.zw * inputSize.zw);\r\n}\r\n\r\nvoid main(void)\r\n{\r\n    gl_Position = filterVertexPosition();\r\n    vTextureCoord = filterTextureCoord();\r\n    vFilterCoord = (filterMatrix * vec3(vTextureCoord, 1.0)).xy;\r\n}\r\n`;\n\n\n\nclass $7e8c6d1eefd54dec$export$f371526a665ed48 extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    shadowOnly;\n    angle = 45;\n    _distance = 5;\n    _resolution = PIXI.settings.FILTER_RESOLUTION;\n    _tintFilter;\n    _blurFilter;\n    constructor(options = {}){\n        super();\n        const opt = options ? {\n            ...$7e8c6d1eefd54dec$export$f371526a665ed48.defaults,\n            ...options\n        } : $7e8c6d1eefd54dec$export$f371526a665ed48.defaults;\n        const { kernels: kernels, blur: blur, quality: quality, resolution: resolution } = opt;\n        this._tintFilter = new PIXI.Filter((0, $7b2095add72e19b6$export$c6eb01d07cc2e1e8), (0, $1a41de9de96a61b4$export$93b7586d956c930e));\n        this._tintFilter.uniforms.color = new Float32Array(4);\n        this._tintFilter.uniforms.shift = new PIXI.Point();\n        this._tintFilter.resolution = resolution;\n        this._blurFilter = kernels ? new PIXI.filters.KawaseBlurFilter(kernels) : new PIXI.filters.KawaseBlurFilter(blur, quality);\n        this._pixelSize = 1.0;\n        this.resolution = resolution;\n        const { shadowOnly: shadowOnly, rotation: rotation, distance: distance, alpha: alpha, color: color } = opt;\n        this.shadowOnly = shadowOnly;\n        this.rotation = rotation;\n        this.distance = distance;\n        this.alpha = alpha;\n        this.color = color;\n    }\n    apply(filterManager, input, output, clear) {\n        this._updateShiftAndScale();\n        const target = filterManager.getFilterTexture();\n        this._tintFilter.apply(filterManager, input, target, 1);\n        this._blurFilter.apply(filterManager, target, output, clear);\n        if (this.shadowOnly !== true) filterManager.applyFilter(this, input, output, 0);\n        filterManager.returnFilterTexture(target);\n    }\n    _updateShiftAndScale() {\n        const scale = this.targetPlaceable?.worldTransform.a ?? 1.0;\n        this._tintFilter.uniforms.shift.set(this.distance * Math.cos(this.angle) * scale, this.distance * Math.sin(this.angle) * scale);\n        this._pixelSize = Math.max(1.0, 1.0 * scale);\n    }\n    get resolution() {\n        return this._resolution;\n    }\n    set resolution(value) {\n        this._resolution = value;\n        if (this._tintFilter) this._tintFilter.resolution = value;\n        if (this._blurFilter) this._blurFilter.resolution = value;\n    }\n    get distance() {\n        return this._distance;\n    }\n    set distance(value) {\n        this._distance = value;\n    }\n    get rotation() {\n        return this.angle / PIXI.DEG_TO_RAD;\n    }\n    set rotation(value) {\n        this.angle = value * PIXI.DEG_TO_RAD;\n    }\n    get alpha() {\n        return this._tintFilter.uniforms.alpha;\n    }\n    set alpha(value) {\n        this._tintFilter.uniforms.alpha = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this._tintFilter.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this._tintFilter.uniforms.color);\n    }\n    get kernels() {\n        return this._blurFilter.kernels;\n    }\n    set kernels(value) {\n        this._blurFilter.kernels = value;\n    }\n    get blur() {\n        return this._blurFilter.blur;\n    }\n    set blur(value) {\n        this._blurFilter.blur = value;\n    }\n    get quality() {\n        return this._blurFilter.quality;\n    }\n    set quality(value) {\n        this._blurFilter.quality = value;\n    }\n    get _pixelSize() {\n        return this._blurFilter.pixelSize;\n    }\n    set _pixelSize(value) {\n        this._blurFilter.pixelSize = value;\n    }\n}\n$7e8c6d1eefd54dec$export$f371526a665ed48.defaults = {\n    rotation: 45,\n    distance: 5,\n    color: 0x000000,\n    alpha: 0.5,\n    shadowOnly: false,\n    kernels: null,\n    blur: 2,\n    quality: 3,\n    resolution: PIXI.settings.FILTER_RESOLUTION\n};\n\n\nclass $08d037e0a0fb0db5$export$3fa21fd22495d321 extends (0, $7e8c6d1eefd54dec$export$f371526a665ed48) {\n    constructor(params){\n        super();\n        this.enabled = false;\n        this.rotation = 45;\n        this.distance = 5;\n        this.color = 0x000000;\n        this.alpha = 0.5;\n        this.shadowOnly = false;\n        this.blur = 2;\n        this.quality = 3;\n        this.padding = 10;\n        this.zOrder = 110;\n        this.animated = {};\n        this.resolution = game.settings.get(\"core\", \"pixelRatioResolutionScaling\") ? window.devicePixelRatio : PIXI.settings.FILTER_RESOLUTION;\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n        this.autoFit = false;\n    }\n}\n\n\n\n\nclass $8704f3a7b8eb8233$export$f4e603bceef0312b extends PIXI.filters.TwistFilter {\n    constructor(params){\n        super();\n        this.enabled = false;\n        this.radiusPercent = 50;\n        this.angle = 4;\n        this.zOrder = 240;\n        this.animated = {};\n        this.offset = [\n            0,\n            0\n        ];\n        this.autoFit = false;\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    handleTransform() {\n        this.offset[0] = this.placeableImg.worldTransform.tx;\n        this.offset[1] = this.placeableImg.worldTransform.ty;\n        this.radius = Math.max(this.placeableImg.width, this.placeableImg.height) * this.targetPlaceable.worldTransform.a * this.radiusPercent / 200;\n    }\n}\n\n\n\n\nclass $3592e136c2b5345d$export$767afdf6d9357594 extends PIXI.filters.ZoomBlurFilter {\n    constructor(params){\n        super();\n        this.enabled = false;\n        this.strength = 0.1;\n        this.radiusPercent = 50;\n        this.innerRadiusPercent = 10;\n        this.zOrder = 300;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    handleTransform(state) {\n        this.center[0] = 0.5 * state.sourceFrame.width;\n        this.center[1] = 0.5 * state.sourceFrame.height;\n        this.radius = Math.max(this.placeableImg.width, this.placeableImg.height) * this.targetPlaceable.worldTransform.a * this.radiusPercent / 200;\n        this.innerRadius = Math.max(this.placeableImg.width, this.placeableImg.height) * this.targetPlaceable.worldTransform.a * this.innerRadiusPercent / 200;\n    }\n}\n\n\n\n\n\nclass $3bfb825742152616$export$680aca7df3d87905 extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    blurXFilter;\n    blurYFilter;\n    _repeatEdgePixels;\n    constructor(strength = 8, quality = 4, resolution = PIXI.settings.FILTER_RESOLUTION, kernelSize = 5){\n        super();\n        this.blurXFilter = new $3bfb825742152616$export$7c9ef492c949f871(true, strength, quality, resolution, kernelSize);\n        this.blurYFilter = new $3bfb825742152616$export$7c9ef492c949f871(false, strength, quality, resolution, kernelSize);\n        this.resolution = resolution;\n        this.quality = quality;\n        this.blur = strength;\n        this.repeatEdgePixels = false;\n    }\n    apply(filterManager, input, output, clearMode) {\n        const xStrength = Math.abs(this.blurXFilter.strength);\n        const yStrength = Math.abs(this.blurYFilter.strength);\n        if (xStrength && yStrength) {\n            const renderTarget = filterManager.getFilterTexture();\n            this.blurXFilter.apply(filterManager, input, renderTarget, PIXI.CLEAR_MODES.CLEAR);\n            this.blurYFilter.apply(filterManager, renderTarget, output, clearMode);\n            filterManager.returnFilterTexture(renderTarget);\n        } else if (yStrength) this.blurYFilter.apply(filterManager, input, output, clearMode);\n        else this.blurXFilter.apply(filterManager, input, output, clearMode);\n    }\n    updatePadding() {\n        if (this._repeatEdgePixels) this.padding = 0;\n        else this.padding = Math.max(Math.abs(this.blurXFilter.strength), Math.abs(this.blurYFilter.strength)) * 2;\n    }\n    get blur() {\n        return this.blurXFilter.blur;\n    }\n    set blur(value) {\n        this.blurXFilter.blur = this.blurYFilter.blur = value;\n        this.updatePadding();\n    }\n    get quality() {\n        return this.blurXFilter.quality;\n    }\n    set quality(value) {\n        this.blurXFilter.quality = this.blurYFilter.quality = value;\n    }\n    get blurX() {\n        return this.blurXFilter.blur;\n    }\n    set blurX(value) {\n        this.blurXFilter.blur = value;\n        this.updatePadding();\n    }\n    get blurY() {\n        return this.blurYFilter.blur;\n    }\n    set blurY(value) {\n        this.blurYFilter.blur = value;\n        this.updatePadding();\n    }\n    get blendMode() {\n        return this.blurYFilter.blendMode;\n    }\n    set blendMode(value) {\n        this.blurYFilter.blendMode = value;\n    }\n    get repeatEdgePixels() {\n        return this._repeatEdgePixels;\n    }\n    set repeatEdgePixels(value) {\n        this._repeatEdgePixels = value;\n        this.updatePadding();\n    }\n}\nclass $3bfb825742152616$export$7c9ef492c949f871 extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    horizontal;\n    strength;\n    passes;\n    _quality;\n    constructor(horizontal, strength = 8, quality = 4, resolution = PIXI.settings.FILTER_RESOLUTION, kernelSize = 5){\n        const vertSrc = $3bfb825742152616$export$7a7fb9d9d09c33af(kernelSize, horizontal);\n        const fragSrc = $3bfb825742152616$export$1b0dcf101eb6a1c9(kernelSize);\n        super(// vertex shader\n        vertSrc, // fragment shader\n        fragSrc);\n        this.horizontal = horizontal;\n        this.resolution = resolution;\n        this._quality = 0;\n        this.quality = quality;\n        this.blur = strength;\n    }\n    apply(filterManager, input, output, clearMode) {\n        if (output) {\n            if (this.horizontal) this.uniforms.strength = 1 / output.width * (output.width / input.width);\n            else this.uniforms.strength = 1 / output.height * (output.height / input.height);\n        } else if (this.horizontal) this.uniforms.strength = 1 / filterManager.renderer.width * (filterManager.renderer.width / input.width);\n        else this.uniforms.strength = 1 / filterManager.renderer.height * (filterManager.renderer.height / input.height);\n        // screen space!\n        this.uniforms.strength *= this.strength;\n        this.uniforms.strength /= this.passes;\n        if (this.passes === 1) filterManager.applyFilter(this, input, output, clearMode);\n        else {\n            const renderTarget = filterManager.getFilterTexture();\n            const renderer = filterManager.renderer;\n            let flip = input;\n            let flop = renderTarget;\n            this.state.blend = false;\n            filterManager.applyFilter(this, flip, flop, PIXI.CLEAR_MODES.CLEAR);\n            for(let i = 1; i < this.passes - 1; i++){\n                filterManager.bindAndClear(flip, PIXI.CLEAR_MODES.BLIT);\n                this.uniforms.uSampler = flop;\n                const temp = flop;\n                flop = flip;\n                flip = temp;\n                renderer.shader.bind(this);\n                renderer.geometry.draw(5);\n            }\n            this.state.blend = true;\n            filterManager.applyFilter(this, flop, output, clearMode);\n            filterManager.returnFilterTexture(renderTarget);\n        }\n    }\n    get blur() {\n        return this.strength;\n    }\n    set blur(value) {\n        this.padding = 1 + Math.abs(value) * 2;\n        this.strength = value;\n    }\n    get quality() {\n        return this._quality;\n    }\n    set quality(value) {\n        this._quality = value;\n        this.passes = value;\n    }\n}\nconst $3bfb825742152616$var$GAUSSIAN_VALUES = {\n    5: [\n        0.153388,\n        0.221461,\n        0.250301\n    ],\n    7: [\n        0.071303,\n        0.131514,\n        0.189879,\n        0.214607\n    ],\n    9: [\n        0.028532,\n        0.067234,\n        0.124009,\n        0.179044,\n        0.20236\n    ],\n    11: [\n        0.0093,\n        0.028002,\n        0.065984,\n        0.121703,\n        0.175713,\n        0.198596\n    ],\n    13: [\n        0.002406,\n        0.009255,\n        0.027867,\n        0.065666,\n        0.121117,\n        0.174868,\n        0.197641\n    ],\n    15: [\n        0.000489,\n        0.002403,\n        0.009246,\n        0.02784,\n        0.065602,\n        0.120999,\n        0.174697,\n        0.197448\n    ]\n};\nconst $3bfb825742152616$var$fragTemplate = [\n    \"varying vec2 vBlurTexCoords[%size%];\",\n    \"uniform sampler2D uSampler;\",\n    \"void main(void)\",\n    \"{\",\n    \"    gl_FragColor = vec4(0.0);\",\n    \"    %blur%\",\n    \"}\"\n].join(\"\\n\");\nfunction $3bfb825742152616$export$1b0dcf101eb6a1c9(kernelSize) {\n    const kernel = $3bfb825742152616$var$GAUSSIAN_VALUES[kernelSize];\n    const halfLength = kernel.length;\n    let fragSource = $3bfb825742152616$var$fragTemplate;\n    let blurLoop = \"\";\n    const template = \"gl_FragColor += texture2D(uSampler, vBlurTexCoords[%index%]) * %value%;\";\n    let value;\n    for(let i = 0; i < kernelSize; i++){\n        let blur = template.replace(\"%index%\", i.toString());\n        value = i;\n        if (i >= halfLength) value = kernelSize - i - 1;\n        blur = blur.replace(\"%value%\", kernel[value].toString());\n        blurLoop += blur;\n        blurLoop += \"\\n\";\n    }\n    fragSource = fragSource.replace(\"%blur%\", blurLoop);\n    fragSource = fragSource.replace(\"%size%\", kernelSize.toString());\n    return fragSource;\n}\nconst $3bfb825742152616$var$vertTemplate = `\r\n    attribute vec2 aVertexPosition;\r\n    uniform mat3 projectionMatrix;\r\n    uniform float strength;\r\n    varying vec2 vBlurTexCoords[%size%];\r\n    uniform vec4 inputSize;\r\n    uniform vec4 outputFrame;\r\n    vec4 filterVertexPosition( void )\r\n    {\r\n        vec2 position = aVertexPosition * max(outputFrame.zw, vec2(0.)) + outputFrame.xy;\r\n        return vec4((projectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);\r\n    }\r\n    vec2 filterTextureCoord( void )\r\n    {\r\n        return aVertexPosition * (outputFrame.zw * inputSize.zw);\r\n    }\r\n    void main(void)\r\n    {\r\n        gl_Position = filterVertexPosition();\r\n        vec2 textureCoord = filterTextureCoord();\r\n        %blur%\r\n    }`;\nfunction $3bfb825742152616$export$7a7fb9d9d09c33af(kernelSize, x) {\n    const halfLength = Math.ceil(kernelSize / 2);\n    let vertSource = $3bfb825742152616$var$vertTemplate;\n    let blurLoop = \"\";\n    let template;\n    if (x) template = \"vBlurTexCoords[%index%] =  textureCoord + vec2(%sampleIndex% * strength, 0.0);\";\n    else template = \"vBlurTexCoords[%index%] =  textureCoord + vec2(0.0, %sampleIndex% * strength);\";\n    for(let i = 0; i < kernelSize; i++){\n        let blur = template.replace(\"%index%\", i.toString());\n        blur = blur.replace(\"%sampleIndex%\", `${i - (halfLength - 1)}.0`);\n        blurLoop += blur;\n        blurLoop += \"\\n\";\n    }\n    vertSource = vertSource.replace(\"%blur%\", blurLoop);\n    vertSource = vertSource.replace(\"%size%\", kernelSize.toString());\n    return vertSource;\n}\nfunction $3bfb825742152616$export$5a54b7935b71e7fb(gl) {\n    const maxVaryings = PIXI.gl.getParameter(PIXI.gl.MAX_VARYING_VECTORS);\n    let kernelSize = 15;\n    while(kernelSize > maxVaryings)kernelSize -= 2;\n    return kernelSize;\n}\n\n\nclass $ee208d7c0ba797cd$export$efc74ab3983784c5 extends (0, $3bfb825742152616$export$680aca7df3d87905) {\n    constructor(params){\n        super();\n        this.enabled = false;\n        this.blur = 2;\n        this.quality = 4;\n        this.zOrder = 290;\n        this.repeatEdgePixels = false;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get blur() {\n        return this.strengthX;\n    }\n    set blur(value) {\n        this.strengthX = this.strengthY = value;\n    }\n    get blurX() {\n        return this.strengthX;\n    }\n    set blurX(value) {\n        this.strengthX = value;\n    }\n    get blurY() {\n        return this.strengthY;\n    }\n    set blurY(value) {\n        this.strengthY = value;\n    }\n    calculatePadding() {\n        const scale = this.targetPlaceable.worldTransform.a;\n        this.blurXFilter.blur = scale * this.strengthX;\n        this.blurYFilter.blur = scale * this.strengthY;\n        this.updatePadding();\n        super.calculatePadding();\n    }\n}\n\n\n\n\nclass $9bb93ce0cae67db4$export$985076e41ccfd508 extends PIXI.filters.ShockwaveFilter {\n    constructor(params){\n        super();\n        this.enabled = false;\n        this.time = 0;\n        this.amplitude = 5;\n        this.wavelength = 100;\n        this.speed = 50.0;\n        this.brightness = 1.5;\n        this.radius = 200;\n        this.zOrder = 220;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    handleTransform(state) {\n        this.center[0] = 0.5 * state.sourceFrame.width;\n        this.center[1] = 0.5 * state.sourceFrame.height;\n    }\n}\n\n\n\n\nclass $b0a48ef8c9dc39a0$export$c1f4d37fd591fb01 extends PIXI.filters.BulgePinchFilter {\n    constructor(params){\n        super();\n        this.strength = 0;\n        this.radiusPercent = 100;\n        this.zOrder = 140;\n        this.autoFit = false;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n        // Anchor point\n        this.center = [\n            0.5,\n            0.5\n        ];\n    }\n    handleTransform() {\n        this.radius = Math.max(this.placeableImg.width, this.placeableImg.height) * this.targetPlaceable.worldTransform.a * this.radiusPercent / 200;\n    }\n}\n\n\nconst $e5b4e186501e4ef7$export$1cb17df05ce7da23 = `\r\nprecision mediump float;\r\nvarying vec2 vTextureCoord;\r\nuniform sampler2D uSampler;\r\nuniform float alphaTolerance;\r\n\r\nvoid main(void) {\r\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\r\n    if (pixel.a <= alphaTolerance) {\r\n        pixel = vec4(0.);\r\n    } \r\n    gl_FragColor = pixel;\r\n}\r\n`;\n\n\n\n\n\nclass $4681772edff39fb8$export$228231731d6adde3 extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { alphaTolerance: alphaTolerance } = Object.assign({}, $4681772edff39fb8$export$228231731d6adde3.defaults, params);\n        // using the default vertex shader and the specific fragment shader\n        super(undefined, (0, $e5b4e186501e4ef7$export$1cb17df05ce7da23));\n        Object.assign(this, {\n            alphaTolerance: alphaTolerance\n        });\n        this.zOrder = 10;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get alphaTolerance() {\n        return this.uniforms.alphaTolerance;\n    }\n    set alphaTolerance(value) {\n        this.uniforms.alphaTolerance = value;\n    }\n}\n$4681772edff39fb8$export$228231731d6adde3.defaults = {\n    alphaTolerance: 0.8\n};\n\n\nconst $4a5ad26bdc269910$export$9d94b322741e1813 = `\r\nprecision mediump float;\r\nprecision mediump int;\r\n\r\nuniform sampler2D uSampler;\r\nuniform float time;\r\nuniform vec2 dimensions;\r\nuniform vec2 anchor;\r\nuniform vec4 color;\r\nuniform float divisor;\r\nuniform bool alphaDiscard;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\nfloat PI = 3.14159265359;\r\nfloat speed = 1.2;\r\nfloat width = 0.5;\r\nfloat subdivide = 512.0;\r\n\r\nvoid main() {\r\n\r\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\r\n    if (pixel.a==0.) {\r\n       gl_FragColor = pixel;\r\n       return;\r\n    }\r\n\r\n    vec2 uv = (vFilterCoord - anchor) / dimensions;    \r\n    float len = length(uv *0.5),\r\n   \t\tangle = ( atan(uv.x, uv.y) / ( 2. * PI) ) + 1.5,\r\n    \twobble = 48. + 24. * cos(time/5.),\r\n    \twhite = fract((angle) * divisor + sin((sqrt(len) * wobble) - time * speed));\r\n    \r\n    white  = 2.* cos(white / (PI * 0.1));\r\n    white *= floor(fract(angle * divisor + sin(time / speed - (len * 1.2) * wobble)) *subdivide) / subdivide;\r\n    \r\n    vec4 color1 = smoothstep(0., 1., white * color);\r\n    vec4 result = mix(pixel, color1, color1.a);\r\n    if (alphaDiscard && all(lessThanEqual(result.rgb,vec3(0.05)))) discard;\r\n    gl_FragColor = result*pixel.a;\r\n}\r\n`;\n\n\n\n\n\n\nclass $7eb8251b5cefe8f6$export$1992e0dceaf7be8 extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, divisor: divisor, alpha: alpha, anchorX: anchorX, anchorY: anchorY, dimX: dimX, dimY: dimY, alphaDiscard: alphaDiscard } = Object.assign({}, $7eb8251b5cefe8f6$export$1992e0dceaf7be8.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $7b2095add72e19b6$export$c6eb01d07cc2e1e8), (0, $4a5ad26bdc269910$export$9d94b322741e1813));\n        this.uniforms.color = new Float32Array([\n            1.0,\n            0.4,\n            0.1,\n            0.55\n        ]);\n        this.uniforms.anchor = new Float32Array([\n            0.5,\n            0.5\n        ]);\n        this.uniforms.dimensions = new Float32Array([\n            1.0,\n            1.0\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            divisor: divisor,\n            alpha: alpha,\n            anchorX: anchorX,\n            anchorY: anchorY,\n            dimX: dimX,\n            dimY: dimY,\n            alphaDiscard: alphaDiscard\n        });\n        this.zOrder = 120;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get divisor() {\n        return this.uniforms.divisor;\n    }\n    set divisor(value) {\n        this.uniforms.divisor = value;\n    }\n    get alpha() {\n        return this.uniforms.color[3];\n    }\n    set alpha(value) {\n        if (value >= 0 && value <= 1) this.uniforms.color[3] = value;\n    }\n    get anchorX() {\n        return this.uniforms.anchor[0];\n    }\n    set anchorX(value) {\n        this.uniforms.anchor[0] = value;\n    }\n    get anchorY() {\n        return this.uniforms.anchor[1];\n    }\n    set anchorY(value) {\n        this.uniforms.anchor[1] = value;\n    }\n    get dimX() {\n        return this.uniforms.dimensions[0];\n    }\n    set dimX(value) {\n        this.uniforms.dimensions[0] = value;\n    }\n    get dimY() {\n        return this.uniforms.dimensions[1];\n    }\n    set dimY(value) {\n        this.uniforms.dimensions[1] = value;\n    }\n    get alphaDiscard() {\n        return this.uniforms.alphaDiscard;\n    }\n    set alphaDiscard(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.alphaDiscard = value;\n    }\n}\n$7eb8251b5cefe8f6$export$1992e0dceaf7be8.defaults = {\n    time: 0.0,\n    color: 0xff8010,\n    divisor: 16,\n    alpha: 0.55,\n    anchorX: 0.5,\n    anchorY: 0.5,\n    dimX: 100,\n    dimY: 100,\n    alphaDiscard: false\n};\n\n\nconst $77fe101b8af69ecc$export$cfdade87b894d58e = `\r\nprecision mediump float;\r\n\r\nuniform float time;\r\nuniform vec3 color;\r\nuniform float density;\r\nuniform vec2 dimensions;\r\nuniform sampler2D uSampler;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\n// generates pseudo-random based on screen position\r\nfloat random(vec2 pos) \r\n{\r\n\treturn fract(sin(dot(pos.xy, vec2(12.9898, 78.233))) * 43758.5453123);\r\n}\r\n\r\n// perlin noise\r\nfloat noise(vec2 pos) \r\n{\r\n\tvec2 i = floor(pos);\r\n\tvec2 f = fract(pos);\r\n\tfloat a = random(i + vec2(0.0, 0.0));\r\n\tfloat b = random(i + vec2(1.0, 0.0));\r\n\tfloat c = random(i + vec2(0.0, 1.0));\r\n\tfloat d = random(i + vec2(1.0, 1.0));\r\n\tvec2 u = f * f * (3.0 - 2.0 * f);\r\n\treturn mix(a, b, u.x) + (c - a) * u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\r\n}\r\n\r\n// fractional brownian motion\r\nfloat fbm(vec2 pos) \r\n{\r\n\tfloat v = 0.0;\r\n\tfloat a = 0.5;\r\n\tvec2 shift = vec2(100.);\r\n\tmat2 rot = mat2(cos(0.5), sin(0.5), -sin(0.5), cos(0.5));\r\n\tfor (int i=0; i<16; i++) \r\n\t{\r\n\t\tv = (sin(v*1.07)) + ( a * noise(pos) );\r\n\t\tpos = rot * pos * 1.9 + shift;\r\n\t\ta *= 0.5;\r\n\t}\r\n\treturn v;\r\n}\r\n\r\nmat4 contrastMatrix(float contrast)\r\n{\r\n\tfloat t = ( 1.0 - contrast ) * 0.5;\r\n    \r\n    return mat4( contrast, 0, 0, 0,\r\n                 0, contrast, 0, 0,\r\n                 0, 0, contrast, 0,\r\n                 t, t, t, 1 );\r\n}\r\n\r\nvec4 fog()\r\n{\r\n\tvec2 p = (vFilterCoord.xy * 8. - vFilterCoord.xy) * dimensions;\r\n\t\r\n\tfloat time2 = time * 0.0025;\r\n\t\r\n\tvec2 q = vec2(0.0);\r\n\tq.x = fbm(p);\r\n\tq.y = fbm(p);\r\n\tvec2 r = vec2(-1.0);\r\n\tr.x = fbm(p * q + vec2(1.7, 9.2) + .15 * time2);\r\n\tr.y = fbm(p * q + vec2(9.3, 2.8) + .35 * time2);\r\n\tfloat f = fbm(p*.2 + r*3.102);\r\n\r\n\tvec4 fogPixel = mix(\r\n\t\tvec4(color,1.0),\r\n\t\tvec4(1.5, 1.5, 1.5, 1.5),\r\n\t\tclamp(length(r.x), 0.4, 1.)\r\n\t);\r\n\r\n\treturn (f *f * f + 0.6 * f * f + 0.5 * f) * fogPixel;\r\n}\r\n\r\nvoid main(void) \r\n{\r\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\r\n\r\n    // to avoid computation on an invisible pixel.\r\n    if (pixel.a == 0.) {\r\n\t\tgl_FragColor = pixel;\r\n\t\treturn;\r\n    }\r\n\r\n\tvec4 fogPixel = contrastMatrix(3.0)*fog();\r\n    gl_FragColor = mix(pixel, fogPixel, 1.*density) * pixel.a;\r\n}\r\n`;\n\n\n\n\n\nclass $68fc188eb5f24493$export$f17580ed76af4408 extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, density: density, dimX: dimX, dimY: dimY } = Object.assign({}, $68fc188eb5f24493$export$f17580ed76af4408.defaults, params);\n        // specific vertex and fragment shaders\n        super((0, $7b2095add72e19b6$export$c6eb01d07cc2e1e8), (0, $77fe101b8af69ecc$export$cfdade87b894d58e));\n        this.uniforms.color = new Float32Array([\n            1.0,\n            0.4,\n            0.1,\n            0.55\n        ]);\n        this.uniforms.dimensions = new Float32Array([\n            1.0,\n            1.0\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            density: density,\n            dimX: dimX,\n            dimY: dimY\n        });\n        this.zOrder = 190;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get density() {\n        return this.uniforms.density;\n    }\n    set density(value) {\n        this.uniforms.density = value;\n    }\n    get dimX() {\n        return this.uniforms.dimensions[0];\n    }\n    set dimX(value) {\n        this.uniforms.dimensions[0] = value;\n    }\n    get dimY() {\n        return this.uniforms.dimensions[1];\n    }\n    set dimY(value) {\n        this.uniforms.dimensions[1] = value;\n    }\n}\n$68fc188eb5f24493$export$f17580ed76af4408.defaults = {\n    time: 0.0,\n    color: 0xffffff,\n    density: 0.5,\n    dimX: 1.0,\n    dimY: 1.0\n};\n\n\nconst $4132b0ad2bf00551$export$562c6f8151c36426 = `\r\nprecision mediump float;\r\n\r\nuniform float time;\r\nuniform vec3 color;\r\nuniform bool alphaDiscard;\r\nuniform sampler2D uSampler;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\nconst float PI = 3.14159265;\r\nconst mat3 rotationMatrix = mat3(1.0,0.0,0.0,0.0,0.47,-0.88,0.0,0.88,0.47);\r\n\t\r\nfloat hash(float p)\r\n{\r\n    return fract(sin(dot(vec2(p*0.00010,0.),vec2(12.9898,78.233))) * 43758.5453);\r\n}\r\n\r\nfloat noise( vec3 x )\r\n{\r\n    vec3 p = floor(x);\r\n    vec3 f = fract(x);\r\n    f = f*f*(3.0-2.0*f);\r\n    float n = p.x + p.y*57.0 + 113.0*p.z;\r\n    return mix(mix(mix( hash(n+0.0  ), hash(n+1.0),f.x),mix( hash(n+57.0 ), hash(n+58.0 ),f.x),f.y),\r\n           mix(mix( hash(n+113.0), hash(n+114.0),f.x),mix( hash(n+170.0), hash(n+171.0),f.x),f.y),f.z);\r\n} \r\n\r\nvec4 map( vec3 p )\r\n{\r\n\tfloat d = 0.2 - p.y;\t\r\n\tvec3 q = p  - vec3(0.0,1.0,0.0)*time;\r\n\tfloat f  = 0.5*noise( q ); q = q*2.02 - vec3(0.25,0.25,0.25)*time*0.4;\r\n\tf += 0.25*noise( q ); \r\n    q = q*2.03 - vec3(0.0,1.0,0.0)*time*0.2;\r\n\tf += 0.125*noise( q ); \r\n\td = clamp( d + 4.5*f, 0.0, 1.0 );\r\n\tvec3 col = mix( vec3(0.9,0.9,0.9), vec3(0.1,0.1,0.1), d ) + 0.05*sin(p);\r\n\treturn vec4( col, d );\r\n}\r\n\r\nvec3 cloudify( vec3 ro, vec3 rd )\r\n{\r\n\tvec4 s = vec4(0.);\r\n\tfloat t = 0.0;\r\n    vec3 col = color*0.75;\r\n    vec3 p;\r\n    vec4 k;\r\n\r\n\tfor( int i=0; i<90; i++ )\r\n\t{\r\n\t\tif( s.a > 0.97 ) break;\r\n\t\tp = ro + t*rd;\r\n\t\tk = map( p );\r\n\t\tk.rgb *= mix( col, color, clamp( (p.y-0.2)*0.5, 0.0, 1.0 ) );\r\n\t\tk.a *= 0.5;\r\n\t\tk.rgb *= k.a;\r\n\t\ts = s + k*(1.0-s.a);\t\r\n\t\tt += 0.05;\r\n\t}\r\n\treturn clamp( s.xyz, 0.0, 1.0 );\r\n}\r\n\r\nvec4 xfog()\r\n{\r\n\tvec3 vo = vec3(0.0,4.9,-40.);\r\n\tvec3 vd = normalize(vec3(vFilterCoord.xy, 1.)) * rotationMatrix * 2.25;\r\n\tvec3 volume = cloudify( vo, vd );\r\n\tvolume *= volume;\r\n\treturn vec4( volume, 1.0 );\r\n}\r\n\r\nvoid main() \r\n{\r\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\r\n    if (pixel.a == 0.) discard;\r\n    vec4 result = max( xfog(), pixel) * pixel.a;\r\n    if (alphaDiscard && all(lessThanEqual(result.rgb,vec3(0.15)))) discard;\r\n    gl_FragColor = result;\r\n}\r\n`;\n\n\n\n\n\nclass $dc989832d8d10a8f$export$da3eec8748131849 extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, alphaDiscard: alphaDiscard } = Object.assign({}, $dc989832d8d10a8f$export$da3eec8748131849.defaults, params);\n        // specific vertex and fragment shaders\n        super((0, $7b2095add72e19b6$export$c6eb01d07cc2e1e8), (0, $4132b0ad2bf00551$export$562c6f8151c36426));\n        this.uniforms.color = new Float32Array([\n            1.0,\n            0.4,\n            0.1,\n            0.55\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            alphaDiscard: alphaDiscard\n        });\n        this.zOrder = 230;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get alphaDiscard() {\n        return this.uniforms.alphaDiscard;\n    }\n    set alphaDiscard(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.alphaDiscard = value;\n    }\n}\n$dc989832d8d10a8f$export$da3eec8748131849.defaults = {\n    time: 0.0,\n    color: 0xffffff,\n    alphaDiscard: false\n};\n\n\nconst $e9df73d5fa4b7fb2$export$196e9e3d20e4131 = `\r\nprecision mediump float;\r\nprecision mediump int;\r\n\r\n#define INTENSITY 5\r\n\r\nconst float PI = 3.14159265358979323846264;\r\n\r\nuniform sampler2D uSampler;\r\nuniform vec4 color;\r\nvarying vec2 vFilterCoord;\r\nvarying vec2 vTextureCoord;\r\nuniform float time;\r\nuniform int blend;\r\n\r\nvec4 blenderVec3(int blend, vec4 fColv4, vec4 sColv4)\r\n{\r\n    vec3 fCol = vec3(fColv4);\r\n    vec3 sCol = vec3(sColv4);\r\n    if ( blend == 1) { fCol = fCol * sCol; }\r\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 3) { fCol = min(fCol, sCol); }\r\n    else if (blend == 4) { fCol = max(fCol, sCol); }\r\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\r\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\r\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\r\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\r\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol); }\r\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol; }\r\n    else if (blend == 13) { fCol = fCol + sCol; }\r\n    else { fCol = fCol + sCol; }\r\n    \r\n    return vec4(fCol,1.0);\r\n}\r\n\r\nfloat Perlin(vec3 P)\r\n{\r\n    vec3 Pi = floor(P);\r\n    vec3 Pf = P - Pi;\r\n    vec3 Pf_min1 = Pf - 1.0;\r\n\r\n    Pi.xyz = Pi.xyz - floor(Pi.xyz * (1.0 / 69.0)) * 69.0;\r\n    vec3 Pi_inc1 = step(Pi, vec3(69.0 - 1.5)) * (Pi + 1.0);\r\n\r\n    vec4 Pt = vec4(Pi.xy, Pi_inc1.xy) + vec2(50.0, 161.0).xyxy;\r\n    Pt *= Pt;\r\n    Pt = Pt.xzxz * Pt.yyww;\r\n    const vec3 SOMELARGEFLOATS = vec3(635.298681, 682.357502, 668.926525);\r\n    const vec3 ZINC = vec3(48.500388, 65.294118, 63.934599);\r\n    vec3 lowz_mod = vec3(1.0 / (SOMELARGEFLOATS + Pi.zzz * ZINC));\r\n    vec3 highz_mod = vec3(1.0 / (SOMELARGEFLOATS + Pi_inc1.zzz * ZINC));\r\n    vec4 hashx0 = fract(Pt * lowz_mod.xxxx);\r\n    vec4 hashx1 = fract(Pt * highz_mod.xxxx);\r\n    vec4 hashy0 = fract(Pt * lowz_mod.yyyy);\r\n    vec4 hashy1 = fract(Pt * highz_mod.yyyy);\r\n    vec4 hashz0 = fract(Pt * lowz_mod.zzzz);\r\n    vec4 hashz1 = fract(Pt * highz_mod.zzzz);\r\n\r\n    vec4 grad_x0 = hashx0 - 0.49999;\r\n    vec4 grad_y0 = hashy0 - 0.49999;\r\n    vec4 grad_z0 = hashz0 - 0.49999;\r\n    vec4 grad_x1 = hashx1 - 0.49999;\r\n    vec4 grad_y1 = hashy1 - 0.49999;\r\n    vec4 grad_z1 = hashz1 - 0.49999;\r\n    vec4 grad_results_0 = inversesqrt(grad_x0 * grad_x0 + grad_y0 * grad_y0 + grad_z0 * grad_z0) * (vec2(Pf.x, Pf_min1.x).xyxy * grad_x0 + vec2(Pf.y, Pf_min1.y).xxyy * grad_y0 + Pf.zzzz * grad_z0);\r\n    vec4 grad_results_1 = inversesqrt(grad_x1 * grad_x1 + grad_y1 * grad_y1 + grad_z1 * grad_z1) * (vec2(Pf.x, Pf_min1.x).xyxy * grad_x1 + vec2(Pf.y, Pf_min1.y).xxyy * grad_y1 + Pf_min1.zzzz * grad_z1);\r\n\r\n    vec3 blend = Pf * Pf * Pf * (Pf * (Pf * 6.0 - 15.0) + 10.0);\r\n    vec4 res0 = mix(grad_results_0, grad_results_1, blend.z);\r\n    vec4 blend2 = vec4(blend.xy, vec2(1.0 - blend.xy));\r\n    float final = dot(res0, blend2.zxzx * blend2.wwyy);\r\n    return (final * 1.1547005383792515290182975610039);  // scale things to a strict -1.0->1.0 range  *= 1.0/sqrt(0.75)\r\n}\r\n\r\nfloat fbm(vec3 p)\r\n{\r\n    float v = 0.0;\r\n    v += Perlin(p * 0.9) * 1.5 * cos(PI * time * 0.48);\r\n    v += Perlin(p * 3.99) * 0.5 * sin(PI * time * 0.4);\r\n    v += Perlin(p * 8.01) * 0.4 * cos(PI * time * 0.4);\r\n    v += Perlin(p * 15.05) * 0.05 * sin(PI * time * 0.8);\r\n\r\n    return v;\r\n}\r\n\r\nvec4 electric() {\r\n    vec3 noiseVec = vec3(vFilterCoord, 1.);\r\n    vec3 color = vec3(0.0);\r\n    for (int i = 0; i < INTENSITY; ++i ) {\r\n        noiseVec = noiseVec.yxz;\r\n        float t = abs(2.0 / (fbm(noiseVec + vec3(0.0, time / float(i + 4), 0.0)) * 120.0));\r\n        color += t * vec3(float(i + 1) * 0.1 + 0.1, 0.5, 2.0);\r\n    }\r\n    return vec4(color, 1.);\r\n}\r\n\r\nvoid main() {\r\n \r\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\r\n    \r\n    // to avoid computation of invisible pixels\r\n    if (pixel.a==0.) {\r\n       gl_FragColor = pixel;\r\n       return;\r\n    }\r\n    \r\n    vec4 electric = electric();\r\n    electric *= color;\r\n\r\n    gl_FragColor = blenderVec3(blend,pixel,electric)*pixel.a;\r\n}\r\n`;\n\n\n\n\n\n\nclass $e083d04444045e2e$export$22f86bc7a100befc extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, blend: blend, color: color } = Object.assign({}, $e083d04444045e2e$export$22f86bc7a100befc.defaults, params);\n        var shaderFragment;\n        if (params.hasOwnProperty(\"intensity\") && typeof params.intensity === \"number\") {\n            var intensityVal = Math.floor(params.intensity);\n            shaderFragment = (0, $e9df73d5fa4b7fb2$export$196e9e3d20e4131).replace(\"#define INTENSITY 5\", \"#define INTENSITY \" + intensityVal);\n        } else shaderFragment = (0, $e9df73d5fa4b7fb2$export$196e9e3d20e4131);\n        super((0, $7b2095add72e19b6$export$c6eb01d07cc2e1e8), shaderFragment);\n        this.uniforms.color = new Float32Array([\n            1.0,\n            1.0,\n            1.0,\n            1.0\n        ]);\n        this.uniforms.blend = 2;\n        Object.assign(this, {\n            time: time,\n            blend: blend,\n            color: color\n        });\n        this.zOrder = 160;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n        this.quality = 0.5;\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get blend() {\n        return this.uniforms.blend;\n    }\n    set blend(value) {\n        this.uniforms.blend = Math.floor(value);\n    }\n}\n$e083d04444045e2e$export$22f86bc7a100befc.defaults = {\n    time: 0.0,\n    blend: 1,\n    color: 0xffffff\n};\n\n\nconst $38cc928533bc7765$export$9f7639465b88ec7f = `\r\nprecision mediump float;\r\nprecision mediump int;\r\n\r\nuniform vec3 color;\r\nuniform vec2 anchor;\r\nuniform float time;\r\nuniform bool inward;\r\nuniform float frequency;\r\nuniform float strength;\r\nuniform float minIntensity;\r\nuniform float maxIntensity;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\nuniform sampler2D uSampler;\r\n\r\nvoid main() {\r\n\r\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\r\n    if (pixel.a==0.) {\r\n       gl_FragColor = pixel;\r\n       return;\r\n    }\r\n\r\n    float speed = inward ? 1.0 : -1.0;\r\n\r\n    vec2 centeredUVs = vFilterCoord - anchor;\r\n    float dist = length(centeredUVs);\r\n    float sinVal = sin((time * speed) + (dist * frequency));\r\n    \r\n    float sinValNormalized = sinVal * 0.5 + 0.5;\r\n    float lerp = ((maxIntensity - minIntensity) * sinValNormalized) + minIntensity;\r\n    \r\n    float rotationAmount = strength * sinVal;\r\n\r\n    float sinX = sin ( rotationAmount );\r\n    float cosX = cos ( rotationAmount );\r\n    mat2 rotationMatrix = mat2( cosX, -sinX, sinX, cosX);\r\n    vec2 newTextureCoord = vTextureCoord - vec2(0.5,0.5);\r\n\r\n    newTextureCoord = vec2(newTextureCoord * rotationMatrix ); \r\n    newTextureCoord = newTextureCoord + vec2(0.5, 0.5);     \r\n    vec4 col = texture2D(uSampler, newTextureCoord);\r\n    \r\n    col.rgb = col.rgb * color * lerp;\r\n    if (col.r != 0. && col.g != 0. && col.b != 0.) {\r\n       col.a = pixel.a;\r\n    }\r\n\r\n    gl_FragColor = col * pixel.a;\r\n}\r\n`;\n\n\n\n\n\n\nclass $052a5b7ae09fb485$export$4eeb783ef7c17da8 extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, inward: inward, frequency: frequency, strength: strength, minIntensity: minIntensity, maxIntensity: maxIntensity, anchorX: anchorX, anchorY: anchorY } = Object.assign({}, $052a5b7ae09fb485$export$4eeb783ef7c17da8.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $7b2095add72e19b6$export$c6eb01d07cc2e1e8), (0, $38cc928533bc7765$export$9f7639465b88ec7f));\n        this.uniforms.color = new Float32Array([\n            1.0,\n            1.0,\n            1.0\n        ]);\n        this.uniforms.anchor = new Float32Array([\n            0.5,\n            0.5\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            inward: inward,\n            frequency: frequency,\n            strength: strength,\n            minIntensity: minIntensity,\n            maxIntensity: maxIntensity,\n            anchorX: anchorX,\n            anchorY: anchorY\n        });\n        this.zOrder = 280;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get inward() {\n        return this.uniforms.inward;\n    }\n    set inward(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.inward = value;\n    }\n    get anchorX() {\n        return this.uniforms.anchor[0];\n    }\n    set anchorX(value) {\n        this.uniforms.anchor[0] = value;\n    }\n    get anchorY() {\n        return this.uniforms.anchor[1];\n    }\n    set anchorY(value) {\n        this.uniforms.anchor[1] = value;\n    }\n    get frequency() {\n        return this.uniforms.frequency;\n    }\n    set frequency(value) {\n        this.uniforms.frequency = value;\n    }\n    get strength() {\n        return this.uniforms.strength;\n    }\n    set strength(value) {\n        this.uniforms.strength = value;\n    }\n    get minIntensity() {\n        return this.uniforms.minIntensity;\n    }\n    set minIntensity(value) {\n        this.uniforms.minIntensity = value;\n    }\n    get maxIntensity() {\n        return this.uniforms.maxIntensity;\n    }\n    set maxIntensity(value) {\n        this.uniforms.maxIntensity = value;\n    }\n}\n$052a5b7ae09fb485$export$4eeb783ef7c17da8.defaults = {\n    time: 0,\n    color: 0xffffff,\n    inward: false,\n    frequency: 35,\n    strength: 0.01,\n    minIntensity: 1.2,\n    maxIntensity: 3.5,\n    anchorX: 0.5,\n    anchorY: 0.5\n};\n\n\nconst $bbce82a8fa9c759b$export$a47a7c04f1bc8ac = `\r\nprecision mediump float;\r\n\r\nuniform float time;\r\nuniform float amplitude;\r\nuniform float intensity;\r\nuniform int fireBlend;\r\nuniform int blend;\r\nuniform bool alphaDiscard;\r\nuniform vec2 anchor;\r\nuniform vec3 color;\r\n\r\nuniform sampler2D uSampler;\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\nfloat rand(vec2 n) \r\n{ \r\n\treturn fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nvec4 blenderVec3(int blend, vec4 fColv4, vec4 sColv4)\r\n{\r\n    vec3 fCol = vec3(fColv4);\r\n    vec3 sCol = vec3(sColv4);\r\n    if ( blend == 1) { fCol = fCol * sCol; }\r\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 3) { fCol = min(fCol, sCol); }\r\n    else if (blend == 4) { fCol = max(fCol, sCol); }\r\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\r\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\r\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\r\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\r\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol); }\r\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol; }\r\n    else if (blend == 13) { fCol = fCol + sCol; }\r\n    else { fCol = fCol + sCol; }\r\n    \r\n    return vec4(fCol,1.0);\r\n}\r\n\r\nfloat noise(vec2 n) \r\n{\r\n\tconst vec2 d = vec2(0.0, 1.0);\r\n\tvec2 b = floor(n);\r\n\tvec2 f = smoothstep(vec2(0.), vec2(1.0), fract(n));\r\n\treturn mix(mix(rand(b), rand(b + d.yx), f.x), \r\n\t       mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\r\n}\r\n\r\nfloat fbm(vec2 n) \r\n{\r\n\tfloat total = 0.0, amp = amplitude;\r\n\tfor (int i = 0; i < 7; i++) {\r\n\t\ttotal += noise(n) * amp;\r\n\t\tn += n;\r\n\t\tamp *= 0.5;\r\n\t}\r\n\treturn total;\r\n}\r\n\r\nvec4 fire() \r\n{\r\n    const vec3 c1 = vec3(0.1, 0.0, 0.);\r\n\tconst vec3 c2 = vec3(0.7, 0.0, 0.);\r\n\tconst vec3 c3 = vec3(0.2, 0.0, 0.);\r\n\tconst vec3 c4 = vec3(1.0, 0.9, 0.);\r\n\tconst vec3 c5 = vec3(0.1);\r\n\tconst vec3 c6 = vec3(0.9);\r\n    vec2 uv = vFilterCoord - anchor;\r\n\tvec2 p = uv.xy * 8.0;\r\n\tfloat q = fbm(p - time * 0.1);\r\n\tvec2 r = vec2(fbm(p + q + time * 0.7 - p.x - p.y), fbm(p + q - time * 0.4));\r\n\tvec3 c = mix(c1, c2, fbm(p + r)) + mix(c3, c4, r.x) - mix(c5, c6, r.y);\r\n\treturn vec4(c * cos(1.57/(intensity-0.03) * uv.y), 1.0);\r\n}\r\n\r\nvec4 fireBlending()\r\n{\r\n    vec4 fire = fire();\r\n    vec4 tint = vec4(color,1.0);\r\n    return blenderVec3(fireBlend,fire,tint);\r\n}\r\n\r\nvec4 resultBlending(vec4 pixel, vec4 fire)\r\n{\r\n    vec4 result = blenderVec3(blend,pixel,fire);\r\n    return result;\r\n}\r\n\r\nvoid main() \r\n{\r\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\r\n    if (pixel.a==0.) {\r\n       gl_FragColor = pixel;\r\n       return;\r\n    }\r\n\r\n    vec4 result = resultBlending(pixel, fireBlending())*pixel.a;\r\n    if (alphaDiscard && all(lessThanEqual(result.rgb,vec3(0.50)))) discard;\r\n\tgl_FragColor = result;\r\n}\r\n`;\n\n\n\n\n\n\nclass $6c6645b82b61bc37$export$fd0af22b8dd4eb46 extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, amplitude: amplitude, intensity: intensity, fireBlend: fireBlend, blend: blend, anchorX: anchorX, anchorY: anchorY, alphaDiscard: alphaDiscard } = Object.assign({}, $6c6645b82b61bc37$export$fd0af22b8dd4eb46.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $7b2095add72e19b6$export$c6eb01d07cc2e1e8), (0, $bbce82a8fa9c759b$export$a47a7c04f1bc8ac));\n        this.uniforms.color = new Float32Array([\n            1.0,\n            1.0,\n            1.0\n        ]);\n        this.uniforms.anchor = new Float32Array([\n            1.0,\n            1.0\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            amplitude: amplitude,\n            intensity: intensity,\n            fireBlend: fireBlend,\n            blend: blend,\n            anchorX: anchorX,\n            anchorY: anchorY,\n            alphaDiscard: alphaDiscard\n        });\n        this.zOrder = 150;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get amplitude() {\n        return this.uniforms.amplitude;\n    }\n    set amplitude(value) {\n        this.uniforms.amplitude = value;\n    }\n    get intensity() {\n        return this.uniforms.intensity;\n    }\n    set intensity(value) {\n        this.uniforms.intensity = value;\n    }\n    get fireBlend() {\n        return this.uniforms.fireBlend;\n    }\n    set fireBlend(value) {\n        this.uniforms.fireBlend = Math.floor(value);\n    }\n    get blend() {\n        return this.uniforms.blend;\n    }\n    set blend(value) {\n        this.uniforms.blend = Math.floor(value);\n    }\n    get anchorX() {\n        return this.uniforms.anchor[0];\n    }\n    set anchorX(value) {\n        this.uniforms.anchor[0] = value;\n    }\n    get anchorY() {\n        return this.uniforms.anchor[1];\n    }\n    set anchorY(value) {\n        this.uniforms.anchor[1] = value;\n    }\n    get alphaDiscard() {\n        return this.uniforms.alphaDiscard;\n    }\n    set alphaDiscard(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.alphaDiscard = value;\n    }\n}\n$6c6645b82b61bc37$export$fd0af22b8dd4eb46.defaults = {\n    time: 0,\n    color: 0xffffff,\n    amplitude: 1,\n    intensity: 1,\n    fireBlend: 1,\n    blend: 2,\n    anchorX: 1,\n    anchorY: 1,\n    alphaDiscard: false\n};\n\n\nconst $4d6b31e6ad31979e$export$73c22863fbcd15d3 = `\r\nprecision mediump float;\r\nprecision mediump int;\r\n\r\nuniform float time;\r\nuniform vec2 dimensions;\r\nuniform int blend;\r\nuniform vec3 color;\r\nuniform sampler2D uSampler;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\n#define TWOPI 6.28318530718\r\n\r\nvec4 toGray(in vec4 color)\r\n{\r\n  float average = (color.r + color.g + color.b) * 0.33333334;\r\n  return vec4(average, average, average, 1.0);\r\n}\r\n\r\nvec4 colorize(in vec4 grayscale, in vec4 color)\r\n{\r\n    return (grayscale * color);\r\n}\r\n\r\nvec4 blenderVec3(int blend, vec4 fColv4, vec4 sColv4)\r\n{\r\n    vec3 fCol = vec3(fColv4);\r\n    vec3 sCol = vec3(sColv4);\r\n    if ( blend == 1) { fCol = fCol * sCol; }\r\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 3) { fCol = min(fCol, sCol); }\r\n    else if (blend == 4) { fCol = max(fCol, sCol); }\r\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\r\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\r\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\r\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\r\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol); }\r\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol; }\r\n    else if (blend == 13) { fCol = fCol + sCol; }\r\n    else { fCol = fCol + sCol; }\r\n    \r\n    return vec4(fCol,1.0);\r\n}\r\n\r\nvec4 fog(vec2 fragCoord)\r\n{\r\n    float t = time * 0.26 + 23.0;\r\n    vec2 uv = fragCoord.xy * dimensions.xy;\r\n\r\n    vec2 p = mod(uv * TWOPI, TWOPI) - 250.0;\r\n    vec2 i = vec2(p);\r\n    float c = 0.75;\r\n    float intensity = 0.014;\r\n\r\n    for (int n = 0; n < 4; n++) {\r\n        float t = t * (1.0 - (3.5 / float(n + 1)));\r\n        i = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(t + i.x));\r\n        c += 1.0 / length(vec2(.5 * p.x / (sin(0.40 * i.x + t) / intensity), p.y / (cos(i.y + t) / intensity)));\r\n    }\r\n\r\n    c *= 0.16666667;\r\n    c = 1.17 - pow(c, 1.4);\r\n    vec3 colour = vec3(pow(abs(c), 8.0));\r\n\r\n    return vec4(colour * colour, 1.);\r\n}\r\n\r\n\r\nvoid main() \r\n{\r\n    vec4 pixel = texture2D(uSampler,vTextureCoord);\r\n\r\n    // to avoid computation on an invisible pixel.\r\n    if (pixel.a==0.) {\r\n        gl_FragColor = pixel;\r\n        return;\r\n    }\r\n\r\n    // fog generation.\r\n    vec4 fog = colorize(\r\n               toGray(\r\n                 fog(vFilterCoord.xy) \r\n               + fog(-vFilterCoord.xy * 0.65))\r\n                    ,vec4(color/3., 1.)) * 0.9;\r\n\r\n    // we put the fog and the pixel into the blender, and we serve, adjusted by the pixel alpha.\r\n\tgl_FragColor = blenderVec3(blend, fog, pixel) * pixel.a;\r\n}\r\n`;\n\n\n\n\n\n\nclass $74f580247129123a$export$60b593b6124d1ebc extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, blend: blend, dimX: dimX, dimY: dimY } = Object.assign({}, $74f580247129123a$export$60b593b6124d1ebc.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $7b2095add72e19b6$export$c6eb01d07cc2e1e8), (0, $4d6b31e6ad31979e$export$73c22863fbcd15d3));\n        this.uniforms.color = new Float32Array([\n            1.0,\n            1.0,\n            1.0\n        ]);\n        this.uniforms.dimensions = new Float32Array([\n            1.0,\n            1.0\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            blend: blend,\n            dimX: dimX,\n            dimY: dimY\n        });\n        this.zOrder = 210;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get blend() {\n        return this.uniforms.blend;\n    }\n    set blend(value) {\n        this.uniforms.blend = Math.floor(value);\n    }\n    get dimX() {\n        return this.uniforms.dimensions[0];\n    }\n    set dimX(value) {\n        this.uniforms.dimensions[0] = value;\n    }\n    get dimY() {\n        return this.uniforms.dimensions[1];\n    }\n    set dimY(value) {\n        this.uniforms.dimensions[1] = value;\n    }\n}\n$74f580247129123a$export$60b593b6124d1ebc.defaults = {\n    time: 0,\n    color: 0xffffff,\n    blend: 2,\n    dimX: 1,\n    dimY: 1\n};\n\n\nconst $c9111877e9b99e22$export$9fa5c76e40adf3ca = `\r\nprecision mediump float;\r\n\r\nuniform float time;\r\nuniform float scale;\r\nuniform float glint;\r\nuniform float billowy;\r\nuniform float tintIntensity;\r\nuniform vec2 shift;\r\nuniform vec3 waterColor;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\nuniform sampler2D uSampler;\r\nuniform mat3 filterMatrixInverse;\r\n\r\nconst float timeSpeed = 3.;\r\n\r\n#define TWOPI 6.28318531\r\n\r\nfloat randomVal (float inVal)\r\n{\r\n    return fract(sin(mod(dot(vec2(inVal, 2523.2361) , vec2(12.9898,78.233)), TWOPI)) * 43758.5453)-0.5;\r\n}\r\n\r\nvec2 randomVec2 (float inVal)\r\n{\r\n    return normalize(vec2(randomVal(inVal), randomVal(inVal+151.523)));\r\n}\r\n\r\nfloat makeWaves(vec2 uv, float theTime, float offset)\r\n{\r\n    float result = 0.0;\r\n    float direction = 0.0;\r\n    float sineWave = 0.0;\r\n    vec2 randVec = vec2(0.0,0.0);\r\n    float i;\r\n    for(int n = 0; n < 16; n++)\r\n    {\r\n        i = float(n)+offset;\r\n        randVec = randomVec2(float(i));\r\n  \t\tdirection = (uv.x*randVec.x+uv.y*randVec.y);\r\n        sineWave = sin(mod(direction*randomVal(i+1.6516)+theTime*timeSpeed, TWOPI));\r\n        sineWave = smoothstep(0.2,1.,sineWave);\r\n    \tresult += randomVal(i+123.0)*sineWave;\r\n    }\r\n    return result;\r\n}\r\n\r\nvec4 water( vec2 fragCoord )\r\n{\r\n    vec4 fragColor;\r\n\tvec2 uv = fragCoord.xy * 0.5;\r\n    \r\n    vec2 uv2 = uv * scale;\r\n    \r\n    uv *= 2.0;\r\n\r\n    float result = 0.0;\r\n    float result2 = 0.0;\r\n    \r\n    result = makeWaves( uv2+vec2(time*timeSpeed,0.0), time, 0.1);\r\n    result2 = makeWaves( uv2-vec2(time*0.8*timeSpeed,0.0), time*0.8+1.06, 0.26);\r\n    \r\n    result *= 0.2;\r\n    \r\n    result = smoothstep(0.35,1.1,1.0-abs(result));\r\n    result2 = smoothstep(0.35,1.1,1.0-abs(result2));\r\n    \r\n    result = 2.0*smoothstep(0.35,1.8,(result+result2)*glint);\r\n\r\n    vec2 p = vec2(result, result2)*0.019 + (cos( mod(  uv*1.1 - sin(mod(uv.yx + time*timeSpeed/20., TWOPI)), TWOPI) )*0.012);\r\n    uv.x -= shift.x;\r\n    uv.y -= shift.y;\r\n    uv += p * billowy;\r\n    vec4 pixel = texture2D( uSampler , (filterMatrixInverse * vec3(uv, 1.0)).xy );\r\n\treturn (vec4(result)*0.9 + pixel)*pixel.a;\r\n}\r\n\r\nvoid main() {\r\n    vec4 water = water(vFilterCoord);\r\n    vec4 result = mix(vec4(waterColor,1.0),water,1./(tintIntensity+1.000000001))*water.a;\r\n    gl_FragColor = result;\r\n}\r\n`;\n\n\n\n\n\n\nclass $763101d941baf02d$export$bf2c97ada2c2b329 extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, scale: scale, glint: glint, billowy: billowy, color: color, shiftX: shiftX, shiftY: shiftY, tintIntensity: tintIntensity } = Object.assign({}, $763101d941baf02d$export$bf2c97ada2c2b329.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $7b2095add72e19b6$export$c6eb01d07cc2e1e8), (0, $c9111877e9b99e22$export$9fa5c76e40adf3ca));\n        this.uniforms.waterColor = new Float32Array([\n            0.0,\n            0.18,\n            0.54\n        ]);\n        this.uniforms.shift = new Float32Array([\n            0.0,\n            0.0\n        ]);\n        Object.assign(this, {\n            time: time,\n            scale: scale,\n            glint: glint,\n            billowy: billowy,\n            color: color,\n            shiftX: shiftX,\n            shiftY: shiftY,\n            tintIntensity: tintIntensity\n        });\n        this.zOrder = 170;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.waterColor);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.waterColor);\n    }\n    get scale() {\n        return this.uniforms.scale;\n    }\n    set scale(value) {\n        this.uniforms.scale = value;\n    }\n    get glint() {\n        return this.uniforms.glint;\n    }\n    set glint(value) {\n        this.uniforms.glint = value;\n    }\n    get billowy() {\n        return this.uniforms.billowy;\n    }\n    set billowy(value) {\n        this.uniforms.billowy = value;\n    }\n    get tintIntensity() {\n        return this.uniforms.tintIntensity;\n    }\n    set tintIntensity(value) {\n        this.uniforms.tintIntensity = value;\n    }\n    get shiftX() {\n        return this.uniforms.shift[0];\n    }\n    set shiftX(value) {\n        this.uniforms.shift[0] = value;\n    }\n    get shiftY() {\n        this.uniforms.shift[1];\n    }\n    set shiftY(value) {\n        this.uniforms.shift[1] = value;\n    }\n}\n$763101d941baf02d$export$bf2c97ada2c2b329.defaults = {\n    time: 0,\n    glint: 0.5,\n    scale: 70,\n    billowy: 0.5,\n    color: 0x0020a9,\n    shiftX: 0,\n    shiftY: 0,\n    tintIntensity: 0.2\n};\n\n\nconst $0a6ff0f4b9e266f1$export$cc1bb59c1623a9ed = `\r\nprecision mediump float;\r\nprecision mediump int;\r\n\r\nuniform float time;\r\nuniform vec2 scale;\r\nuniform vec3 color;\r\nuniform int blend;\r\nuniform sampler2D uSampler;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\n#define F4 0.309016994374947451\r\n#define PI 3.14159\r\n#define SPEED 0.01\r\n\r\nvec4 blenderVec3(int blend, vec4 fColv4, vec4 sColv4)\r\n{\r\n    vec3 fCol = vec3(fColv4);\r\n    vec3 sCol = vec3(sColv4);\r\n    if ( blend == 1) { fCol = fCol * sCol; }\r\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 3) { fCol = min(fCol, sCol); }\r\n    else if (blend == 4) { fCol = max(fCol, sCol); }\r\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\r\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\r\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\r\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\r\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol); }\r\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol; }\r\n    else if (blend == 13) { fCol = fCol + sCol; }\r\n    else { fCol = fCol + sCol; }\r\n    \r\n    return vec4(fCol,1.0);\r\n}\r\n\r\nvec4 mod289(vec4 x) \r\n{\r\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\r\n}\r\n\r\nfloat mod289(float x) \r\n{\r\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\r\n}\r\n\r\nvec4 permute(vec4 x) \r\n{\r\n    return mod289(((x*34.0)+1.0)*x);\r\n}\r\n\r\nfloat permute(float x) \r\n{\r\n    return mod289(((x*34.0)+1.0)*x);\r\n}\r\n\r\nvec4 taylorInvSqrt(vec4 r) \r\n{\r\n    return 1.79284291400159 - 0.85373472095314 * r;\r\n}\r\n\r\nfloat taylorInvSqrt(float r) \r\n{\r\n    return 1.79284291400159 - 0.85373472095314 * r;\r\n}\r\n\r\nvec4 grad4(float j, vec4 ip) \r\n{\r\n    const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\r\n    vec4 p,s;\r\n\r\n    p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\r\n    p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\r\n    s = vec4(lessThan(p, vec4(0.0)));\r\n    p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www;\r\n\r\n    return p;\r\n}\r\n\r\nfloat snoise(vec4 v) \r\n{\r\n    const vec4  C = vec4( 0.138196601125011,\r\n                          0.276393202250021,\r\n                          0.414589803375032,\r\n                         -0.447213595499958);\r\n\r\n    vec4 i  = floor(v + dot(v, vec4(F4)) );\r\n    vec4 x0 = v -   i + dot(i, C.xxxx);\r\n\r\n    vec4 i0;\r\n    vec3 isX = step( x0.yzw, x0.xxx );\r\n    vec3 isYZ = step( x0.zww, x0.yyz );\r\n      \r\n    i0.x = isX.x + isX.y + isX.z;\r\n    i0.yzw = 1.0 - isX;\r\n      \r\n    i0.y += isYZ.x + isYZ.y;\r\n    i0.zw += 1.0 - isYZ.xy;\r\n    i0.z += isYZ.z;\r\n    i0.w += 1.0 - isYZ.z;\r\n\r\n    vec4 i3 = clamp( i0, 0.0, 1.0 );\r\n    vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\r\n    vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\r\n\r\n    vec4 x1 = x0 - i1 + C.xxxx;\r\n    vec4 x2 = x0 - i2 + C.yyyy;\r\n    vec4 x3 = x0 - i3 + C.zzzz;\r\n    vec4 x4 = x0 + C.wwww;\r\n    \r\n    i = mod289(i);\r\n    float j0 = permute( permute( permute( permute(i.w) + i.z) + i.y) + i.x);\r\n    vec4 j1 = permute( permute( permute( permute (\r\n                        i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\r\n                    + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\r\n                + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\r\n            + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\r\n\r\n    vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\r\n\r\n    vec4 p0 = grad4(j0,   ip);\r\n    vec4 p1 = grad4(j1.x, ip);\r\n    vec4 p2 = grad4(j1.y, ip);\r\n    vec4 p3 = grad4(j1.z, ip);\r\n    vec4 p4 = grad4(j1.w, ip);\r\n\r\n    vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\r\n    p0 *= norm.x;\r\n    p1 *= norm.y;\r\n    p2 *= norm.z;\r\n    p3 *= norm.w;\r\n    p4 *= taylorInvSqrt(dot(p4,p4));\r\n\r\n    vec3 m0 = max(0.6 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);\r\n    vec2 m1 = max(0.6 - vec2(dot(x3,x3), dot(x4,x4)            ), 0.0);\r\n    m0 = m0 * m0;\r\n    m1 = m1 * m1;\r\n    return 49.0 * ( dot(m0*m0, vec3( dot( p0, x0 ), dot( p1, x1 ), dot( p2, x2 )))\r\n            + dot(m1*m1, vec2( dot( p3, x3 ), dot( p4, x4 ) ) ) ) ;\r\n\r\n}\r\n\r\nfloat surface( vec4 coord ) \r\n{\r\n\tfloat n = 0.0;\r\n\r\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\r\n\tn += 0.5 * abs( snoise( coord * 8.0 ) );\r\n\tn += 0.25 * abs( snoise( coord * 16.0 ) );\r\n\tn += 0.125 * abs( snoise( coord * 32.0 ) );\r\n\t\r\n\treturn n;\r\n}\r\n\r\nvoid main() \r\n{\r\n    vec4 pixel = texture2D(uSampler,vTextureCoord);\r\n\r\n    // to avoid computation on an invisible pixel\r\n    if (pixel.a == 0.) {\r\n        gl_FragColor = pixel;\r\n        return;\r\n    }\r\n\r\n    vec2 uv = vFilterCoord - vec2(0.375*scale.x,0.375*scale.y);\r\n    float s = uv.x * scale.x;\r\n    float t = uv.y * scale.y;\r\n    \r\n    float multiplier = 1.0 / ( 2.0 * PI );\r\n    float nx = cos( s * 2.0 * PI ) * multiplier;\r\n    float ny = cos( t * 2.0 * PI ) * multiplier;\r\n    float nz = sin( s * 2.0 * PI ) * multiplier;\r\n    float nw = sin( t * 2.0 * PI ) * multiplier;\r\n\r\n    float surf = surface( vec4( nx, ny, nz, nw ) + time * SPEED );\r\n    vec4 result = vec4( color * vec3( surf ), 1.0 );\r\n    \r\n    gl_FragColor = blenderVec3(blend,pixel,result) * pixel.a;\r\n}\r\n`;\n\n\n\n\n\n\nclass $2259918ac189db3e$export$2ba7369b7ae4551b extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, blend: blend, dimX: dimX, dimY: dimY } = Object.assign({}, $2259918ac189db3e$export$2ba7369b7ae4551b.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $7b2095add72e19b6$export$c6eb01d07cc2e1e8), (0, $0a6ff0f4b9e266f1$export$cc1bb59c1623a9ed));\n        this.uniforms.color = new Float32Array([\n            1.0,\n            1.0,\n            1.0\n        ]);\n        this.uniforms.scale = new Float32Array([\n            1.0,\n            1.0\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            blend: blend,\n            dimX: dimX,\n            dimY: dimY\n        });\n        this.zOrder = 200;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get blend() {\n        return this.uniforms.blend;\n    }\n    set blend(value) {\n        this.uniforms.blend = Math.floor(value);\n    }\n    get dimX() {\n        return this.uniforms.scale[0];\n    }\n    set dimX(value) {\n        this.uniforms.scale[0] = value;\n    }\n    get dimY() {\n        return this.uniforms.scale[1];\n    }\n    set dimY(value) {\n        this.uniforms.scale[1] = value;\n    }\n}\n$2259918ac189db3e$export$2ba7369b7ae4551b.defaults = {\n    time: 0,\n    color: 0xffffff,\n    blend: 13,\n    dimX: 1,\n    dimY: 1\n};\n\n\nconst $db84269c965d5c17$export$74eae7f690aa2952 = `\r\nprecision mediump float;\r\n\r\nuniform float time;\r\nuniform int blend;\r\nuniform int shieldType;\r\nuniform vec3 color;\r\nuniform vec2 posLight;\r\nuniform vec3 ambientColor;\r\nuniform float intensity;\r\nuniform float lightColorAlpha;\r\nuniform float lightSize;\r\nuniform float scale;\r\nuniform float radius;\r\nuniform float hideRadius;\r\nuniform float discardThreshold;\r\nuniform bool chromatic;\r\nuniform bool alphaDiscard;\r\nuniform sampler2D uSampler;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\n#define SQRT5B20 0.30901699\r\n#define PI 3.14159265\r\n#define TWOPI 6.28318531\r\n#define SPEED 0.01\r\n#define MU_TWOPI 0.15915494309\r\n#define MU_289 0.00346020761\r\n#define MU_3 0.33333333334\r\n#define MU_1_5 0.66666666667\r\n\r\nvec3 hsvToRgb(vec3 hsVcolor)\r\n{\r\n    vec4 K = vec4(1., 2.0 * MU_3, 1.0 * MU_3, 3.0);\r\n    vec3 p = abs(fract(hsVcolor.xxx + K.xyz) \r\n             * 6.0 - K.www);\r\n    return hsVcolor.z \r\n           * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), hsVcolor.y);\r\n}\r\n\r\nvec3 multihue(vec2 uv) \r\n{\r\n    float h = 0.5 + atan(uv.y, uv.x) * MU_TWOPI;\r\n    vec3 hsv = vec3(h, 1., 1.);\r\n    return hsvToRgb(hsv);\r\n}\r\n\r\nfloat random(vec2 n) \r\n{ \r\n\treturn fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nvec2 random2(vec2 p) \r\n{\r\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\r\n}\r\n\r\nfloat bornedCos(float minimum, float maximum)\r\n{\r\n    return (maximum-minimum)*(cos(PI*time*0.10 + 1.)*0.5)+minimum;\r\n}\r\n\r\nfloat bornedSin(float minimum, float maximum)\r\n{\r\n    return (maximum-minimum)*(sin(PI*time*0.10 + 1.)*0.5)+minimum;\r\n}\r\n\r\nvec4 mod289(vec4 x) \r\n{\r\n    return x - floor(x * MU_289) * 289.0;\r\n}\r\n\r\nfloat mod289(float x) \r\n{\r\n    return x - floor(x * MU_289) * 289.0;\r\n}\r\n\r\nvec4 permute(vec4 x) \r\n{\r\n    return mod289(((x*34.0)+1.0)*x);\r\n}\r\n\r\nfloat permute(float x) \r\n{\r\n    return mod289(((x*34.0)+1.0)*x);\r\n}\r\n\r\nvec4 taylorInvSqrt(vec4 r) \r\n{\r\n    return 1.79284291400159 - 0.85373472095314 * r;\r\n}\r\n\r\nfloat taylorInvSqrt(float r) \r\n{\r\n    return 1.79284291400159 - 0.85373472095314 * r;\r\n}\r\n\r\nvec4 grad4(float j, vec4 ip) \r\n{\r\n    const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\r\n    vec4 p,s;\r\n\r\n    p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\r\n    p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\r\n    s = vec4(lessThan(p, vec4(0.0)));\r\n    p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www;\r\n\r\n    return p;\r\n}\r\n\r\nfloat snoise(vec4 v) \r\n{\r\n    const vec4  C = vec4( 0.138196601125011,\r\n                          0.276393202250021,\r\n                          0.414589803375032,\r\n                         -0.447213595499958);\r\n\r\n    vec4 i  = floor(v + dot(v, vec4(SQRT5B20)) );\r\n    vec4 x0 = v -   i + dot(i, C.xxxx);\r\n\r\n    vec4 i0;\r\n    vec3 isX = step( x0.yzw, x0.xxx );\r\n    vec3 isYZ = step( x0.zww, x0.yyz );\r\n      \r\n    i0.x = isX.x + isX.y + isX.z;\r\n    i0.yzw = 1.0 - isX;\r\n      \r\n    i0.y += isYZ.x + isYZ.y;\r\n    i0.zw += 1.0 - isYZ.xy;\r\n    i0.z += isYZ.z;\r\n    i0.w += 1.0 - isYZ.z;\r\n\r\n    vec4 i3 = clamp( i0, 0.0, 1.0 );\r\n    vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\r\n    vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\r\n\r\n    vec4 x1 = x0 - i1 + C.xxxx;\r\n    vec4 x2 = x0 - i2 + C.yyyy;\r\n    vec4 x3 = x0 - i3 + C.zzzz;\r\n    vec4 x4 = x0 + C.wwww;\r\n    \r\n    i = mod289(i);\r\n    float j0 = permute( permute( permute( permute(i.w) + i.z) + i.y) + i.x);\r\n    vec4 j1 = permute( permute( permute( permute (\r\n                        i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\r\n                    + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\r\n                + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\r\n            + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\r\n\r\n    vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\r\n\r\n    vec4 p0 = grad4(j0,   ip);\r\n    vec4 p1 = grad4(j1.x, ip);\r\n    vec4 p2 = grad4(j1.y, ip);\r\n    vec4 p3 = grad4(j1.z, ip);\r\n    vec4 p4 = grad4(j1.w, ip);\r\n\r\n    vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\r\n    p0 *= norm.x;\r\n    p1 *= norm.y;\r\n    p2 *= norm.z;\r\n    p3 *= norm.w;\r\n    p4 *= taylorInvSqrt(dot(p4,p4));\r\n\r\n    vec3 m0 = max(0.6 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);\r\n    vec2 m1 = max(0.6 - vec2(dot(x3,x3), dot(x4,x4)            ), 0.0);\r\n    m0 = m0 * m0;\r\n    m1 = m1 * m1;\r\n    return 49.0 * ( dot(m0*m0, vec3( dot( p0, x0 ), dot( p1, x1 ), dot( p2, x2 )))\r\n            + dot(m1*m1, vec2( dot( p3, x3 ), dot( p4, x4 ) ) ) ) ;\r\n\r\n}\r\n\r\nfloat surface( vec4 coord ) \r\n{\r\n\tfloat n = 0.0;\r\n\r\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\r\n\tn += 0.5 * abs( snoise( coord * 8.0 ) );\r\n\tn += 0.25 * abs( snoise( coord * 16.0 ) );\r\n\tn += 0.125 * abs( snoise( coord * 32.0 ) );\r\n\t\r\n\treturn n;\r\n}\r\n\r\nvec4 ambientLight(vec4 pixel, vec2 fragCoord, vec2 posLg) \r\n{\r\n  vec3 lightColor = (color+vec3(2.)) * MU_3;\r\n  vec2 position = posLg;\r\n  \r\n  float maxDistance = lightSize;\r\n  float distance = distance(fragCoord-posLg, position);\r\n  float value = 1.0 - smoothstep(-0.2, maxDistance, distance);\r\n  \r\n  vec3 ambient = pixel.rgb * color * intensity;\r\n  vec3 light = (lightColor*lightColorAlpha) * clamp(value, 0.0, 1.0);\r\n  vec3 intensity = ambient + light;\r\n  vec3 final = pixel.rgb * intensity;\r\n\r\n  return vec4(final, 1.0);\r\n}\r\n\r\nvec3 toGray(vec3 color)\r\n{\r\n  float average = (color.r + color.g + color.b)*0.3333333;\r\n  return vec3(average, average, average);\r\n}\r\n\r\nvec3 colorize(vec3 grayscale, vec3 color)\r\n{\r\n    return (grayscale * color);\r\n}\r\n\r\nvec4 blenderVec3(int blend, vec4 fColv4, vec4 sColv4)\r\n{\r\n    vec3 fCol = vec3(fColv4);\r\n    vec3 sCol = vec3(sColv4);\r\n    if ( blend == 1) { fCol = fCol * sCol; }\r\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 3) { fCol = min(fCol, sCol); }\r\n    else if (blend == 4) { fCol = max(fCol, sCol); }\r\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\r\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\r\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\r\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\r\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol + 0.00001); }\r\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol + 0.00001; }\r\n    else if (blend == 13) { fCol = fCol + sCol; return vec4(fCol,0.6); }\r\n    else if (blend == 14) { return mix(fColv4,sColv4,1.-fColv4.a); }\r\n    else if (blend == 15) { return mix(fColv4,sColv4,fColv4.a); }\r\n    else { fCol = fCol + sCol; }\r\n    \r\n    return vec4(fCol,(fColv4.a+sColv4.a)*0.5);\r\n}\r\n\r\nfloat hexDist(vec2 p) \r\n{\r\n\tp = abs(p);\r\n\t\r\n    float c = dot(p, normalize(vec2(1,1.73)));\r\n    c = max(c, p.x);\r\n    \r\n    return c;\r\n}\r\n\r\nvec4 hexCoords(vec2 uv) \r\n{\r\n\tconst vec2 r = vec2(1, 1.73);\r\n    const vec2 h = r*.5;\r\n    \r\n    vec2 a = mod(uv, r)-h;\r\n    vec2 b = mod(uv-h, r)-h;\r\n    vec2 gv = dot(a, a) < dot(b,b) ? a : b;\r\n    \r\n    float x = atan(gv.x, gv.y);\r\n    float y = .65-hexDist(gv);\r\n    vec2 id = uv-gv;\r\n    return vec4(x, y, id.x,id.y);\r\n}\r\n\r\nvec4 hexa(vec2 fragCoord)\r\n{\r\n    float t = time;\r\n    \r\n    vec2 uv = fragCoord;\r\n    vec2 uv1 = uv + vec2(0, sin(uv.x*1. +t)*.25);\r\n    \r\n    vec2 uv2 = .5*uv1 + .5*uv + vec2(sin(uv.y*5. + t)*.05, 0);\r\n    float a = 1. + t*0.1;\r\n    float c = cos(a);\r\n    float s = sin(a);\r\n    uv2 *= mat2(c, -s, s, c);\r\n    \r\n    vec3 col = color;\r\n    col += (smoothstep(abs(uv2.y)*MU_1_5, 3.99, hexCoords(uv2*15.).y) * 40.*(sin(t)+1.));\r\n    col += (smoothstep(abs(uv2.x)*MU_1_5, 3.99, hexCoords(uv2*15.).y) * 40.*(cos(t)+1.));\r\n\r\n    return vec4(colorize(toGray(clamp(col,0.,2.)),color),1.);\r\n}\r\n\r\nvec4 voronoi( in vec2 x, float step1, float step2 ) \r\n{\r\n    vec2 n = floor(x);\r\n    vec2 f = fract(x);\r\n\r\n    vec2 mg, mr;\r\n    float md = 8.0;\r\n    for (int j= -1; j <= 1; j++) {\r\n        for (int i= -1; i <= 1; i++) {\r\n            vec2 g = vec2(float(i),float(j));\r\n            vec2 o = random2( n + g );\r\n            o = 0.5 + 0.5*sin( time + 6.2831*o );\r\n\r\n            vec2 r = g + o - f;\r\n            float d = dot(r,r);\r\n\r\n            if( d<md ) {\r\n                md = d;\r\n                mr = r;\r\n                mg = g;\r\n            }\r\n        }\r\n    }\r\n\r\n    md = 8.0;\r\n    for (int j= -2; j <= 1; j++) {\r\n        for (int i= -2; i <= 1; i++) {\r\n            vec2 g = mg + vec2(float(i),float(j));\r\n            vec2 o = random2( n + g );\r\n            o = 0.5 + 0.5*sin( time + 6.2831*o );\r\n\r\n            vec2 r = g + o - f;\r\n\r\n            if ( dot(mr-r,mr-r)>0.000001 ) {\r\n                md = min(md, dot( 0.6*(mr+r), normalize(r-mr) ));\r\n            }\r\n        }\r\n    }\r\n    vec3 intermediate = vec3(md, mr);\r\n    vec3 final = (intermediate.x*(0.4 + .5*sin(64.0*intermediate.x))*color);\r\n    final = mix( color, final, smoothstep( step1, step2, intermediate.x*18. ) );\r\n    return vec4(final,1.);\r\n}\r\n\r\nfloat noise(vec2 n) \r\n{\r\n\tconst vec2 d = vec2(0.0, 1.0);\r\n\tvec2 b = floor(n);\r\n\tvec2 f = smoothstep(vec2(0.), vec2(1.0), fract(n));\r\n\treturn mix(mix(random(b), random(b + d.yx), f.x), \r\n\t       mix(random(b + d.xy), random(b + d.yy), f.x), f.y);\r\n}\r\n\r\nfloat fbm(vec2 n) \r\n{\r\n\tfloat total = 0.0, amp = 1.;\r\n\tfor (int i = 0; i < 7; i++) {\r\n\t\ttotal += noise(n) * amp;\r\n\t\tn += n;\r\n\t\tamp *= 0.5;\r\n\t}\r\n\treturn total;\r\n}\r\n\r\nfloat fbm2(vec2 n) \r\n{\r\n\tfloat total = 0.0, amp = 1.;\r\n\tfor (int i = 0; i < 2; i++) {\r\n\t\ttotal += noise(n) * amp;\r\n\t\tn += n;\r\n\t\tamp *= 0.5;\r\n\t}\r\n\treturn total;\r\n}\r\n\r\nvec4 ripples(vec2 suv) \r\n{\r\n    suv.x += time*0.5;\r\n    vec3 c1 = vec3(0.);\r\n    vec3 c2 = vec3(c1);\r\n    vec3 c3 = vec3(c1);\r\n    vec3 c4 = vec3(color.r*5., color.g*3.333, color.b*2.);\r\n    vec3 c5 = vec3(c3);\r\n    vec3 c6 = vec3(c1);\r\n    vec2 p = suv;\r\n    float q = 2.*fbm2(p + time*2.);\r\n    vec2 r = vec2(fbm2(p + q + ( time  ) - p.x - p.y), fbm2(p + p + ( time )));\r\n    r.x += bornedCos(-0.3,-0.2);\r\n    r.y += 200.*bornedSin(-1.9,1.9);\r\n    \r\n    vec3 c = color * (\r\n        mix( c1, c2, fbm( p + r ) ) + mix( c3, c4, r.x ) - mix( c5, c6, r.y )\r\n    );\r\n    return vec4(c,1.);\r\n}\r\n\r\nvec4 fire(vec2 suv) \r\n{\r\n    vec3 c1 = color+vec3(0.1, 0.0, 0.)*0.666667;\r\n\tvec3 c2 = color+vec3(0.7, 0.0, 0.)*0.666667;\r\n\tvec3 c3 = color+vec3(0.2, 0.0, 0.)*0.666667;\r\n\tvec3 c4 = color+vec3(1.0, 0.9, 0.)*0.666667;\r\n\tvec3 c5 = vec3(0.1);\r\n\tvec3 c6 = vec3(0.9);\r\n    vec2 uv = suv - vec2(0.92,0.26);\r\n\tvec2 p = uv.xy * 8.0;\r\n\tfloat q = fbm(p - time * 0.1);\r\n\tvec2 r = vec2(fbm(p + q + time * 0.7 - p.x - p.y), fbm(p + q - time * 0.4));\r\n\tvec3 c = mix(c1, c2, fbm(p + r)) + mix(c3, c4, r.x) - mix(c5, c6, r.y);\r\n\treturn vec4(c * cos(1.57/(1.-0.03) * uv.y), 1.0);\r\n}\r\n\r\nvec4 surface4d(vec2 suv)\r\n{\r\n    float s = suv.x + 0.61;\r\n    float t = suv.y + 0.5;\r\n    float nx = cos( s * TWOPI ) * MU_TWOPI;\r\n    float ny = cos( t * TWOPI ) * MU_TWOPI;\r\n    float nz = sin( s * TWOPI ) * MU_TWOPI;\r\n    float nw = sin( t * TWOPI ) * MU_TWOPI;\r\n\r\n    float surf = surface( vec4( nx, ny, nz, nw ) + time * 0.03 );\r\n    return vec4( color * vec3( surf ), 1.0 );\r\n}\r\n\r\nvec4 noisy(vec2 suv)\r\n{\r\n    vec4 noiseColor;\r\n    noiseColor.rgb = (color.rgb * noise(suv + fbm(suv) + time*0.5));\r\n    noiseColor.a = 1.;\r\n    return clamp(noiseColor,0.,1.);\r\n}\r\n\r\nvec2 circuit(vec2 p) {\r\n\tp = fract(p);\r\n\tfloat r = 0.3;\r\n\tfloat v = 0.0, g = 1.0;\r\n\tfloat d;\r\n\t\r\n\tconst int iter = 7;\r\n\tfor(int i = 0; i < iter; i ++)\r\n\t{\r\n\t\td = p.x - r;\r\n\t\tg += pow(clamp(1.0 - abs(d), 0.0, 1.0), 200.0);\r\n\t\t\r\n\t\tif(d > 0.0) {\r\n\t\t\tp.x = (p.x - r) / (1.8 - r);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tp.x = p.x;\r\n\t\t}\r\n\t\tp = p.yx;\r\n\t}\r\n\tv /= float(iter);\r\n\treturn vec2(g, v);\r\n}\r\n\r\nvec4 denseSmoke(vec2 suv)\r\n{\r\n    vec4 noiseColor;\r\n    vec2 uv;\r\n    uv.x = (fbm(suv*2.)-suv.x);\r\n    uv.y = (suv.y+fbm(suv*2.));\r\n    noiseColor.rgb = (color.rgb * min(fbm(uv - time*0.5),fbm(uv)*1.5));\r\n    noiseColor.a = 1.0;\r\n    return clamp(noiseColor,0.,1.);\r\n}\r\n\r\nvec4 dancingFume(vec2 suv)\r\n{\r\n    vec4 noiseColor;\r\n    vec2 uv;\r\n    uv.x += noise(suv)+fbm(suv);\r\n    uv.y += noise(suv)+fbm(suv);\r\n    uv *= 0.5;\r\n    noiseColor.rgb = (color.rgb * fbm((uv + suv*0.15) - time));\r\n    noiseColor.a = 1.0;\r\n    return clamp(noiseColor,0.,1.);\r\n}\r\n\r\nvec4 hugeSmoke(vec2 suv)\r\n{\r\n    vec4 noiseColor;\r\n    vec2 uv;\r\n    uv.x += sin(suv.y)+fbm(suv);\r\n    uv.y += cos(suv.x)+fbm(suv);\r\n    uv *= 0.5;\r\n    noiseColor.rgb = (color.rgb * fbm((uv + suv) - time));\r\n    noiseColor.a = 1.0;\r\n    return clamp(noiseColor,0.,1.);\r\n}\r\n\r\nvec4 grid(vec2 suv)\r\n{\r\n    vec2 uv = suv + vec2(0.,-1.5);\r\n\tvec2 cid2 = floor(uv);\r\n\tfloat cid = (cid2.y + cid2.x);\r\n\r\n\tvec2 dg = circuit(uv);\r\n\tfloat d = dg.x;\r\n\tvec3 col1 = (0.5-vec3(max(min(d, 2.0) - 1., 0.))) * color * 2.;\r\n    col1.rgb = sqrt(col1.rgb*0.5);\r\n\tvec3 col2 = vec3(max(d - 1.0, 0.0)) * color * 30. ;\r\n\r\n\tfloat f = max(0.7 - mod(sin(-uv.y) - cos(-uv.x) + (time * 1.) + (dg.y * 0.2), 0.9), 0.0) * 1.;\r\n\tcol2 *= f;\r\n\r\n    return vec4(col1 + col2, 1.0);\r\n}\r\n\r\nvec4 galaxy(vec2 suv)\r\n{\r\n    vec2 uv = suv*0.166666667 \r\n        + vec2(bornedCos(0.0,0.7),\r\n               bornedSin(0.0,0.7));\r\n\r\n    float t = 0.44 * time \r\n            + (( 0.25 + 0.05 * sin( time * 0.44 )) \r\n            / ( length( uv.xy ) + 0.2 )) * 2.2;\r\n    \r\n    float si = sin( t * 1.5 );\r\n    float co = cos( t * 0.66666667 );\r\n    mat2 matrix = mat2( -co, si, si, co );\r\n    \r\n    float c;\r\n    float v1 = 0.0;\r\n    float v2 = 0.0;\r\n    vec3 uv2 = vec3( uv, 0.0 );\r\n    \r\n    for( int i = 0; i < 50; i++ ) {\r\n        float s = float( i ) * 0.035;\r\n        vec3 p = s * uv2;\r\n        p.xy *= matrix;\r\n        p += vec3( .22,.3, s - 1.5 - sin( t * 0.13 ) * 0.1 );\r\n\r\n        for( int i = 0; i < 6; i++ ) {\r\n            p = abs( p ) / dot( p, p ) - 0.659;\r\n        }\r\n\r\n        v1 += dot( p,p ) * 0.0045 * ( 1.8 + sin( length( uv.xy * 13.0 ) + 0.5 - t * 0.2 ) );\r\n        v2 += dot( p,p ) * 0.0045 * ( 1.5 + sin( length( uv.xy * 13.5 ) + 2.2 - t * 0.3 ) );\r\n        c = length( p.xy * 0.5 ) * 1.05;\r\n    }\r\n    \r\n    float len = length( uv );\r\n    v1 *= smoothstep( 0.7, 0.0, len );\r\n    v2 *= smoothstep( 0.6, 0.0, len );\r\n    \r\n    float r = clamp( c, 0.0, 1.0 );\r\n    float g = clamp( ( v1 + c ) * 0.25, 0.0, 1.0 );\r\n    float b = clamp( v2, 0.0, 1.0 );\r\n    vec3 col = color * vec3( r, g, b ) + smoothstep( 0.15, 0.0, len ) * 0.9;\r\n\r\n    return clamp(vec4( col, 1.0 ),0.,1.);\r\n}\r\n\r\nvec2 getSphere(out float alpha, out float r)\r\n{\r\n  vec2 tc = vFilterCoord.xy;\r\n  vec2 p = (-1.0 + 2. * tc) * (1.01 / radius);\r\n  r = dot(p,p);\r\n  r > 0.943 ? alpha = max(min(40.*log(1./r),1.),0.) : alpha = 1.;\r\n  float f = (1.0-sqrt(1.0-r))/(r);\r\n  vec2 uv;\r\n  uv.x = p.x*f;\r\n  uv.y = p.y*f;\r\n  return uv;\r\n}\r\n\r\nvoid computeHideAlpha(out float alpha)\r\n{\r\n  vec2 tc = vFilterCoord.xy;\r\n  vec2 p = (-1.0 + 2. * tc) * (1.01 / hideRadius);\r\n  float r = dot(p,p);\r\n  r > 0.9 ? alpha = 1.-max(min(40.*log(1./r),1.),0.) : alpha = 0.;\r\n}\r\n\r\nvoid main()\r\n{\r\n    float a, r, hideAlpha;\r\n    vec4 result;\r\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\r\n\r\n    if (hideRadius > 0.) computeHideAlpha(hideAlpha);\r\n    else hideAlpha = 1.;\r\n\r\n    if (pixel.a == 0. && hideAlpha == 0.) {\r\n        discard;\r\n    }\r\n\r\n    vec2 uv = getSphere(a, r);\r\n\r\n    if (shieldType <= 1) {\r\n        result = ripples(15.*uv*scale);\r\n    } else if (shieldType == 2) {\r\n        result = hexa(uv*scale);\r\n    } else if (shieldType == 3) {\r\n        result = fire(uv/1.5*scale);\r\n    } else if (shieldType == 4) {\r\n        result = voronoi(uv*scale*3.+0.3*cos(time),0.29,0.0);\r\n    } else if (shieldType == 5) {\r\n        result = voronoi(uv*scale*3.+0.3*cos(time),0.0019,1.);\r\n    } else if (shieldType == 6) {\r\n        result = 3.*surface4d(uv*scale);\r\n    } else if (shieldType == 7) {\r\n        result = noisy(uv*20.*scale);\r\n    } else if (shieldType == 8) {\r\n        result = denseSmoke(uv*10.*scale);\r\n    } else if (shieldType == 9) {\r\n        result = dancingFume(uv*20.*scale);\r\n    } else if (shieldType == 10) {\r\n        result = hugeSmoke(uv*5.*scale);\r\n    } else if (shieldType == 11) {\r\n        result = grid(uv*5.*scale);\r\n    } else if (shieldType == 12) {\r\n        result = galaxy(uv*5.*scale);\r\n    } else if (shieldType != 1) {\r\n        result = vec4(color,1.);\r\n    }\r\n\r\n    vec4 colorized;\r\n    vec3 chromaOption;\r\n    if (chromatic) {\r\n        vec2 vHue = uv;\r\n        vHue.x -= bornedCos(-0.,+2.2);\r\n        vHue.y -= bornedSin(-0.,+2.2);\r\n        chromaOption = multihue(vHue);\r\n    } else {\r\n        chromaOption = color;\r\n    }\r\n    colorized = (vec4(\r\n                    colorize(\r\n                        toGray(result.rgb), chromaOption), result.a) + result)*0.5;\r\n    vec4 preRenderedResult = clamp(ambientLight(clamp(colorized, 0., 1.)*intensity, uv, posLight-vec2(0.5,0.5)),0.,1.);\r\n    vec4 final = vec4(preRenderedResult.rgb * hideAlpha, 1.);\r\n\r\n    if (alphaDiscard && all(lessThanEqual(final.rgb,vec3(discardThreshold)))) {\r\n        if (pixel.a == 0.) discard;\r\n        else {\r\n            gl_FragColor = pixel;\r\n            return;\r\n        }\r\n    }\r\n\r\n    gl_FragColor =\r\n            r > 1.0\r\n                ? pixel*(1.-a)\r\n                : (pixel.a < 1. \r\n                        ? mix( blenderVec3(13, pixel, final), blenderVec3(blend, pixel, final), pixel.a)\r\n                        : blenderVec3(blend, pixel, final) * a);\r\n}\r\n`;\n\n\n\n\n\n\nclass $dd7b8e7fa7881c81$export$8353bd967bf6b04d extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, lightAlpha: lightAlpha, blend: blend, shieldType: shieldType, posLightX: posLightX, posLightY: posLightY, lightSize: lightSize, scale: scale, intensity: intensity, radius: radius, hideRadius: hideRadius, chromatic: chromatic, discardThreshold: discardThreshold, alphaDiscard: alphaDiscard } = Object.assign({}, $dd7b8e7fa7881c81$export$8353bd967bf6b04d.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $7b2095add72e19b6$export$c6eb01d07cc2e1e8), (0, $db84269c965d5c17$export$74eae7f690aa2952));\n        this.uniforms.color = new Float32Array([\n            1.0,\n            1.0,\n            1.0\n        ]);\n        this.uniforms.posLight = new Float32Array([\n            1.0,\n            1.0\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            lightAlpha: lightAlpha,\n            blend: blend,\n            shieldType: shieldType,\n            posLightX: posLightX,\n            posLightY: posLightY,\n            lightSize: lightSize,\n            scale: scale,\n            intensity: intensity,\n            radius: radius,\n            hideRadius: hideRadius,\n            chromatic: chromatic,\n            discardThreshold: discardThreshold,\n            alphaDiscard: alphaDiscard\n        });\n        this.zOrder = 2000;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get blend() {\n        return this.uniforms.blend;\n    }\n    set blend(value) {\n        this.uniforms.blend = Math.floor(value);\n    }\n    get lightAlpha() {\n        return this.uniforms.lightColorAlpha;\n    }\n    set lightAlpha(value) {\n        this.uniforms.lightColorAlpha = value;\n    }\n    get shieldType() {\n        return this.uniforms.shieldType;\n    }\n    set shieldType(value) {\n        this.uniforms.shieldType = Math.floor(value);\n    }\n    get posLightX() {\n        return this.uniforms.posLight[0];\n    }\n    set posLightX(value) {\n        this.uniforms.posLight[0] = value;\n    }\n    get posLightY() {\n        return this.uniforms.posLight[1];\n    }\n    set posLightY(value) {\n        this.uniforms.posLight[1] = value;\n    }\n    get lightSize() {\n        return this.uniforms.lightSize;\n    }\n    set lightSize(value) {\n        this.uniforms.lightSize = value;\n    }\n    get scale() {\n        return this.uniforms.scale;\n    }\n    set scale(value) {\n        this.uniforms.scale = value;\n    }\n    get intensity() {\n        return this.uniforms.intensity;\n    }\n    set intensity(value) {\n        this.uniforms.intensity = value;\n    }\n    get radius() {\n        return this.uniforms.radius;\n    }\n    set radius(value) {\n        this.uniforms.radius = value;\n    }\n    get hideRadius() {\n        return this.uniforms.hideRadius;\n    }\n    set hideRadius(value) {\n        this.uniforms.hideRadius = value;\n    }\n    get discardThreshold() {\n        return this.uniforms.discardThreshold;\n    }\n    set discardThreshold(value) {\n        this.uniforms.discardThreshold = value;\n    }\n    get alphaDiscard() {\n        return this.uniforms.alphaDiscard;\n    }\n    set alphaDiscard(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.alphaDiscard = value;\n    }\n    get chromatic() {\n        return this.uniforms.chromatic;\n    }\n    set chromatic(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.chromatic = value;\n    }\n}\n$dd7b8e7fa7881c81$export$8353bd967bf6b04d.defaults = {\n    time: 0,\n    color: 0xbbbbbb,\n    lightAlpha: 1.0,\n    blend: 2,\n    shieldType: 1,\n    posLightX: 0.65,\n    posLightY: 0.25,\n    lightSize: 0.483,\n    scale: 1,\n    intensity: 1,\n    radius: 1,\n    hideRadius: 0,\n    chromatic: false,\n    discardThreshold: 0.25,\n    alphaDiscard: false\n};\n\n\nconst $b5124a750151fbc2$export$29635fcc44af7f32 = `\r\nprecision mediump float;\r\n\r\nuniform float time;\r\nuniform float alphaImg;\r\nuniform float alphaChr;\r\nuniform float ampX;\r\nuniform float ampY;\r\nuniform int blend;\r\nuniform int nbImage;\r\nuniform sampler2D uSampler;\r\nuniform vec4 inputClamp;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\nconst float PI = 3.14159265;\r\n\r\nfloat bornedCos(float mi, float ma) {\r\n    return (ma-mi)*(cos(2.*PI*time*0.2+1.)*0.5)+mi;\r\n}\r\n\r\nfloat bornedSin(float mi, float ma) {\r\n    return (ma-mi)*(sin(2.*PI*time*0.2+1.)*0.5)+mi;\r\n}\r\n\r\nvec4 blender(int blend, vec4 fCol, vec4 sCol)\r\n{\r\n    if ( blend == 1) { fCol.rgb = fCol.rgb * sCol.rgb; }\r\n    else if (blend == 2) { fCol.rgb = (1. - (1. - fCol.rgb) * (1. - sCol.rgb)); }\r\n    else if (blend == 3) { fCol.rgb = min(fCol.rgb, sCol.rgb); }\r\n    else if (blend == 4) { fCol.rgb = max(fCol.rgb, sCol.rgb); }\r\n    else if (blend == 5) { fCol.rgb = abs(fCol.rgb - sCol.rgb); }\r\n    else if (blend == 6) { fCol.rgb = 1. - abs(1. - fCol.rgb - sCol.rgb); }\r\n    else if (blend == 7) { fCol.rgb = fCol.rgb + sCol.rgb - (2. * fCol.rgb * sCol.rgb); }\r\n    else if (blend == 8) { fCol.rgb = all(lessThanEqual(fCol.rgb, vec3(0.5, 0.5, 0.5))) ? (2. * fCol.rgb * sCol.rgb) : (1. - 2. * (1. - fCol.rgb) * (1. - sCol.rgb)); }\r\n    else if (blend == 9) { fCol.rgb = all(lessThanEqual(sCol.rgb, vec3(0.5, 0.5, 0.5))) ? (2. * fCol.rgb * sCol.rgb) : (1. - 2. * (1. - fCol.rgb) * (1. - sCol.rgb)); }\r\n    else if (blend == 10) { fCol.rgb = all(lessThanEqual(sCol.rgb, vec3(0.5, 0.5, 0.5))) ? (2. * fCol.rgb * sCol.rgb + fCol.rgb * fCol.rgb * (1. - 2. * sCol.rgb)) : sqrt(fCol.rgb) * (2. * sCol.rgb - 1.) + (2. * fCol.rgb) * (1. - sCol.rgb); }\r\n    else if (blend == 11) { fCol.rgb = fCol.rgb / (1.0 - sCol.rgb); }\r\n    else if (blend == 12) { fCol.rgb = 1.0 - (1.0 - fCol.rgb) / (sCol.rgb)+0.001; }\r\n    else if (blend == 13) { fCol.rgb = fCol.rgb + sCol.rgb; }\r\n    else if (blend == 14) { fCol.rgb = (max(fCol.rgb,sCol.rgb)-(min(fCol.rgb,sCol.rgb)))+abs(fCol.rgb-sCol.rgb);}\r\n    else { fCol.rgb = clamp(fCol.rgb + sCol.rgb,0.,1.); }\r\n\r\n    fCol.a = max(fCol.a,sCol.a);\r\n    return fCol;\r\n}\r\n\r\nvec4 renderMirror(vec2 translation, vec4 prevpix)\r\n{\r\n    vec2 displaced = vTextureCoord + translation;\r\n    return blender(blend, prevpix, \r\n                   texture2D(uSampler, clamp(displaced, inputClamp.xy, inputClamp.zw)));\r\n}\r\n\r\nvoid main() \r\n{\r\n    float x = ampX * bornedCos(0.,1.);\r\n    float y = ampY * bornedSin(0.,1.);\r\n    vec4 renderedPixel;\r\n    vec2 translation;\r\n\r\n    if (nbImage >= 1) {\r\n        translation = vec2(x,y);\r\n        renderedPixel = texture2D(uSampler, clamp(vTextureCoord + translation, inputClamp.xy, inputClamp.zw));\r\n    }\r\n    if (nbImage >= 2) {\r\n        translation = 0.90*vec2(-x,y*0.5);\r\n        renderedPixel = renderMirror(translation, renderedPixel);\r\n    }\r\n    if (nbImage >= 3) {\r\n        translation = 0.70*vec2(x,-y);\r\n        renderedPixel = renderMirror(translation, renderedPixel);\r\n    }\r\n    if (nbImage >= 4) {\r\n        translation = 0.80*vec2(-x*0.6,-y);\r\n        renderedPixel = renderMirror(translation, renderedPixel);\r\n    }\r\n    if (nbImage >= 5) {\r\n        translation = 1.20*vec2(-x,y*0.4);\r\n        renderedPixel = renderMirror(translation, renderedPixel);\r\n    }\r\n    if (nbImage >= 6) {\r\n        translation = 1.10*vec2(x,-y);\r\n        renderedPixel = renderMirror(translation, renderedPixel);\r\n    }\r\n    if (nbImage >= 7) {\r\n        translation = 0.6*vec2(-x*0.4,-y);\r\n        renderedPixel = renderMirror(translation, renderedPixel);\r\n    }\r\n    if (nbImage >= 8) {\r\n        translation = 1.3*vec2(-x,y*0.70);\r\n        renderedPixel = renderMirror(translation, renderedPixel);\r\n    }\r\n    if (nbImage >= 9) {\r\n        translation = vec2(x*0.5,y*0.85);\r\n        renderedPixel = renderMirror(translation, renderedPixel);\r\n    }\r\n    renderedPixel = renderedPixel*alphaImg;\r\n    gl_FragColor = blender(blend,texture2D(uSampler, vTextureCoord)*alphaChr , renderedPixel);\r\n}\r\n`;\n\n\n\n\n\n\nclass $ff9a4870337c9c29$export$7f3e808c6a96411c extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, blend: blend, alphaImg: alphaImg, alphaChr: alphaChr, nbImage: nbImage, ampX: ampX, ampY: ampY } = Object.assign({}, $ff9a4870337c9c29$export$7f3e808c6a96411c.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $7b2095add72e19b6$export$c6eb01d07cc2e1e8), (0, $b5124a750151fbc2$export$29635fcc44af7f32));\n        Object.assign(this, {\n            time: time,\n            blend: blend,\n            alphaImg: alphaImg,\n            alphaChr: alphaChr,\n            nbImage: nbImage,\n            ampX: ampX,\n            ampY: ampY\n        });\n        this.zOrder = 100;\n        this.autoFit = false;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get alphaImg() {\n        return this.uniforms.alphaImg;\n    }\n    set alphaImg(value) {\n        this.uniforms.alphaImg = value;\n    }\n    get alphaChr() {\n        return this.uniforms.alphaChr;\n    }\n    set alphaChr(value) {\n        this.uniforms.alphaChr = value;\n    }\n    get nbImage() {\n        return this.uniforms.nbImage;\n    }\n    set nbImage(value) {\n        this.uniforms.nbImage = Math.floor(value);\n    }\n    get blend() {\n        return this.uniforms.blend;\n    }\n    set blend(value) {\n        this.uniforms.blend = Math.floor(value);\n    }\n    get ampX() {\n        return this.uniforms.ampX;\n    }\n    set ampX(value) {\n        this.uniforms.ampX = value;\n    }\n    get ampY() {\n        return this.uniforms.ampY;\n    }\n    set ampY(value) {\n        this.uniforms.ampY = value;\n    }\n}\n$ff9a4870337c9c29$export$7f3e808c6a96411c.defaults = {\n    time: 0,\n    blend: 4,\n    alphaImg: 0.5,\n    alphaChr: 1.0,\n    nbImage: 4,\n    ampX: 0.15,\n    ampY: 0.15\n};\n\n\nconst $0e5e009646f2ae02$export$b460b340f858a038 = `\r\nprecision mediump float;\r\nprecision mediump int;\r\n\r\nuniform sampler2D uSampler;\r\nuniform float time;\r\nuniform float intensity;\r\nuniform float divisor;\r\nuniform int blend;\r\nuniform vec2 dimensions;\r\nuniform vec2 anchor;\r\nuniform vec3 color;\r\n\r\nvarying vec2 vFilterCoord;\r\nvarying vec2 vTextureCoord;\r\n\r\nconst float MU_TWOPI = 0.15915494309;\r\nconst float MU_PI5 = 1.59154943092;\r\nconst float MU_256 = 0.00390625;\r\n\r\nvec4 blender(int blend, vec4 fColv4, vec4 sColv4)\r\n{\r\n    vec3 fCol = vec3(fColv4);\r\n    vec3 sCol = vec3(sColv4);\r\n\r\n    if ( blend <= 1) { fCol = fCol * sCol; }\r\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 3) { fCol = min(fCol, sCol); }\r\n    else if (blend == 4) { fCol = max(fCol, sCol); }\r\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\r\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\r\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\r\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\r\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol); }\r\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol; }\r\n    else if (blend == 13) { fCol = max(fCol,sCol)-(min(fCol,sCol)*0.5)+abs(fCol-sCol);}\r\n    else if (blend >= 14) { fCol = fCol + sCol; }\r\n\r\n    return vec4(fCol,fColv4.a);\r\n}\r\n\r\nvoid main() {\r\n\r\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\r\n    if (pixel.a==0.) {\r\n       gl_FragColor = pixel;\r\n       return;\r\n    }\r\n\r\n    vec2 uv = (vFilterCoord - anchor) / dimensions;\r\n\r\n    float len = length(uv * 0.5);\r\n   \tfloat angle = atan(uv.x, uv.y) * MU_TWOPI;\r\n    float beam = fract((angle) * divisor + sin((sqrt(len) * 0.2) - (time*0.5)));\r\n    \r\n    beam  = 2.* cos(beam * MU_PI5);\r\n    beam *= floor(fract(angle * divisor + sin(time - (len * 1.2) * 0.2)) *256.) * MU_256;\r\n    \r\n    float fractburn = fract(beam);\r\n\r\n    vec4 color1 = smoothstep(0.0, 1., (beam*(intensity*0.1) + pixel * vec4(color,1.)) / (fractburn == 0. ? fractburn+0.1 : fractburn) * 0.3 );\r\n    vec4 result = blender(blend, pixel, color1);\r\n\r\n    gl_FragColor = result*pixel.a;\r\n}\r\n`;\n\n\n\n\n\n\nclass $6cd542ba64bf5f03$export$a909c602e4f39889 extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, divisor: divisor, intensity: intensity, blend: blend, anchorX: anchorX, anchorY: anchorY, dimX: dimX, dimY: dimY } = Object.assign({}, $6cd542ba64bf5f03$export$a909c602e4f39889.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $7b2095add72e19b6$export$c6eb01d07cc2e1e8), (0, $0e5e009646f2ae02$export$b460b340f858a038));\n        this.uniforms.color = new Float32Array([\n            1.0,\n            0.4,\n            0.1\n        ]);\n        this.uniforms.anchor = new Float32Array([\n            0.5,\n            -1\n        ]);\n        this.uniforms.dimensions = new Float32Array([\n            1.0,\n            1.0\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            divisor: divisor,\n            intensity: intensity,\n            blend: blend,\n            anchorX: anchorX,\n            anchorY: anchorY,\n            dimX: dimX,\n            dimY: dimY\n        });\n        this.zOrder = 130;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get divisor() {\n        return this.uniforms.divisor;\n    }\n    set divisor(value) {\n        this.uniforms.divisor = value;\n    }\n    get intensity() {\n        return this.uniforms.intensity;\n    }\n    set intensity(value) {\n        this.uniforms.intensity = value;\n    }\n    get blend() {\n        return this.uniforms.blend;\n    }\n    set blend(value) {\n        this.uniforms.blend = Math.floor(value);\n    }\n    get anchorX() {\n        return this.uniforms.anchor[0];\n    }\n    set anchorX(value) {\n        this.uniforms.anchor[0] = value;\n    }\n    get anchorY() {\n        return this.uniforms.anchor[1];\n    }\n    set anchorY(value) {\n        this.uniforms.anchor[1] = value;\n    }\n    get dimX() {\n        return this.uniforms.dimensions[0];\n    }\n    set dimX(value) {\n        this.uniforms.dimensions[0] = value;\n    }\n    get dimY() {\n        return this.uniforms.dimensions[1];\n    }\n    set dimY(value) {\n        this.uniforms.dimensions[1] = value;\n    }\n}\n$6cd542ba64bf5f03$export$a909c602e4f39889.defaults = {\n    time: 0.0,\n    color: 0xff8010,\n    divisor: 40,\n    intensity: 0.1,\n    blend: 8,\n    anchorX: 0.5,\n    anchorY: -1,\n    dimX: 1,\n    dimY: 1\n};\n\n\nconst $7fc747f1b273d1f6$export$28b3a3501a7f949 = `\r\nprecision mediump float;\r\nprecision mediump int;\r\n\r\nuniform sampler2D uSampler;\r\nuniform mat3 filterMatrixInverse;\r\nuniform float time;\r\nuniform float intensity;\r\nuniform float scale;\r\nuniform int blend;\r\nuniform bool spectral;\r\nuniform bool alphaDiscard;\r\nuniform vec3 color;\r\n\r\nvarying vec2 vFilterCoord;\r\nvarying vec2 vTextureCoord;\r\n\r\n#define PI 3.14159265359\r\n\r\n#define NUM_OCTAVES 3\r\n\r\nfloat rand(vec2 n) { \r\n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nfloat noise(vec2 p){\r\n\tvec2 ip = floor(p);\r\n\tvec2 u = fract(p);\r\n\tu = u*u*(3.0-2.0*u);\r\n\t\r\n\tfloat res = mix(\r\n\t\tmix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\r\n\t\tmix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\r\n\treturn res*res;\r\n}\r\n\r\nfloat fbm(vec2 x) {\r\n\tfloat v = 0.0;\r\n\tfloat a = 0.5;\r\n\tvec2 shift = vec2(100);\r\n    mat2 rot = mat2(cos(0.5), sin(0.5), -sin(0.5), cos(0.50));\r\n\tfor (int i = 0; i < NUM_OCTAVES; ++i) {\r\n\t\tv += a * noise(x);\r\n\t\tx = rot * x * 2.0 + shift;\r\n\t\ta *= 0.5;\r\n\t}\r\n\treturn v;\r\n}\r\n\r\nvec4 blenderVec3(int blend, vec4 fColv4, vec3 sCol)\r\n{\r\n    vec3 fCol = vec3(fColv4);\r\n    if ( blend == 1) { fCol = fCol * sCol; }\r\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 3) { fCol = min(fCol, sCol); }\r\n    else if (blend == 4) { fCol = max(fCol, sCol); }\r\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\r\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\r\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\r\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\r\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol + 0.00001); }\r\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol + 0.00001; }\r\n    else if (blend == 13) { fCol = max(fCol,sCol)-(min(fCol,sCol)*0.5)+abs(fCol-sCol);}\r\n    else if (blend >= 14) { fCol = fCol + sCol; }\r\n    \r\n    return vec4(fCol,fColv4.a);\r\n}\r\n\r\nvoid main() {\r\n    \r\n    float distortion1 = fbm( \r\n        vec2( fbm(  vFilterCoord * 2.5 * scale + time*0.5),\r\n              fbm( (-vFilterCoord - vec2(0.01)) * 5. * scale + time*0.3333334) )\r\n                    );\r\n    \r\n    float distortion2 = fbm( \r\n        vec2( fbm( -vFilterCoord * 5. * scale + time*0.5),\r\n              fbm(  (vFilterCoord + vec2(0.01)) * 2.5 * scale + time*0.3333334) )\r\n                    );\r\n    \r\n    vec2 uv = vFilterCoord;\r\n    \r\n    uv.x += 0.8*sin(min(distortion1*0.25,distortion2*0.25));\r\n    uv.y += 0.8*cos(min(distortion1*0.25,distortion2*0.25));\r\n    uv *= 1. + 0.11*(cos(sqrt(max(distortion1, distortion2))+1.)*0.5);\r\n    uv -= vec2(0.036,0.81); \r\n\r\n    vec2 mappedCoord = (filterMatrixInverse * vec3(uv, 1.0)).xy;\r\n    \r\n    vec4 pixel = texture2D(uSampler, mappedCoord);\r\n    vec3 aColor = color;\r\n    if (alphaDiscard) aColor.rgb *= mix(distortion1,distortion2,0.5);\r\n    else aColor.rgb *= min(distortion1,distortion2);\r\n    pixel.rgb += aColor*intensity;\r\n\r\n    float a = pixel.a;\r\n\r\n    if (spectral) pixel.a = max(distortion1,distortion2)*3.75;\r\n    if (alphaDiscard && all(lessThanEqual(pixel.rgb,vec3(0.50)))) discard;\r\n\r\n    gl_FragColor = blenderVec3(blend,pixel,color*0.3333334) * min(pixel.a,a);\r\n}\r\n`;\n\n\n\n\n\n\nclass $2d15a583bccdfdfc$export$76689802e4398e92 extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, scale: scale, intensity: intensity, blend: blend, spectral: spectral, alphaDiscard: alphaDiscard } = Object.assign({}, $2d15a583bccdfdfc$export$76689802e4398e92.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $7b2095add72e19b6$export$c6eb01d07cc2e1e8), (0, $7fc747f1b273d1f6$export$28b3a3501a7f949));\n        this.uniforms.color = new Float32Array([\n            0.1,\n            0.45,\n            1.0\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            scale: scale,\n            intensity: intensity,\n            blend: blend,\n            spectral: spectral,\n            alphaDiscard: alphaDiscard\n        });\n        this.zOrder = 180;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get scale() {\n        return this.uniforms.scale;\n    }\n    set scale(value) {\n        this.uniforms.scale = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get intensity() {\n        return this.uniforms.intensity;\n    }\n    set intensity(value) {\n        this.uniforms.intensity = value;\n    }\n    get blend() {\n        return this.uniforms.blend;\n    }\n    set blend(value) {\n        this.uniforms.blend = Math.floor(value);\n    }\n    get spectral() {\n        return this.uniforms.spectral;\n    }\n    set spectral(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.spectral = value;\n    }\n    get alphaDiscard() {\n        return this.uniforms.alphaDiscard;\n    }\n    set alphaDiscard(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.alphaDiscard = value;\n    }\n}\n$2d15a583bccdfdfc$export$76689802e4398e92.defaults = {\n    time: 0.0,\n    color: 0x0595ff,\n    scale: 1,\n    intensity: 5,\n    blend: 4,\n    spectral: false,\n    alphaDiscard: false\n};\n\n\nconst $198405fa67e91b85$export$7d6ef12f70fa5332 = `\r\nprecision mediump float;\r\n\r\nuniform sampler2D uSampler;\r\nuniform float time;\r\nuniform float scale;\r\nuniform float auraIntensity;\r\nuniform float subAuraIntensity;\r\nuniform float threshold;\r\nuniform int auraType;\r\nuniform bool holes;\r\nuniform vec2 thickness;\r\nuniform vec4 color;\r\nuniform vec4 inputSize;\r\nuniform vec4 inputClamp;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\nconst int NUM_OCTAVES = 4;\r\nconst float PI = 3.14159265358;\r\nconst float TWOPI = 6.28318530717;\r\nconst float MAX_TOTAL_ALPHA = 17.2787595915;\r\n\r\nfloat rand(vec2 uv)\r\n{\r\n    return fract(sin(dot(uv.xy ,vec2(12.9898,78.233))) * 43758.5453);\r\n}\r\n\r\nfloat noise(vec2 p)\r\n{\r\n\tvec2 ip = floor(p);\r\n\tvec2 u = fract(p);\r\n\tu = u*u*(3.0-2.0*u);\r\n\t\r\n\tfloat res = mix(\r\n\t\tmix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\r\n\t\tmix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\r\n\treturn res*res;\r\n}\r\n\r\nfloat fbm(vec2 x) \r\n{\r\n\tfloat v = 0.0;\r\n\tfloat a = 0.5;\r\n\tvec2 shift = vec2(100);\r\n    mat2 rot = mat2(cos(0.5), sin(0.5), -sin(0.5), cos(0.50));\r\n\tfor (int i = 0; i < NUM_OCTAVES; ++i) {\r\n\t\tv += a * noise(x);\r\n\t\tx = rot * x * 2.0 + shift;\r\n\t\ta *= 0.5;\r\n\t}\r\n\treturn v;\r\n}\r\n\r\nvec4 outlining() \r\n{\r\n    vec4 ownColor = texture2D(uSampler, vTextureCoord);\r\n    vec4 curColor;\r\n    float maxAlpha = 0.;\r\n    vec2 displaced;\r\n    for (float angle = 0.; angle <= TWOPI; angle += 0.3141592653) {\r\n        displaced.x = vTextureCoord.x + thickness.x * cos(angle);\r\n        displaced.y = vTextureCoord.y + thickness.y * sin(angle);\r\n        curColor = texture2D(uSampler, clamp(displaced, inputClamp.xy, inputClamp.zw));\r\n        maxAlpha = max(maxAlpha, curColor.a);\r\n    }\r\n    float resultAlpha = max(maxAlpha, ownColor.a);\r\n    return vec4((ownColor.rgb + color.rgb * (1. - ownColor.a)) * resultAlpha, resultAlpha);\r\n\r\n}\r\n\r\nvec4 glowing() \r\n{\r\n\tvec2 px = inputSize.zw;\r\n\r\n    float totalAlpha = 0.0;\r\n    float outerStrength = 6.;\r\n\r\n    vec2 direction;\r\n    vec2 displaced;\r\n    vec4 curColor;\r\n\r\n    for (float angle = 0.0; angle < TWOPI; angle += 0.3141592653) {\r\n       direction = vec2(cos(angle), sin(angle)) * px;\r\n\r\n       for (float curDistance = 0.0; curDistance < 10.; curDistance++) {\r\n           displaced = clamp(vTextureCoord + direction * \r\n                   (curDistance + 1.0), inputClamp.xy, inputClamp.zw);\r\n\r\n           curColor = texture2D(uSampler, displaced);\r\n           totalAlpha += (10. - curDistance) * curColor.a;\r\n       }\r\n    }\r\n    \r\n    curColor = texture2D(uSampler, vTextureCoord);\r\n\r\n    float alphaRatio = (totalAlpha / MAX_TOTAL_ALPHA);\r\n    float outerGlowAlpha = alphaRatio * outerStrength * (1. - curColor.a);\r\n    float outerGlowStrength = min(1.0 - curColor.a, outerGlowAlpha);\r\n\r\n    vec4 outerGlowColor = (outerGlowStrength * (color.rgba*0.1) );\r\n\r\n    float resultAlpha = outerGlowAlpha;\r\n    return vec4(color.rgb * resultAlpha, resultAlpha);\r\n}\r\n\r\nvec4 ripples(vec2 suv) \r\n{\r\n    suv.x += time/2.;\r\n    vec3 c1 = ( 0.0 ) * (color.rgb*10.);\r\n    vec3 c2 = vec3(c1);\r\n    vec3 c3 = vec3(c1);\r\n    vec3 c4 = vec3( color.r*5., color.g*3.3333, color.b*2. );\r\n    vec3 c5 = vec3(c3);\r\n    vec3 c6 = vec3(c1);\r\n    vec2 p = suv;\r\n    float q = 2.*fbm(p + time*0.2);\r\n    vec2 r = vec2(fbm(p + q + ( time*0.1  ) - p.x - p.y), fbm(p + p + ( time*0.1 )));\r\n    vec3 c = color.rgb * (\r\n        mix( c1, c2, fbm( p + r ) ) + mix( c3, c4, r.x ) - mix( c5, c6, r.y )\r\n    );\r\n    return vec4(c,1.);\r\n}\r\n\r\nvec4 noisy(vec2 suv)\r\n{\r\n    vec4 noiseColor;\r\n    noiseColor.rgb = (color.rgb * noise(suv + fbm(suv) + time));\r\n    noiseColor.a = 1.;\r\n    return clamp(noiseColor,0.,1.);\r\n}\r\n\r\nvoid main(void) \r\n{\r\n\r\n    vec4 pixel = texture2D(uSampler,vTextureCoord);\r\n\r\n    if (pixel.a == 1.) {\r\n        gl_FragColor =  pixel;\r\n    } else {\r\n        vec4 glowlevel = glowing();\r\n        vec4 outlinelevel = outlining();\r\n        vec4 aura;\r\n        \r\n        if (auraType <= 1) {\r\n            aura = ripples(vFilterCoord*20.*scale);\r\n        } else {\r\n            aura = noisy(vFilterCoord*20.*scale);\r\n        }\r\n\r\n        vec4 effect;\r\n        effect = ((glowlevel*subAuraIntensity)*0.1) + ((outlinelevel*auraIntensity)*0.8);\r\n\r\n        if (effect.a >= 0.) {effect.rgb = aura.rgb*(max(effect.a,0.));}\r\n\r\n        float intensity = effect.r + effect.g + effect.b;\r\n\t    if(intensity < threshold && effect.a != 0.) {\r\n            if (holes) {discard;}\r\n            effect.rgb = (color.rgb)*(effect.a*0.5);\r\n        } \r\n\r\n        gl_FragColor =  pixel + effect * (1.-pixel.a);\r\n    }\r\n}\r\n`;\n\n\n\n\n\n\nclass $3ad5a82bb0e54e91$export$dbf4d88a9f2fd9e6 extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, thickness: thickness, scale: scale, auraIntensity: auraIntensity, subAuraIntensity: subAuraIntensity, discard: discard, threshold: threshold, auraType: auraType } = Object.assign({}, $3ad5a82bb0e54e91$export$dbf4d88a9f2fd9e6.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $7b2095add72e19b6$export$c6eb01d07cc2e1e8), (0, $198405fa67e91b85$export$7d6ef12f70fa5332));\n        this.uniforms.color = new Float32Array([\n            1.0,\n            0.4,\n            0.1,\n            1.0\n        ]);\n        this.uniforms.thickness = new Float32Array([\n            0.01,\n            0.01\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            thickness: thickness,\n            scale: scale,\n            auraIntensity: auraIntensity,\n            subAuraIntensity: subAuraIntensity,\n            discard: discard,\n            threshold: threshold,\n            auraType: auraType\n        });\n        this.zOrder = 80;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get scale() {\n        return this.uniforms.scale;\n    }\n    set scale(value) {\n        this.uniforms.scale = value;\n    }\n    get auraIntensity() {\n        return this.uniforms.auraIntensity;\n    }\n    set auraIntensity(value) {\n        this.uniforms.auraIntensity = value;\n    }\n    get subAuraIntensity() {\n        return this.uniforms.subAuraIntensity;\n    }\n    set subAuraIntensity(value) {\n        this.uniforms.subAuraIntensity = value;\n    }\n    get threshold() {\n        return this.uniforms.threshold;\n    }\n    set threshold(value) {\n        this.uniforms.threshold = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get discard() {\n        return this.uniforms.holes;\n    }\n    set discard(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.holes = value;\n    }\n    get auraType() {\n        return this.uniforms.auraType;\n    }\n    set auraType(value) {\n        this.uniforms.auraType = Math.floor(value);\n    }\n    apply(filterManager, input, output, clear) {\n        this.uniforms.thickness[0] = this.thickness * this.targetPlaceable.worldTransform.a / input._frame.width;\n        this.uniforms.thickness[1] = this.thickness * this.targetPlaceable.worldTransform.a / input._frame.height;\n        super.apply(filterManager, input, output, clear);\n    }\n}\n$3ad5a82bb0e54e91$export$dbf4d88a9f2fd9e6.defaults = {\n    time: 0,\n    color: 0xff8010,\n    thickness: 5,\n    scale: 1,\n    auraIntensity: 1,\n    subAuraIntensity: 1,\n    discard: false,\n    threshold: 0.5,\n    auraType: 1\n};\n\n\n\n\nclass $b42aa7ecb9ad892d$export$26c3bdb8b50816cc extends PIXI.filters.PixelateFilter {\n    constructor(params){\n        super();\n        this.enabled = false;\n        this.animated = {};\n        this.sizeX = 5;\n        this.sizeY = 5;\n        this.zOrder = 20;\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    handleTransform() {\n        this.size.x = this.sizeX * this.targetPlaceable.worldTransform.a;\n        this.size.y = this.sizeY * this.targetPlaceable.worldTransform.a;\n    }\n}\n\n\nconst $69e7dce7ecc59e3a$export$ee64fcda6bb0a01b = `\r\nprecision mediump float;\r\n\r\nuniform float time;\r\nuniform float thickness;\r\nuniform float div1;\r\nuniform float div2;\r\nuniform float tear;\r\nuniform float amplitude;\r\nuniform bool alphaDiscard;\r\nuniform vec2 anchor;\r\nuniform vec3 color;\r\nuniform sampler2D uSampler;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\nconst float PI = 3.14159265358;\r\n\r\nfloat random(vec2 n) \r\n{ \r\n\treturn fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nfloat noise(vec2 n) \r\n{\r\n\tconst vec2 d = vec2(0., 1.0);\r\n\tvec2 b = floor(n);\r\n\tvec2 f = smoothstep(vec2(0.), vec2(1.0), fract(n));\r\n\treturn mix(mix(random(b), random(b + d.yx), f.x), \r\n\t       mix(random(b + d.xy), random(b + d.yy), f.x), f.y);\r\n}\r\n\r\nfloat fbm(vec2 n) \r\n{\r\n\tfloat total = 0.0, amp = amplitude;\r\n\tfor (int i = 0; i < 2; i++) {\r\n\t\ttotal += noise(n) * amp;\r\n\t\tn += n;\r\n\t\tamp *= 0.5;\r\n\t}\r\n\treturn total;\r\n}\r\n\r\nvec4 spiderweb()\r\n{\r\n    vec2 coord = vFilterCoord.xy + anchor;\r\n\r\n    float t = floor(time * 0.01) * 7.3962;\r\n\r\n    vec2 sc = (coord.xy - 1.) * 0.5;\r\n    float phi = atan(sc.y, sc.x + 1e-6);\r\n    vec2 pc = vec2(fract(phi / (PI * 2.)), length(sc));\r\n    \r\n    float h_divnum = div1;\r\n    float s_divnum = div2;\r\n    \r\n    float ddth = fbm(vec2(pc.x*h_divnum,pc.x*20.*pow(length(sc*0.5),2.))*3.);\r\n    \r\n    float h_rand = 0.3+0.0895*(0.1*cos(time)+010.9)*tear;\r\n    float s_rand = .355*(0.2*cos(time)+1.);\r\n    \r\n    float l = pc.y+ cos(ddth*0.5) * (h_rand - 0.4) + ddth*(s_rand - 0.5)*0.2;\r\n    \r\n    float ts = 0.05;\r\n    float a = smoothstep(abs(sin(( pc.x*PI*2.  )  * s_divnum) ),-.1,thickness * ts );\r\n    float b = smoothstep(abs(sin(( pc.y*PI*2. + h_rand + l)  * h_divnum ) ),-.1,thickness * ts );\r\n    float s = a*b*2.;\r\n    float m = alphaDiscard ? 1. : 2.25;\r\n    return vec4(color.rgb*m,2.)-vec4(s,s,s,1.);\r\n}\r\n\r\nvoid main() \r\n{\r\n    vec4 pixel = texture2D(uSampler,vTextureCoord);\r\n    vec4 result = max(spiderweb(),pixel)*pixel.a;\r\n    if (alphaDiscard && result.rgb == vec3(0.)) discard;\r\n    gl_FragColor = result;\r\n}\r\n`;\n\n\n\n\n\n\nclass $6fa7336a3977e368$export$be2f10404718dbad extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, anchorX: anchorX, anchorY: anchorY, color: color, thickness: thickness, div1: div1, div2: div2, tear: tear, amplitude: amplitude, alphaDiscard: alphaDiscard } = Object.assign({}, $6fa7336a3977e368$export$be2f10404718dbad.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $7b2095add72e19b6$export$c6eb01d07cc2e1e8), (0, $69e7dce7ecc59e3a$export$ee64fcda6bb0a01b));\n        this.uniforms.anchor = new Float32Array([\n            0.5,\n            -1\n        ]);\n        this.uniforms.color = new Float32Array([\n            0.75,\n            0.75,\n            0.75\n        ]);\n        Object.assign(this, {\n            time: time,\n            anchorX: anchorX,\n            anchorY: anchorY,\n            color: color,\n            thickness: thickness,\n            div1: div1,\n            div2: div2,\n            tear: tear,\n            amplitude: amplitude,\n            alphaDiscard: alphaDiscard\n        });\n        this.zOrder = 260;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get anchorX() {\n        return this.uniforms.anchor[0];\n    }\n    set anchorX(value) {\n        this.uniforms.anchor[0] = 0.5;\n    }\n    get anchorY() {\n        return this.uniforms.anchor[1];\n    }\n    set anchorY(value) {\n        this.uniforms.anchor[1] = 0.5;\n    }\n    get thickness() {\n        return this.uniforms.thickness;\n    }\n    set thickness(value) {\n        this.uniforms.thickness = value;\n    }\n    get tear() {\n        return this.uniforms.tear;\n    }\n    set tear(value) {\n        this.uniforms.tear = value;\n    }\n    get amplitude() {\n        return this.uniforms.amplitude;\n    }\n    set amplitude(value) {\n        this.uniforms.amplitude = value;\n    }\n    get div1() {\n        return this.uniforms.div1;\n    }\n    set div1(value) {\n        this.uniforms.div1 = value;\n    }\n    get div2() {\n        return this.uniforms.div2;\n    }\n    set div2(value) {\n        this.uniforms.div2 = value;\n    }\n    get alphaDiscard() {\n        return this.uniforms.alphaDiscard;\n    }\n    set alphaDiscard(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.alphaDiscard = value;\n    }\n}\n$6fa7336a3977e368$export$be2f10404718dbad.defaults = {\n    time: 0.0,\n    anchorX: 0.5,\n    anchorY: 0.5,\n    color: 0xbbbbbb,\n    thickness: 1,\n    div1: 10,\n    div2: 10,\n    tear: 0.54,\n    amplitude: 0.8,\n    alphaDiscard: false\n};\n\n\nconst $f3670dae3dbde56b$export$ddb966d307e896d5 = `\r\nprecision mediump float;\r\nprecision mediump int;\r\n\r\nuniform vec3 color;\r\nuniform float time;\r\nuniform float amplitude;\r\nuniform float intensity;\r\nuniform bool alphaDiscard;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\nuniform sampler2D uSampler;\r\n\r\n#define PI 3.14159265\r\n#define OCTAVES 3\r\n\r\nfloat random(vec2 n) \r\n{ \r\n\treturn fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nfloat bornedCos(float minimum, float maximum)\r\n{\r\n    return (maximum-minimum)*(cos(2.*PI*time*0.05 + 1.)*0.5)+minimum;\r\n}\r\n\r\nfloat bornedSin(float minimum, float maximum)\r\n{\r\n    return (maximum-minimum)*(sin(2.*PI*time*0.05 + 1.)*0.5)+minimum;\r\n}\r\n\r\nfloat noise(vec2 n) \r\n{\r\n\tconst vec2 d = vec2(0.0, 1.0);\r\n\tvec2 b = floor(n);\r\n\tvec2 f = smoothstep(vec2(0.), vec2(1.0), fract(n));\r\n\treturn mix(mix(random(b), random(b + d.yx), f.x), \r\n\t       mix(random(b + d.xy), random(b + d.yy), f.x), f.y);\r\n}\r\n\r\nfloat fbm(vec2 n) \r\n{\r\n\tfloat total = 0.0, amp = amplitude;\r\n\tfor (int i = 0; i < OCTAVES; i++) {\r\n\t\ttotal += noise(n) * amp;\r\n\t\tn += n;\r\n\t\tamp *= 0.5;\r\n\t}\r\n\treturn total;\r\n}\r\n\r\nvec4 ripples(vec2 suv) \r\n{\r\n    suv.x += time*0.5;\r\n    vec3 c1 = color*intensity;\r\n    vec3 c2 = vec3(0.);\r\n    vec3 c3 = vec3(c1);\r\n    vec3 c4 = vec3(color.r*3.333, color.g*3.333, color.b*3.333);\r\n    vec3 c5 = vec3(c3);\r\n    vec3 c6 = vec3(c1);\r\n    vec2 p = suv;\r\n    float q = 2. * fbm(p + time * 2.);\r\n    vec2 r = vec2(fbm(p + q + ( time  ) - p.x - p.y), fbm(p + p + ( time )));\r\n    r.x += bornedCos(-0.3,-0.2);\r\n    r.y += 200.*bornedSin(-1.9,1.9);\r\n    \r\n    vec3 c = color * (\r\n        mix( c1, c2, fbm( p + r ) ) + mix( c3, c4, r.x ) - mix( c5, c6, r.y )\r\n    );\r\n    return vec4(c,1.);\r\n}\r\n\r\nvoid main() {\r\n\r\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\r\n    if (pixel.a==0.) {\r\n       gl_FragColor = pixel;\r\n       return;\r\n    }\r\n\r\n    vec4 result = max(ripples(15.* vFilterCoord),pixel);\r\n    if (alphaDiscard && all(lessThanEqual(result.rgb,vec3(0.40)))) discard;\r\n    gl_FragColor = result*pixel.a;\r\n}\r\n`;\n\n\n\n\n\n\nclass $f18e6ec0a88cc5a8$export$3f7eb987d91438a2 extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, amplitude: amplitude, intensity: intensity, alphaDiscard: alphaDiscard, _octaves: _octaves } = Object.assign({}, $f18e6ec0a88cc5a8$export$3f7eb987d91438a2.defaults, params);\n        if (typeof _octaves !== \"number\") _octaves = $f18e6ec0a88cc5a8$export$3f7eb987d91438a2.defaults._octave;\n        let fragment = (0, $f3670dae3dbde56b$export$ddb966d307e896d5).replace(`#define OCTAVES 3`, `#define OCTAVES ${_octaves}`);\n        // using specific vertex shader and fragment shader\n        super((0, $7b2095add72e19b6$export$c6eb01d07cc2e1e8), fragment);\n        this.uniforms.color = new Float32Array([\n            0.75,\n            0.75,\n            0.75\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            amplitude: amplitude,\n            intensity: intensity,\n            alphaDiscard: alphaDiscard\n        });\n        this.zOrder = 250;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get amplitude() {\n        return this.uniforms.amplitude;\n    }\n    set amplitude(value) {\n        this.uniforms.amplitude = value;\n    }\n    get intensity() {\n        return this.uniforms.intensity;\n    }\n    set intensity(value) {\n        this.uniforms.intensity = value;\n    }\n    get alphaDiscard() {\n        return this.uniforms.alphaDiscard;\n    }\n    set alphaDiscard(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.alphaDiscard = value;\n    }\n}\n$f18e6ec0a88cc5a8$export$3f7eb987d91438a2.defaults = {\n    time: 0.0,\n    color: 0xbbbbbb,\n    amplitude: 1,\n    intensity: 0.001,\n    alphaDiscard: false,\n    _octave: 3\n};\n\n\nconst $8de1ea40f1e953f4$export$59ce548d84b541a8 = `\r\nprecision mediump float;\r\n\r\nuniform float time;\r\nuniform float scale;\r\nuniform float distortion;\r\nuniform bool alphaDiscard;\r\nuniform vec3 color;\r\nuniform sampler2D uSampler;\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\nconst float PI = 3.14159265358;\r\n\r\nfloat rand(vec2 c)\r\n{\r\n\treturn fract( sin( dot( c.xy, vec2( 12.9898, 78.233 ) ) ) * 43758.5453 );\r\n}\r\n\r\nvec2 rand2(vec2 st)\r\n{\r\n    st = vec2( dot(st,vec2(127.1,311.7)),\r\n              dot(st,vec2(269.5,183.3)) );\r\n    return -1.0 + 2.0*fract(cos(st)*43758.5453123);\r\n}\r\n\r\nvec3 toGray(vec3 color)\r\n{\r\n  float average = (color.r + color.g + color.b)*0.3333333;\r\n  return vec3(average, average, average);\r\n}\r\n\r\nvec3 colorize(vec3 grayscale, vec3 color)\r\n{\r\n    return (grayscale * color);\r\n}\r\n\r\nfloat noise (vec2 st) \r\n{\r\n    vec2 i = floor(st);\r\n    vec2 f = fract(st);\r\n\r\n    vec2 u = f*f*(3.0-2.0*f);\r\n\r\n    return mix( mix( dot( rand2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\r\n                     dot( rand2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\r\n                mix( dot( rand2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\r\n                     dot( rand2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\r\n}\r\n\r\nfloat circle(vec2 pos, float radius, float glow)\r\n{\r\n    float sdf = length(pos);\r\n    sdf = smoothstep(radius-0.700,radius,sdf);\r\n    float circles = 1.0 - smoothstep(0.0,1.0,sdf*1.280);\r\n    float glows = exp(-sdf*4.496) * glow * (3.0 - circles);\r\n    return circles+glows;\r\n}\r\n\r\nvec4 globes()\r\n{\r\n    vec2 st = (vFilterCoord - 0.5);\r\n    st *= scale;\r\n    vec2 uv = st;\r\n    float noisest = noise(vec2(uv.x - time,uv.y - time));\r\n    uv += noisest*distortion;\r\n    uv -= vec2( noise(vec2(time)*0.2)*4.0,-time*0.01);\r\n    \r\n    vec3 color = vec3(0.);\r\n    \r\n    \r\n    vec2 pos = fract(uv)-0.5;\r\n    vec2 id = floor(uv);\r\n\r\n    \r\n    for(int y = -1; y <= 1; y++){\r\n        for(int x = -1; x <= 1; x++){\r\n            vec2 neighbour = vec2(x,y);\r\n            vec2 rand2 = rand2(id+neighbour);\r\n            float a = noise(rand2+time*2.8);\r\n            vec2 offset = 0.5*(sin(time + rand2*5.28))*2.2;\r\n            float size = rand(id+neighbour)*0.75 + a*0.15;\r\n            color += circle(pos-neighbour+offset,size,size*1.400)*0.143 * vec3(rand2.x*7.884,7.2,rand2.y*6.832);\r\n        }\r\n    }\r\n    \r\n    return vec4(color,1.0);\r\n}\r\n\r\nvoid main() {\r\n    vec4 pixel = texture2D(uSampler,vTextureCoord);\r\n\r\n    vec4 tinyGlobes = vec4(colorize(toGray(globes().rgb*1.5),color*1.5),1.);\r\n\r\n    bool belowThreshold = all(lessThanEqual(tinyGlobes.rgb,vec3(0.6)));\r\n    if (alphaDiscard && belowThreshold) discard;\r\n    else if (belowThreshold) tinyGlobes = pixel;\r\n\r\n    gl_FragColor = max(tinyGlobes,pixel)*pixel.a;\r\n}\r\n`;\n\n\n\n\n\n\nclass $73f856fafa2246eb$export$dd8c8c08b796f015 extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, scale: scale, distortion: distortion, alphaDiscard: alphaDiscard } = Object.assign({}, $73f856fafa2246eb$export$dd8c8c08b796f015.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $7b2095add72e19b6$export$c6eb01d07cc2e1e8), (0, $8de1ea40f1e953f4$export$59ce548d84b541a8));\n        this.uniforms.color = new Float32Array([\n            0.75,\n            0.75,\n            0.75\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            scale: scale,\n            distortion: distortion,\n            alphaDiscard: alphaDiscard\n        });\n        this.zOrder = 270;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get scale() {\n        return this.uniforms.scale;\n    }\n    set scale(value) {\n        this.uniforms.scale = value;\n    }\n    get distortion() {\n        return this.uniforms.distortion;\n    }\n    set distortion(value) {\n        this.uniforms.distortion = value;\n    }\n    get alphaDiscard() {\n        return this.uniforms.alphaDiscard;\n    }\n    set alphaDiscard(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.alphaDiscard = value;\n    }\n}\n$73f856fafa2246eb$export$dd8c8c08b796f015.defaults = {\n    time: 0.0,\n    color: 0xaa3050,\n    scale: 20,\n    distortion: 0.25,\n    alphaDiscard: false\n};\n\n\nconst $39326b17c0d8eafc$export$9bdad1ae37d738e0 = `\r\nprecision mediump float;\r\n\r\nuniform float rotation;\r\nuniform float twRadius;\r\nuniform float twAngle;\r\nuniform float bpRadius;\r\nuniform float bpStrength;\r\nuniform vec2 scale;\r\nuniform vec2 translation;\r\nuniform vec2 pivot;\r\nuniform vec4 inputClamp;\r\nuniform sampler2D uSampler;\r\nuniform mat3 filterMatrixInverse;\r\n\r\nvarying vec2 vFilterCoord;\r\n\r\nconst float PI = 3.1415927;\r\n\r\nvec2 morphing(in vec2 uv) {\r\n    float dist = length(uv);\r\n\r\n    // twist effect\r\n    if (dist < twRadius) {\r\n        float ratioDist = (twRadius - dist) / twRadius;\r\n        float angleMod = ratioDist * ratioDist * twAngle;\r\n        float s = sin(angleMod);\r\n        float c = cos(angleMod);\r\n        uv = vec2(uv.x * c - uv.y * s, uv.x * s + uv.y * c);\r\n    }\r\n\r\n    // bulge pinch effect\r\n    if (dist < bpRadius) {\r\n        float percent = dist / bpRadius;\r\n        if (bpStrength > 0.) {\r\n            uv *= mix(1.0, smoothstep(0., bpRadius / dist, percent), bpStrength * 0.75);\r\n        } else {\r\n            uv *= mix(1.0, pow(percent, 1.0 + bpStrength * 0.75) * bpRadius / dist, 1.0 - percent);\r\n        }\r\n    }\r\n\r\n    return uv;\r\n}\r\n\r\nvec2 transform(in vec2 uv) {\r\n    float angle = -(PI * rotation * 0.005555555555);\r\n    uv -= pivot;\r\n    uv *= mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\r\n    uv *= mat2(scale.x, 0.0, 0.0, scale.y);\r\n    uv = morphing(uv);\r\n    uv += pivot;\r\n\r\n    return uv;\r\n}\r\n\r\nvoid main() {\r\n    vec2 uv = vFilterCoord + translation;\r\n    uv = transform(uv);\r\n    vec2 mappedCoord = (filterMatrixInverse * vec3(uv, 1.0)).xy;\r\n    vec4 pixel = texture2D(uSampler,clamp(mappedCoord, inputClamp.xy, inputClamp.zw));\r\n    gl_FragColor = pixel;\r\n}\r\n`;\n\n\n\n\n\n\nclass $6e4bf56a3bec8613$export$e8341be799357874 extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { rotation: rotation, twRadiusPercent: twRadiusPercent, twAngle: twAngle, twRotation: twRotation, bpRadiusPercent: bpRadiusPercent, bpStrength: bpStrength, scale: scale, scaleX: scaleX, scaleY: scaleY, pivotX: pivotX, pivotY: pivotY, translationX: translationX, translationY: translationY } = Object.assign({}, $6e4bf56a3bec8613$export$e8341be799357874.defaults, params);\n        super((0, $7b2095add72e19b6$export$c6eb01d07cc2e1e8), (0, $39326b17c0d8eafc$export$9bdad1ae37d738e0));\n        this.uniforms.scale = new Float32Array([\n            1.0,\n            1.0\n        ]);\n        this.uniforms.pivot = new Float32Array([\n            0.5,\n            0.5\n        ]);\n        this.uniforms.translation = new Float32Array([\n            0.0,\n            0.0\n        ]);\n        Object.assign(this, {\n            rotation: rotation,\n            twRadiusPercent: twRadiusPercent,\n            twAngle: twAngle,\n            twRotation: twRotation,\n            bpRadiusPercent: bpRadiusPercent,\n            bpStrength: bpStrength,\n            scale: scale,\n            scaleX: scaleX,\n            scaleY: scaleY,\n            pivotX: pivotX,\n            pivotY: pivotY,\n            translationX: translationX,\n            translationY: translationY\n        });\n        this.zOrder = 1000;\n        this.autoFit = false;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get rotation() {\n        return this.uniforms.rotation;\n    }\n    set rotation(value) {\n        this.uniforms.rotation = value;\n    }\n    get twRadiusPercent() {\n        return this.uniforms.twRadius * 200;\n    }\n    set twRadiusPercent(value) {\n        this.uniforms.twRadius = value / 200;\n    }\n    get twAngle() {\n        return this.uniforms.twAngle;\n    }\n    set twAngle(value) {\n        this.uniforms.twAngle = value;\n    }\n    get twRotation() {\n        return this.uniforms.twAngle * (180 / Math.PI);\n    }\n    set twRotation(value) {\n        this.uniforms.twAngle = value * (Math.PI / 180);\n    }\n    get bpRadiusPercent() {\n        return this.uniforms.bpRadius * 200;\n    }\n    set bpRadiusPercent(value) {\n        this.uniforms.bpRadius = value / 200;\n    }\n    get bpStrength() {\n        return this.uniforms.bpStrength;\n    }\n    set bpStrength(value) {\n        this.uniforms.bpStrength = value;\n    }\n    get scale() {\n        // a little hack (we get only x)\n        return this.uniforms.scale[0];\n    }\n    set scale(value) {\n        this.uniforms.scale[1] = this.uniforms.scale[0] = value;\n    }\n    get scaleX() {\n        return this.uniforms.scale[0];\n    }\n    set scaleX(value) {\n        this.uniforms.scale[0] = value;\n    }\n    get scaleY() {\n        return this.uniforms.scale[1];\n    }\n    set scaleY(value) {\n        this.uniforms.scale[1] = value;\n    }\n    get pivotX() {\n        return this.uniforms.pivot[0];\n    }\n    set pivotX(value) {\n        this.uniforms.pivot[0] = value;\n    }\n    get pivotY() {\n        return this.uniforms.pivot[1];\n    }\n    set pivotY(value) {\n        this.uniforms.pivot[1] = value;\n    }\n    get translationX() {\n        return this.uniforms.translation[0];\n    }\n    set translationX(value) {\n        this.uniforms.translation[0] = value;\n    }\n    get translationY() {\n        return this.uniforms.translation[1];\n    }\n    set translationY(value) {\n        this.uniforms.translation[1] = value;\n    }\n}\n$6e4bf56a3bec8613$export$e8341be799357874.defaults = {\n    rotation: 0.0,\n    twRadiusPercent: 0,\n    twAngle: 0,\n    bpRadiusPercent: 0,\n    bpStrength: 0,\n    scaleX: 1,\n    scaleY: 1,\n    pivotX: 0.5,\n    pivotY: 0.5,\n    translationX: 0,\n    translationY: 0\n};\n\n\nconst $3916b8f3970cb9e8$export$a55475809cca74a = `\r\nprecision mediump float;\r\n\r\nuniform float time;\r\nuniform float seed;\r\nuniform float spread;\r\nuniform float splashFactor;\r\nuniform int blend;\r\nuniform vec2 dimensions;\r\nuniform vec2 anchor;\r\nuniform vec3 color;\r\nuniform bool cut;\r\nuniform bool textureAlphaBlend;\r\nuniform sampler2D uSampler;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\nfloat random(vec2 n) \r\n{ \r\n\treturn fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nvec4 blender(int blend, vec4 fCol, vec4 sCol)\r\n{\r\n    if ( blend == 1) { fCol.rgb = fCol.rgb * sCol.rgb; }\r\n    else if (blend == 2) { fCol.rgb = (1. - (1. - fCol.rgb) * (1. - sCol.rgb)); }\r\n    else if (blend == 3) { fCol.rgb = min(fCol.rgb, sCol.rgb); }\r\n    else if (blend == 4) { fCol.rgb = max(fCol.rgb, sCol.rgb); }\r\n    else if (blend == 5) { fCol.rgb = abs(fCol.rgb - sCol.rgb); }\r\n    else if (blend == 6) { fCol.rgb = 1. - abs(1. - fCol.rgb - sCol.rgb); }\r\n    else if (blend == 7) { fCol.rgb = fCol.rgb + sCol.rgb - (2. * fCol.rgb * sCol.rgb); }\r\n    else if (blend == 8) { fCol.rgb = all(lessThanEqual(fCol.rgb, vec3(0.5, 0.5, 0.5))) ? (2. * fCol.rgb * sCol.rgb) : (1. - 2. * (1. - fCol.rgb) * (1. - sCol.rgb)); }\r\n    else if (blend == 9) { fCol.rgb = all(lessThanEqual(sCol.rgb, vec3(0.5, 0.5, 0.5))) ? (2. * fCol.rgb * sCol.rgb) : (1. - 2. * (1. - fCol.rgb) * (1. - sCol.rgb)); }\r\n    else if (blend == 10) { fCol.rgb = all(lessThanEqual(sCol.rgb, vec3(0.5, 0.5, 0.5))) ? (2. * fCol.rgb * sCol.rgb + fCol.rgb * fCol.rgb * (1. - 2. * sCol.rgb)) : sqrt(fCol.rgb) * (2. * sCol.rgb - 1.) + (2. * fCol.rgb) * (1. - sCol.rgb); }\r\n    else if (blend == 11) { fCol.rgb = fCol.rgb / (1.0 - sCol.rgb); }\r\n    else if (blend == 12) { fCol.rgb = 1.0 - (1.0 - fCol.rgb) / (sCol.rgb)+0.001; }\r\n    else if (blend == 13) { fCol.rgb = fCol.rgb + sCol.rgb; }\r\n    else if (blend == 14) { fCol.rgb = (max(fCol.rgb,sCol.rgb)-(min(fCol.rgb,sCol.rgb)))+abs(fCol.rgb-sCol.rgb);}\r\n    else { fCol.rgb = clamp(fCol.rgb + sCol.rgb,0.,1.); }\r\n\r\n    fCol.a = max(fCol.a,sCol.a);\r\n    return fCol;\r\n}\r\n\r\nvec3 splash(vec2 g)\r\n{\r\n\tvec2 uv = (12.*(2.*g-1.)*.2) / dimensions;\r\n\r\n    float a = abs(atan(uv.x,uv.y) * splashFactor);   \r\n\tvec3 iuv = vec3(uv.x,uv.y,a);\r\n\r\n\tfloat cseed = sin(1.+fract(abs(random(vec2(seed*0.9854,seed*0.3541)))));\r\n    vec3 uvw = iuv;\r\n\r\n\tiuv = 1. - abs(1. - mod(uvw - time*0.1, 2.));\r\n\t\r\n    float initLen = length(iuv);\r\n    float nLen = initLen;\r\n    float tot = 0.;\r\n    \r\n    for (int i=0; i < 12; i++) \r\n\t{\r\n\t\tiuv = abs(iuv) / (initLen*initLen) - cseed;\r\n\t\tnLen = length(iuv);\r\n\t\ttot += abs(nLen-initLen);\r\n\t\tinitLen = nLen;\r\n    }\r\n    \r\n    float fc = tot + 1.0;\r\n\tfc = 1.-smoothstep(fc, fc+1.9, spread/dot(uv,uv));\r\n\t\r\n\treturn vec3(1.-fc)*color;\r\n}\r\n\r\nvoid main() {\r\n    vec4 pixel = texture2D(uSampler,vTextureCoord);\r\n    vec3 splashed = splash(vFilterCoord - anchor);\r\n\r\n    if (splashed == vec3(0.0))\r\n    {\r\n        if (pixel.a > 0. && !cut)\r\n        {\r\n            gl_FragColor = pixel;\r\n            return;\r\n        }\r\n        else if (cut) discard;\r\n    }\r\n\r\n    vec4 splashed4 = vec4(splashed,1.);\r\n    vec4 blendResult = mix(blender(blend, pixel, splashed4),splashed4,1.-pixel.a);\r\n    gl_FragColor = (textureAlphaBlend ? blendResult * pixel.a : blendResult);\r\n}\r\n`;\n\n\n\n\n\n\nclass $8a211ec6959a309d$export$df3de41f3315cb09 extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, seed: seed, spread: spread, splashFactor: splashFactor, color: color, dimX: dimX, dimY: dimY, blend: blend, cut: cut, textureAlphaBlend: textureAlphaBlend, anchorX: anchorX, anchorY: anchorY } = Object.assign({}, $8a211ec6959a309d$export$df3de41f3315cb09.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $7b2095add72e19b6$export$c6eb01d07cc2e1e8), (0, $3916b8f3970cb9e8$export$a55475809cca74a));\n        this.uniforms.color = new Float32Array([\n            1.0,\n            0.05,\n            0.05\n        ]);\n        this.uniforms.dimensions = new Float32Array([\n            1.0,\n            1.0\n        ]);\n        this.uniforms.anchor = new Float32Array([\n            0.0,\n            0.0\n        ]);\n        Object.assign(this, {\n            time: time,\n            seed: seed,\n            spread: spread,\n            splashFactor: splashFactor,\n            color: color,\n            dimX: dimX,\n            dimY: dimY,\n            blend: blend,\n            cut: cut,\n            textureAlphaBlend: textureAlphaBlend,\n            anchorX: anchorX,\n            anchorY: anchorY\n        });\n        this.zOrder = 5;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get seed() {\n        return this.uniforms.seed;\n    }\n    set seed(value) {\n        this.uniforms.seed = value;\n    }\n    get spread() {\n        return this.uniforms.spread;\n    }\n    set spread(value) {\n        this.uniforms.spread = value;\n    }\n    get splashFactor() {\n        return this.uniforms.splashFactor;\n    }\n    set splashFactor(value) {\n        this.uniforms.splashFactor = value;\n    }\n    get dimX() {\n        return this.uniforms.dimensions[0];\n    }\n    set dimX(value) {\n        this.uniforms.dimensions[0] = value;\n    }\n    get dimY() {\n        return this.uniforms.dimensions[1];\n    }\n    set dimY(value) {\n        this.uniforms.dimensions[1] = value;\n    }\n    get anchorY() {\n        return this.uniforms.anchor[1] + 0.5;\n    }\n    set anchorY(value) {\n        this.uniforms.anchor[1] = value - 0.5;\n    }\n    get anchorX() {\n        return this.uniforms.anchor[0] + 0.5;\n    }\n    set anchorX(value) {\n        this.uniforms.anchor[0] = value - 0.5;\n    }\n    get blend() {\n        return this.uniforms.blend;\n    }\n    set blend(value) {\n        this.uniforms.blend = Math.floor(value);\n    }\n    get cut() {\n        return this.uniforms.cut;\n    }\n    set cut(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.cut = value;\n    }\n    get textureAlphaBlend() {\n        return this.uniforms.textureAlphaBlend;\n    }\n    set textureAlphaBlend(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.textureAlphaBlend = value;\n    }\n}\n$8a211ec6959a309d$export$df3de41f3315cb09.defaults = {\n    time: Math.random() * 2000,\n    color: 0xf00505,\n    seed: 0.1,\n    spread: 5,\n    splashFactor: 2,\n    dimX: 1,\n    dimY: 1,\n    blend: 8,\n    cut: false,\n    textureAlphaBlend: false,\n    anchorX: 0.5,\n    anchorY: 0.5\n};\n\n\nconst $fd64db06168e0f7f$export$981b7ede7b45eb87 = `#version 300 es\r\nprecision mediump float;\r\n\r\nuniform float progress;\r\nuniform float magnify;\r\nuniform int type;\r\nuniform vec4 inputClamp;\r\nuniform vec4 inputClampTarget;\r\nuniform sampler2D uSampler;\r\nuniform sampler2D uSamplerTarget;\r\nuniform mat3 filterMatrixInverse;\r\n\r\nin vec2 vTextureCoord;\r\nin vec2 vTextureCoordExtra;\r\nin vec2 vFilterCoord;\r\n\r\nout vec4 outputColor;\r\n\r\nconst float PI = 3.14159265358;\r\n\r\nfloat getClip(vec2 uv) {\r\n    return step(3.5,\r\n       step(inputClampTarget.x, uv.x) +\r\n       step(inputClampTarget.y, uv.y) +\r\n       step(uv.x, inputClampTarget.z) +\r\n       step(uv.y, inputClampTarget.w));\r\n}\r\n\r\nvec4 getFromColor(vec2 uv) {\r\n    return texture(uSampler,clamp(uv,inputClamp.xy,inputClamp.zw));\r\n}\r\n\r\nvec4 getToColor(vec2 uv) {\r\n    return texture(uSamplerTarget,clamp(uv,inputClampTarget.xy,inputClampTarget.zw))*getClip(uv);\r\n}\r\n\r\nfloat rand(vec2 co) {\r\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\r\n}\r\n\r\nvec2 offset(float progress, float x, float theta, float str) {\r\n    float shifty = str*progress*cos(10.0*(progress+x));\r\n    return vec2(0, shifty);\r\n}\r\n\r\nvec2 roffset(float progress, float x, float theta, float str) {\r\n    float shifty = (1.-progress)*str*progress*cos(10.0*(progress+x));\r\n    return vec2(0, shifty);\r\n}\r\n\r\nfloat noise(vec2 co) {\r\n    float a = 12.9898;\r\n    float b = 78.233;\r\n    float c = 43758.5453;\r\n    float dt= dot(co.xy * progress, vec2(a, b));\r\n    float sn= mod(dt,3.14);\r\n    return fract(sin(sn) * c);\r\n}\r\n\r\nvec4 morph(vec2 uv, vec2 uvt) {\r\n    vec4 ca = getFromColor(uv);\r\n    vec4 cb = getToColor(uvt);\r\n    vec2 oa = (((ca.rg+ca.b)*0.5)*2.0-1.0);\r\n    vec2 ob = (((cb.rg+cb.b)*0.5)*2.0-1.0);\r\n    vec2 oc = mix(oa,ob,0.5)*0.1;\r\n    float w0 = progress;\r\n    float w1 = 1.0-w0;\r\n    vec2 sourceMappedCoord = (filterMatrixInverse * vec3(vFilterCoord+(oc*0.4)*w0, 1.0)).xy;\r\n    vec4 fromcol = getFromColor(sourceMappedCoord);\r\n    vec4 tocol = getToColor(uvt-oc*w1);\r\n    float a = mix(ca.a, cb.a, progress);\r\n    return mix(fromcol, tocol, progress)*a;\r\n}\r\n\r\nvec4 waterdrop(vec2 uv, vec2 uvt) {\r\n    vec2 dirt = uvt - vec2(.5);\r\n    float distt = length(dirt);\r\n    if (distt > progress) {\r\n        return mix(getFromColor(uv), getToColor(uvt), progress);\r\n    } else {\r\n        vec2 shiftuvt = dirt * sin(distt * 60. - progress * 20.);\r\n        vec2 fuv = (filterMatrixInverse * vec3(vFilterCoord + (shiftuvt*(1.-progress)), 1.0)).xy;\r\n        return mix(getFromColor(fuv), getToColor(uvt + (shiftuvt*(1.-progress))), progress);\r\n    }\r\n}\r\n\r\nvec4 dreamy(vec2 uv, vec2 uvt) {\r\n    return mix(getFromColor(uv + offset(progress, uv.x, 0.0, 0.03)), \r\n               getToColor(uvt + offset(1.0-progress, uvt.x, 3.14, 0.03)), \r\n               progress);\r\n}\r\n\r\nvec2 swirluv(vec2 uv) {\r\n    vec2 xy = 2.* uv - 1.;\r\n    float fdist = length(xy);\r\n    if (fdist > 1.) return uv;\r\n    uv -= vec2( 0.5, 0.5 );\r\n    float dist = length(uv);\r\n    if ( dist < 1. ) {\r\n\t    float pct = (1. - dist);\r\n\t    float a = ( progress <= 0.5 ) ? mix( 0.0, 1.0, progress*2. ) : mix( 1.0, 0.0, (progress-0.5)*2. );\r\n\t    float t = pct * pct * a * 5.0 * 3.14159;\r\n\t    float s = sin( t );\r\n\t    float c = cos( t );\r\n\t    uv = vec2(dot(uv,vec2(c,-s)),dot(uv,vec2(s,c)));\r\n    }\r\n    uv += vec2(0.5,0.5);\r\n    return uv;\r\n}\r\n\r\nvec4 swirl(vec2 uv, vec2 uvt) {\r\n    vec2 suvfrom = swirluv(vFilterCoord);\r\n    vec2 suvto = swirluv(uvt);\r\n    vec2 sourceMappedCoord = (filterMatrixInverse * vec3(suvfrom, 1.0)).xy;\r\n    vec4 fscol = getFromColor(sourceMappedCoord);\r\n    vec4 ftcol = getToColor(suvto);\r\n    return mix( fscol, ftcol, progress );\r\n}\r\n\r\nvec4 crosswarp(vec2 uv, vec2 uvt) {\r\n    float x = progress;\r\n    x = smoothstep(.0,1.0,(x*2.0+uv.x-1.0));\r\n    vec4 rawfscol = getFromColor(uv);\r\n    vec4 fscol = getFromColor((uv-.5)*(1.-x)+.5);\r\n    vec4 ftcol = getToColor(uvt);\r\n    return mix(fscol, ftcol, x)*mix(rawfscol.a,ftcol.a,progress);\r\n}\r\n\r\nvec4 tvnoise(vec2 uv, vec2 uvt) {\r\n    vec4 noise = vec4(vec3(noise(uv)), 1.);\r\n    vec4 fscol = getFromColor(uv);\r\n    vec4 ftcol = getToColor(uvt);\r\n    float alphamix = mix(fscol.a, ftcol.a, pow(clamp(progress,0.,1.), 0.6));\r\n    if (progress <= 0.30) {\r\n        return mix(fscol, noise*alphamix, pow(clamp(progress,0.,1.),0.3-progress));\r\n    } else if (progress >= 0.70) {\r\n        return mix(noise*alphamix, ftcol, pow(clamp(progress-0.7,0.,1.),1.-progress));\r\n    } else {\r\n        return noise*alphamix;\r\n    }\r\n}\r\n\r\nvec4 hologram(vec2 uv, vec2 uvt) {\r\n    float cosProg = 0.5*(cos(2.*PI*progress)+1.);\r\n    vec4 fscol = getFromColor(uv + roffset(progress, uvt.x, 0., 0.12));\r\n    vec4 ftcol = getToColor(uvt + roffset(progress, uvt.x, 0., 0.6));\r\n  \r\n    float scintensity = max(max(fscol.r,fscol.g),fscol.b);\r\n    float tcintensity = max(max(ftcol.r,ftcol.g),ftcol.b);\r\n\r\n    vec4 tscol = vec4(0.,fscol.g*3.,0.,1.)*scintensity;\r\n    vec4 ttcol = vec4(ftcol.r*3.,0.,0.,1.)*tcintensity;\r\n    \r\n    vec4 iscol = vec4(0.,fscol.g*3.,fscol.b*3.,1.)*scintensity;\r\n    vec4 itcol = vec4(ftcol.r*3.,0.,ftcol.b*3.,1.)*tcintensity;\r\n    \r\n    vec4 smix = mix(mix(fscol,tscol,progress),iscol,1.-cosProg);\r\n    vec4 tmix = mix(mix(ftcol,ttcol,1.-progress),itcol,1.-cosProg);;\r\n\r\n    return mix(smix, \r\n               tmix, \r\n               progress);\r\n}\r\n\r\nvec4 wind(vec2 uv, vec2 uvt) {\r\n    float r = rand(vec2(0, uv.y));\r\n    float m = smoothstep(0.0, -0.25, uv.x*0.75 + 0.25*r - (progress * 1.25));\r\n    return mix(\r\n        getFromColor(uv),\r\n        getToColor(uvt),\r\n        m\r\n    );\r\n}\r\n\r\nvec4 transition(vec2 uv, vec2 uvt) {\r\n    return mix(\r\n        getFromColor(uv),\r\n        getToColor(uvt),\r\n        progress\r\n    );\r\n}\r\n\r\nvoid main() {\r\n    vec4 result;\r\n    float scale = 1./magnify;\r\n    vec2 uvExtra = vTextureCoordExtra;\r\n    uvExtra -= vec2(0.5);\r\n    uvExtra *= mat2(scale,0.,0.,scale);\r\n    uvExtra += vec2(0.5);\r\n\r\n    // shortcut to prevent a lot of computation if progress is equal to 0 or 1\r\n    if (progress == 1.) {\r\n        outputColor = getToColor(uvExtra);\r\n        return;\r\n    }\r\n\r\n    if (progress == 0.) {\r\n        outputColor = getFromColor(vTextureCoord);\r\n        return;\r\n    }\r\n\r\n    if (type <= 1 || type >= 10) {\r\n        result = transition(vTextureCoord, uvExtra);\r\n    } else if (type == 2) {\r\n        result = dreamy(vTextureCoord, uvExtra);\r\n    } else if (type == 3) {\r\n        result = swirl(vTextureCoord, uvExtra);\r\n    } else if (type == 4) {\r\n        result = waterdrop(vTextureCoord, uvExtra);\r\n    } else if (type == 5) {\r\n        result = tvnoise(vTextureCoord, uvExtra);\r\n    } else if (type == 6) {\r\n        result = morph(vTextureCoord, uvExtra);\r\n    } else if (type == 7) {\r\n        result = crosswarp(vTextureCoord, uvExtra);\r\n    } else if (type == 8) {\r\n        result = wind(vTextureCoord, uvExtra);\r\n    } else if (type == 9) {\r\n        result = hologram(vTextureCoord, uvExtra);\r\n    } \r\n   \r\n    outputColor = result;\r\n}\r\n`;\n\n\n// Custom vertex shader with filter matrix to map for additional sampler\nconst $7bc465f1b3307540$export$935bdd8d48f63a2e = `#version 300 es\r\nprecision mediump float;\r\n\r\nin vec2 aVertexPosition;\r\n\r\nuniform mat3 projectionMatrix;\r\nuniform mat3 filterMatrix;\r\nuniform mat3 targetUVMatrix;\r\n\r\nout vec2 vTextureCoord;\r\nout vec2 vTextureCoordExtra;\r\nout vec2 vFilterCoord;\r\n\r\nuniform vec4 inputSize;\r\nuniform vec4 outputFrame;\r\n\r\nvec4 filterVertexPosition( void )\r\n{\r\n    vec2 position = aVertexPosition * max(outputFrame.zw, vec2(0.)) + outputFrame.xy;\r\n\r\n    return vec4((projectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);\r\n}\r\n\r\nvec2 filterTextureCoord( void )\r\n{\r\n    return aVertexPosition * (outputFrame.zw * inputSize.zw);\r\n}\r\n\r\nvoid main(void)\r\n{\r\n\tgl_Position = filterVertexPosition();\r\n\tvTextureCoord = filterTextureCoord();\r\n\tvTextureCoordExtra = (targetUVMatrix * vec3(vTextureCoord, 1.0)).xy;\r\n    vFilterCoord = (filterMatrix * vec3(vTextureCoord, 1.0)).xy;\r\n}\r\n`;\n\n\n\n\n\n\nclass $8b6bb088e94ffbdd$export$cf7260b11c6fd85d extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { imagePath: imagePath, progress: progress, magnify: magnify, type: type } = Object.assign({}, $8b6bb088e94ffbdd$export$cf7260b11c6fd85d.defaults, params);\n        const targetSpriteMatrix = new PIXI.Matrix();\n        // using specific vertex shader and fragment shader\n        super((0, $7bc465f1b3307540$export$935bdd8d48f63a2e), (0, $fd64db06168e0f7f$export$981b7ede7b45eb87));\n        // vertex uniforms\n        this.uniforms.targetUVMatrix = targetSpriteMatrix;\n        // fragment uniforms\n        this.uniforms.inputClampTarget = new Float32Array([\n            0,\n            0,\n            0,\n            0\n        ]);\n        // to store sprite matrix from the filter manager (and send to vertex)\n        this.targetSpriteMatrix = targetSpriteMatrix;\n        Object.assign(this, {\n            imagePath: (0, $843aec23ddc05ff2$export$3bebb302ab08af33)(imagePath),\n            progress: progress,\n            magnify: magnify,\n            type: type\n        });\n        this.zOrder = 1;\n        this.autoFit = false;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    setTMParams(params) {\n        super.setTMParams(params);\n        if (!this.dummy && \"imagePath\" in params) this.assignTexture();\n    }\n    get progress() {\n        return this.uniforms.progress * 100;\n    }\n    set progress(value) {\n        this.uniforms.progress = Math.min(Math.max(value * 0.01, 0), 1);\n    }\n    get magnify() {\n        return this.uniforms.magnify;\n    }\n    set magnify(value) {\n        this.uniforms.magnify = Math.min(Math.max(value, 0.1), 100);\n    }\n    get type() {\n        return this.uniforms.type;\n    }\n    set type(value) {\n        this.uniforms.type = Math.floor(value);\n    }\n    get uSamplerTarget() {\n        return this.uniforms.uSamplerTarget;\n    }\n    set uSamplerTarget(value) {\n        this.uniforms.uSamplerTarget = value;\n    }\n    _setTargetSpriteSize() {\n        const sprite = this.targetSprite;\n        let ratioW = this.placeableImg._texture.baseTexture.realWidth / sprite.texture.baseTexture.realWidth;\n        sprite.width = sprite.texture.baseTexture.realWidth * ratioW;\n        sprite.height = sprite.texture.baseTexture.realHeight * ratioW;\n        sprite.anchor.set(0.5);\n    }\n    assignTexture() {\n        if (this.hasOwnProperty(\"imagePath\")) {\n            let tex = PIXI.Texture.from(this.imagePath);\n            let sprite = new PIXI.Sprite(tex);\n            sprite.renderable = false;\n            this.targetSprite = sprite;\n            // We may need to wait for the texture to be loaded before accessing it's width and height\n            // In such a case register an update listener which should be called when the texture is loaded/becomes valid\n            if (tex.valid) this._setTargetSpriteSize();\n            else tex.on(\"update\", ()=>{\n                this._setTargetSpriteSize();\n            });\n            this.uSamplerTarget = sprite._texture;\n            this.placeableImg.addChild(sprite);\n        }\n    }\n    // override\n    apply(filterManager, input, output, clear) {\n        const targetSprite = this.targetSprite;\n        const tex = targetSprite._texture;\n        if (tex.valid) {\n            if (!tex.uvMatrix) tex.uvMatrix = new PIXI.TextureMatrix(tex, 0.0);\n            tex.uvMatrix.update();\n            this.uniforms.uSamplerTarget = tex;\n            this.uniforms.targetUVMatrix = filterManager.calculateSpriteMatrix(this.targetSpriteMatrix, targetSprite).prepend(tex.uvMatrix.mapCoord);\n            this.uniforms.inputClampTarget = tex.uvMatrix.uClampFrame;\n        }\n        super.apply(filterManager, input, output, clear);\n    }\n    // override\n    destroy() {\n        super.destroy();\n        if (this.placeableImg) this.placeableImg.removeChild(this.targetSprite);\n        this.targetSprite.destroy({\n            children: true,\n            texture: false,\n            baseTexture: false\n        });\n    }\n}\n$8b6bb088e94ffbdd$export$cf7260b11c6fd85d.defaults = {\n    progress: 0,\n    magnify: 1,\n    type: 1\n};\n\n\nconst $93115343eec87627$export$3d2732364cd434b5 = `\r\nprecision mediump float;\r\n\r\nuniform float time;\r\nuniform float amplitude;\r\nuniform float dispersion;\r\nuniform float discardThreshold;\r\nuniform int blend;\r\nuniform bool alphaDiscard;\r\nuniform bool chromatic;\r\nuniform bool inlay;\r\nuniform vec2 scale;\r\nuniform vec3 color;\r\nuniform vec3 color1;\r\nuniform vec3 color2;\r\nuniform vec3 color3;\r\nuniform vec3 color4;\r\n\r\nuniform sampler2D uSampler;\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\nconst float MU_3 = 0.333333333334;\r\n\r\nfloat rand(vec2 n) { \r\n\treturn fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nfloat maxRgbIntensity(vec3 col) {\r\n    return max(max(col.r,col.g),col.b);\r\n}\r\n\r\nfloat colorIntensity(vec3 col) {\r\n    return clamp((col.r + col.g + col.b)*MU_3,0.,1.);\r\n}\r\n\r\nvec3 blendLinearDual(vec3 base, vec3 blend, float intensity) {\r\n    if (intensity < dispersion) {\r\n        return mix(base,blend,pow(abs((1.-dispersion)),clamp(10.*dispersion,1.,3.)));\r\n    } \r\n    return mix(blend,mix(blend,base,1.-pow(intensity*dispersion,0.5)),1.-pow(intensity,4.));\r\n}\r\n\r\nvec3 blendScreen(vec3 base, vec3 blend, float intensity) {\r\n    return vec3(1.)\r\n            -((1.-base*(intensity+dispersion))\r\n            *(1.-blend*clamp(pow(intensity,dispersion),0.,1.)));\r\n}\r\n\r\nfloat blendScreenPure(float base, float blend) {\r\n\treturn 1.0-((1.0-base)*(1.0-blend));\r\n}\r\n\r\nvec3 blendScreenPure(vec3 base, vec3 blend) {\r\n\treturn vec3(blendScreenPure(base.r,blend.r),blendScreenPure(base.g,blend.g),blendScreenPure(base.b,blend.b));\r\n}\r\n\r\nvec3 blendMix(vec3 base, vec3 blend) {\r\n\treturn mix(blendLinearDual(base, blend, smoothstep(0.35,0.6,1.-colorIntensity(blend))),\r\n\t           blendScreen(base, blend, smoothstep(0.,1.,1.-colorIntensity(blend))),\r\n\t           smoothstep(0.,1.,colorIntensity((base+blend)*0.5)));\r\n}\r\n\r\nfloat blendColorBurn(float base, float blend) {\r\n\treturn (blend==0.0)?blend:max((1.0-((1.0-base)/blend)),0.0);\r\n}\r\n\r\nvec3 blendColorBurn(vec3 base, vec3 blend) {\r\n\treturn vec3(blendColorBurn(base.r,blend.r),blendColorBurn(base.g,blend.g),blendColorBurn(base.b,blend.b));\r\n}\r\n\r\nfloat blendColorDodge(float base, float blend) {\r\n\treturn (blend==1.0)?blend:min(base/(1.0-blend),1.0);\r\n}\r\n\r\nvec3 blendColorDodge(vec3 base, vec3 blend) {\r\n\treturn vec3(blendColorDodge(base.r,blend.r),blendColorDodge(base.g,blend.g),blendColorDodge(base.b,blend.b));\r\n}\r\n\r\nfloat blendVividLight(float base, float blend) {\r\n\treturn (blend<0.5)?blendColorBurn(base,(2.0*blend)):blendColorDodge(base,(2.0*(blend-0.5)));\r\n}\r\n\r\nvec3 blendVividLight(vec3 base, vec3 blend) {\r\n\treturn vec3(blendVividLight(base.r,blend.r),blendVividLight(base.g,blend.g),blendVividLight(base.b,blend.b));\r\n}\r\n\r\nvec4 blender(int blend, vec3 scol, vec3 tcol) {\r\n    if (blend <= 1) {\r\n        scol = mix(scol, tcol, smoothstep(dispersion, 1., maxRgbIntensity(tcol)));\r\n    } else if (blend == 2) {\r\n        scol = blendLinearDual(scol, tcol, maxRgbIntensity(tcol));\r\n    } else if (blend == 3) {\r\n        scol = blendLinearDual(scol, tcol, colorIntensity(tcol));\r\n    } else if (blend == 4) {\r\n        scol = blendScreen(scol, tcol, maxRgbIntensity(tcol));\r\n    } else if (blend == 5) {\r\n        scol = blendScreen(scol, tcol, colorIntensity(tcol));\r\n    } else if (blend == 6) {\r\n        scol = blendVividLight(scol,tcol);\r\n    } else if (blend == 7) {\r\n        scol = blendColorDodge(scol,tcol);\r\n    } else if (blend == 8) {\r\n        scol = blendColorBurn(scol,tcol);\r\n    } else if (blend == 9) {\r\n        scol = blendScreen(scol, blendVividLight(scol,tcol), colorIntensity(tcol));\r\n    } else if (blend == 10) {\r\n        scol = blendScreen(scol, blendColorDodge(scol,tcol), colorIntensity(tcol));\r\n    } else if (blend == 11) {\r\n        scol = blendLinearDual(blendVividLight(scol,tcol), tcol, maxRgbIntensity(tcol));\r\n    } else if (blend == 12) {\r\n        scol = blendMix(scol,tcol);\r\n    } else if (blend == 13) {\r\n        scol = blendScreenPure(scol,tcol);\r\n    } else if (blend >= 14) {\r\n        scol = blendScreenPure(scol,tcol*0.5);\r\n    }\r\n\r\n    return vec4(scol,1.);\r\n}\r\n\r\nfloat noise(vec2 n) {\r\n\tconst vec2 d = vec2(0.0, 1.0);\r\n\tvec2 b = floor(n);\r\n\tvec2 f = smoothstep(vec2(0.), vec2(1.0), fract(n));\r\n\treturn mix(mix(rand(b), rand(b + d.yx), f.x), \r\n\t       mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\r\n}\r\n\r\nfloat fbm(vec2 n) {\r\n\tfloat total = 0.0, amp = amplitude;\r\n\tfor (int i = 0; i < 5; i++) {\r\n\t\ttotal += noise(n) * amp;\r\n\t\tn += n;\r\n\t\tamp *= 0.5;\r\n\t}\r\n\treturn total;\r\n}\r\n\r\nvec3 fire(in vec4 pixel) {\r\n    vec3 c1,c2,c3,c4;\r\n\r\n    if (chromatic) {\r\n        c1 = vec3(0.00, 0.50, 0.50);\r\n    \tc2 = vec3(0.60, 0.35, 0.70);\r\n    \tc3 = vec3(0.20, 0.90, 1.00);\r\n    \tc4 = vec3(0.90, 1.00, 0.60); \r\n    } else if ( any(greaterThan(color,vec3(0.))) ) {\r\n        c1 = vec3(0.10*color);\r\n    \tc2 = vec3(0.85*color);\r\n    \tc3 = vec3(0.35*color);\r\n    \tc4 = vec3(color);\r\n    } else {\r\n        c1 = color1;\r\n        c2 = color2;\r\n        c3 = color3;\r\n        c4 = color4;\r\n    }\r\n\r\n\tconst vec3 c5 = vec3(0.1);\r\n\tconst vec3 c6 = vec3(0.9);\r\n\tconst vec2 pivot = vec2(0.5);\r\n\t\r\n    vec2 uv = vFilterCoord;\r\n    uv -= pivot;\r\n\tvec2 p = uv * mat2(8.*scale.x,0.0,0.0,8.*scale.y);\r\n\tuv += pivot;\r\n\r\n    vec2 r;\r\n\tvec3 c;\r\n\tfloat t = time*0.1;\r\n\tfloat q = fbm(p - t);\r\n\r\n\tif (inlay) {\r\n\t    float sat = pixel.r + pixel.g + pixel.b;\r\n\t    float sat4 = sat*4.;\r\n\t    r = vec2(fbm(p + q + t - p.x - p.y - sat), fbm(p + q - t + sat4));\r\n\t    c = mix(c1, c2, fbm(p + r + sat4)) + mix(c3, c4, 1.4-pixel.rgb) - mix(c5, c6, r.y);\r\n\t} else {\r\n\t    r = vec2(fbm(p + q + time - p.x - p.y), fbm(p + q - t));\r\n\t    c = mix(c1, c2, fbm(p + r)) + mix(c3, c4, r.x) - mix(c5, c6, r.y);\r\n\t}\r\n\t\r\n\treturn clamp(c,0.,1.);\r\n}\r\n\r\nvoid main() {\r\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\r\n    if (pixel.a==0.) {\r\n       gl_FragColor = pixel;\r\n       return;\r\n    }\r\n\r\n    vec3 fire = fire(pixel);\r\n    if (alphaDiscard && all(lessThanEqual(fire,vec3(discardThreshold))))  {\r\n        discard;\r\n    }\r\n\r\n    vec4 result = blender(blend, pixel.rgb, fire);\r\n\r\n\tgl_FragColor = result*pixel.a;\r\n}\r\n`;\n\n\n\n\n\n\nclass $3f0e291067dda99d$export$f5292971f4ab78f9 extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    constructor(params){\n        let { time: time, color: color, color1: color1, color2: color2, color3: color3, color4: color4, amplitude: amplitude, dispersion: dispersion, blend: blend, scaleX: scaleX, scaleY: scaleY, alphaDiscard: alphaDiscard, discardThreshold: discardThreshold, chromatic: chromatic, inlay: inlay } = Object.assign({}, $3f0e291067dda99d$export$f5292971f4ab78f9.defaults, params);\n        // using specific vertex shader and fragment shader\n        super((0, $7b2095add72e19b6$export$c6eb01d07cc2e1e8), (0, $93115343eec87627$export$3d2732364cd434b5));\n        this.uniforms.color = new Float32Array([\n            1.0,\n            1.0,\n            1.0\n        ]);\n        this.uniforms.color1 = new Float32Array([\n            1.0,\n            1.0,\n            1.0\n        ]);\n        this.uniforms.color2 = new Float32Array([\n            1.0,\n            1.0,\n            1.0\n        ]);\n        this.uniforms.color3 = new Float32Array([\n            1.0,\n            1.0,\n            1.0\n        ]);\n        this.uniforms.color4 = new Float32Array([\n            1.0,\n            1.0,\n            1.0\n        ]);\n        this.uniforms.scale = new Float32Array([\n            1.0,\n            1.0\n        ]);\n        Object.assign(this, {\n            time: time,\n            color: color,\n            color1: color1,\n            color2: color2,\n            color3: color3,\n            color4: color4,\n            amplitude: amplitude,\n            dispersion: dispersion,\n            blend: blend,\n            scaleX: scaleX,\n            scaleY: scaleY,\n            alphaDiscard: alphaDiscard,\n            discardThreshold: discardThreshold,\n            chromatic: chromatic,\n            inlay: inlay\n        });\n        this.zOrder = 145;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get color1() {\n        return PIXI.utils.rgb2hex(this.uniforms.color1);\n    }\n    set color1(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color1);\n    }\n    get color2() {\n        return PIXI.utils.rgb2hex(this.uniforms.color2);\n    }\n    set color2(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color2);\n    }\n    get color3() {\n        return PIXI.utils.rgb2hex(this.uniforms.color3);\n    }\n    set color3(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color3);\n    }\n    get color4() {\n        return PIXI.utils.rgb2hex(this.uniforms.color4);\n    }\n    set color4(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color4);\n    }\n    get amplitude() {\n        return this.uniforms.amplitude;\n    }\n    set amplitude(value) {\n        this.uniforms.amplitude = value;\n    }\n    get dispersion() {\n        return this.uniforms.dispersion;\n    }\n    set dispersion(value) {\n        this.uniforms.dispersion = value;\n    }\n    get blend() {\n        return this.uniforms.blend;\n    }\n    set blend(value) {\n        this.uniforms.blend = Math.floor(value);\n    }\n    get scaleX() {\n        return this.uniforms.scale[0];\n    }\n    set scaleX(value) {\n        this.uniforms.scale[0] = value;\n    }\n    get scaleY() {\n        return this.uniforms.scale[1];\n    }\n    set scaleY(value) {\n        this.uniforms.scale[1] = value;\n    }\n    get alphaDiscard() {\n        return this.uniforms.alphaDiscard;\n    }\n    set alphaDiscard(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.alphaDiscard = value;\n    }\n    get discardThreshold() {\n        return this.uniforms.discardThreshold;\n    }\n    set discardThreshold(value) {\n        this.uniforms.discardThreshold = value;\n    }\n    get chromatic() {\n        return this.uniforms.chromatic;\n    }\n    set chromatic(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.chromatic = value;\n    }\n    get inlay() {\n        return this.uniforms.inlay;\n    }\n    set inlay(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.inlay = value;\n    }\n}\n$3f0e291067dda99d$export$f5292971f4ab78f9.defaults = {\n    time: 0,\n    color: 0x000000,\n    color1: 0x250000,\n    color2: 0xb20000,\n    color3: 0x330000,\n    color4: 0xffe500,\n    amplitude: 1,\n    dispersion: 0.25,\n    blend: 2,\n    scaleX: 1,\n    scaleY: 1,\n    discardThreshold: 0.1,\n    alphaDiscard: false,\n    chromatic: false,\n    inlay: false\n};\n\n\nconst $4d3a3734a8d2c466$export$9f64abe9148df1d = `#version 300 es\r\nprecision mediump float;\r\n\r\nuniform float rotation;\r\nuniform float twRadius;\r\nuniform float twAngle;\r\nuniform float bpRadius;\r\nuniform float bpStrength;\r\nuniform float alpha;\r\nuniform bool alphaDiscard;\r\n\r\nuniform bool inverse;\r\nuniform bool top;\r\nuniform bool colorize;\r\nuniform bool repeat;\r\n\r\nuniform vec2 scale;\r\nuniform vec2 translation;\r\n\r\nuniform vec3 color;\r\n\r\nuniform vec4 inputClamp;\r\nuniform vec4 inputClampTarget;\r\n\r\nuniform sampler2D uSampler;\r\nuniform sampler2D uSamplerTarget;\r\n\r\nin vec2 vTextureCoord;\r\nin vec2 vTextureCoordExtra;\r\nin vec2 vFilterCoord;\r\nin mat3 vTargetUVMatrix;\r\n\r\nout vec4 outputColor;\r\n\r\nconst float PI = 3.14159265358;\r\n\r\nfloat getClip(in vec2 uv) {\r\n    return step(3.5,\r\n       step(inputClampTarget.x, uv.x) +\r\n       step(inputClampTarget.y, uv.y) +\r\n       step(uv.x, inputClampTarget.z) +\r\n       step(uv.y, inputClampTarget.w));\r\n}\r\n\r\nvec2 morphing(in vec2 uv) {\r\n    float dist = length(uv);\r\n\r\n    // twist effect\r\n    if (dist < twRadius) {\r\n        float ratioDist = (twRadius - dist) / twRadius;\r\n        float angleMod = ratioDist * ratioDist * twAngle;\r\n        float s = sin(angleMod);\r\n        float c = cos(angleMod);\r\n        uv = vec2(uv.x * c - uv.y * s, uv.x * s + uv.y * c);\r\n    }\r\n\r\n    // bulge pinch effect\r\n    if (dist < bpRadius) {\r\n        float percent = dist / bpRadius;\r\n        if (bpStrength > 0.) {\r\n            uv *= mix(1.0, smoothstep(0., bpRadius / dist, percent), bpStrength * 0.75);\r\n        } else {\r\n            uv *= mix(1.0, pow(percent, 1.0 + bpStrength * 0.75) * bpRadius / dist, 1.0 - percent);\r\n        }\r\n    }\r\n\r\n    return uv;\r\n}\r\n\r\nvec4 colorization(in vec4 col) {\r\n    vec3 wcol = col.rgb;\r\n    if (inverse) {\r\n        wcol = (vec3(1.0) - wcol) * col.a;\r\n    }\r\n    float avg = (wcol.r + wcol.g + wcol.b) / 3.0;\r\n    return vec4(vec3(color * avg), col.a);\r\n}\r\n\r\nvec2 transform(in vec2 uv) {\r\n    float angle = -(PI * rotation * 0.005555555555);\r\n    uv -= 0.5;\r\n    uv *= mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\r\n    uv *= mat2(1.0 / scale.x, 0.0, 0.0, 1.0 / scale.y);\r\n    uv = morphing(uv);\r\n    uv += 0.5;\r\n\r\n    return uv;\r\n}\r\n\r\nvec4 getFromColor(in vec2 uv) {\r\n    return texture(uSampler, clamp(uv, inputClamp.xy, inputClamp.zw));\r\n}\r\n\r\nvec4 getToColor(in vec2 uv) {\r\n    return texture(uSamplerTarget, clamp(uv, inputClampTarget.xy, inputClampTarget.zw)) * getClip(uv);\r\n}\r\n\r\nvec4 getToColorFract(in vec2 uv) {\r\n    return textureGrad(uSamplerTarget, fract(uv), dFdx(uv), dFdy(uv));\r\n}\r\n\r\nvoid main() {\r\n\r\n    // UV transformations\r\n    vec2 uvTex = transform(vTextureCoordExtra);\r\n\r\n    // get samplers color\r\n    vec4 icolor = getFromColor(vTextureCoord);\r\n\r\n    vec4 tcolor;\r\n    if(repeat) {\r\n        tcolor = getToColorFract(uvTex + translation);\r\n    } else {\r\n        tcolor = getToColor(uvTex + translation);\r\n    }\r\n\r\n    tcolor.a *= alpha;\r\n    if(alphaDiscard) tcolor = mix(tcolor, icolor, 1.0 - icolor.a);\r\n\r\n    // colorize if necessary\r\n    if (colorize) {\r\n        tcolor = colorization(tcolor);\r\n    }\r\n\r\n    vec3 fcolor = tcolor.rgb;\r\n    if(top && icolor.a > 0.) fcolor = mix(tcolor.rgb, icolor.rgb, 1.0 - tcolor.a);\r\n    else if(!top) fcolor = mix(icolor.rgb, tcolor.rgb, 1.0 - icolor.a);\r\n   \r\n    outputColor = vec4(fcolor, max(tcolor.a, icolor.a));\r\n}\r\n`;\n\n\n\n\n\n\n\nclass $6ec6ac6f8551358e$export$96f9417ff369e52 extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    tex = null;\n    constructor(params){\n        let { imagePath: imagePath, color: color, colorize: colorize, inverse: inverse, alpha: alpha, alphaDiscard: alphaDiscard, repeat: repeat, top: top, rotation: rotation, twRadiusPercent: twRadiusPercent, twAngle: twAngle, twRotation: twRotation, bpRadiusPercent: bpRadiusPercent, bpStrength: bpStrength, scale: scale, scaleX: scaleX, scaleY: scaleY, translationX: translationX, translationY: translationY, play: play, loop: loop, maintainAspectRatio: maintainAspectRatio, maintainScale: maintainScale } = Object.assign({}, $6ec6ac6f8551358e$export$96f9417ff369e52.defaults, params);\n        const targetSpriteMatrix = new PIXI.Matrix();\n        // using specific vertex shader and fragment shader\n        super((0, $7bc465f1b3307540$export$935bdd8d48f63a2e), (0, $4d3a3734a8d2c466$export$9f64abe9148df1d));\n        // vertex uniforms\n        this.uniforms.targetUVMatrix = targetSpriteMatrix;\n        // fragment uniforms\n        this.uniforms.inputClampTarget = new Float32Array([\n            0,\n            0,\n            0,\n            0\n        ]);\n        this.uniforms.color = new Float32Array([\n            0.0,\n            0.0,\n            0.0\n        ]);\n        this.uniforms.scale = new Float32Array([\n            1.0,\n            1.0\n        ]);\n        this.uniforms.translation = new Float32Array([\n            0.0,\n            0.0\n        ]);\n        // to store sprite matrix from the filter manager (and send to vertex)\n        this.targetSpriteMatrix = targetSpriteMatrix;\n        Object.assign(this, {\n            imagePath: (0, $843aec23ddc05ff2$export$3bebb302ab08af33)(imagePath),\n            color: color,\n            colorize: colorize,\n            inverse: inverse,\n            alpha: alpha,\n            alphaDiscard: alphaDiscard,\n            repeat: repeat,\n            top: top,\n            rotation: rotation,\n            twRadiusPercent: twRadiusPercent,\n            twAngle: twAngle,\n            twRotation: twRotation,\n            bpRadiusPercent: bpRadiusPercent,\n            bpStrength: bpStrength,\n            scale: scale,\n            scaleX: scaleX,\n            scaleY: scaleY,\n            translationX: translationX,\n            translationY: translationY,\n            play: play,\n            loop: loop,\n            maintainAspectRatio: maintainAspectRatio,\n            maintainScale: maintainScale\n        });\n        this.zOrder = 0;\n        this.autoFit = false;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    setTMParams(params) {\n        super.setTMParams(params);\n        if (!this.dummy && \"imagePath\" in params) this.assignTexture();\n    }\n    _play = true;\n    _loop = true;\n    _maintainAspectRatio = false;\n    _maintainScale = false;\n    get play() {\n        return this._play;\n    }\n    set play(value) {\n        if (!(value == null) && typeof value === \"boolean\") {\n            this._play = value;\n            this._playVideo(this._play);\n        }\n    }\n    get loop() {\n        return this._loop;\n    }\n    set loop(value) {\n        if (!(value == null) && typeof value === \"boolean\") {\n            this._loop = value;\n            this._playVideo(this._play);\n        }\n    }\n    get maintainAspectRatio() {\n        return this._maintainAspectRatio;\n    }\n    set maintainAspectRatio(value) {\n        if (!(value == null) && typeof value === \"boolean\") this._maintainAspectRatio = value;\n    }\n    get maintainScale() {\n        return this._maintainScale;\n    }\n    set maintainScale(value) {\n        if (!(value == null) && typeof value === \"boolean\") this._maintainScale = value;\n    }\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.color);\n    }\n    set color(value) {\n        new PIXI.Color(value).toRgbArray(this.uniforms.color);\n    }\n    get colorize() {\n        return this.uniforms.colorize;\n    }\n    set colorize(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.colorize = value;\n    }\n    get inverse() {\n        return this.uniforms.inverse;\n    }\n    set inverse(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.inverse = value;\n    }\n    get alpha() {\n        return this.uniforms.alpha;\n    }\n    set alpha(value) {\n        this.uniforms.alpha = value;\n    }\n    get alphaDiscard() {\n        return this.uniforms.alphaDiscard;\n    }\n    set alphaDiscard(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.alphaDiscard = value;\n    }\n    get repeat() {\n        return this.uniforms.repeat;\n    }\n    set repeat(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.repeat = value;\n    }\n    get top() {\n        return this.uniforms.top;\n    }\n    set top(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.top = value;\n    }\n    get rotation() {\n        return this.uniforms.rotation;\n    }\n    set rotation(value) {\n        this.uniforms.rotation = value;\n    }\n    get twRadiusPercent() {\n        return this.uniforms.twRadius * 200;\n    }\n    set twRadiusPercent(value) {\n        this.uniforms.twRadius = value / 200;\n    }\n    get twAngle() {\n        return this.uniforms.twAngle;\n    }\n    set twAngle(value) {\n        this.uniforms.twAngle = value;\n    }\n    get twRotation() {\n        return this.uniforms.twAngle * (180 / Math.PI);\n    }\n    set twRotation(value) {\n        this.uniforms.twAngle = value * (Math.PI / 180);\n    }\n    get bpRadiusPercent() {\n        return this.uniforms.bpRadius * 200;\n    }\n    set bpRadiusPercent(value) {\n        this.uniforms.bpRadius = value / 200;\n    }\n    get bpStrength() {\n        return this.uniforms.bpStrength;\n    }\n    set bpStrength(value) {\n        this.uniforms.bpStrength = value;\n    }\n    get scale() {\n        // a little hack (we get only x)\n        return this.uniforms.scale[0];\n    }\n    set scale(value) {\n        this.uniforms.scale[1] = this.uniforms.scale[0] = value;\n    }\n    get scaleX() {\n        return this.uniforms.scale[0];\n    }\n    set scaleX(value) {\n        this.uniforms.scale[0] = value;\n    }\n    get scaleY() {\n        return this.uniforms.scale[1];\n    }\n    set scaleY(value) {\n        this.uniforms.scale[1] = value;\n    }\n    get translationX() {\n        return this.uniforms.translation[0];\n    }\n    set translationX(value) {\n        this.uniforms.translation[0] = value;\n    }\n    get translationY() {\n        return this.uniforms.translation[1];\n    }\n    set translationY(value) {\n        this.uniforms.translation[1] = value;\n    }\n    get uSamplerTarget() {\n        return this.uniforms.uSamplerTarget;\n    }\n    set uSamplerTarget(value) {\n        this.uniforms.uSamplerTarget = value;\n    }\n    async _playVideo(value) {\n        // Play if baseTexture resource is a video\n        if (this.tex) {\n            const source = getProperty(this.tex, \"baseTexture.resource.source\");\n            if (source && source.tagName === \"VIDEO\") {\n                if (isNaN(source.duration)) await new Promise((resolve)=>{\n                    source.onloadedmetadata = ()=>resolve();\n                });\n                if (value) game.video.play(source, {\n                    loop: this._loop,\n                    volume: 0\n                });\n                else game.video.stop(source);\n            }\n        }\n    }\n    assignTexture() {\n        if (this.hasOwnProperty(\"imagePath\")) {\n            // Destroy the previous sprite\n            if (this.targetSprite && !this.targetSprite.destroyed) this.targetSprite.destroy({\n                children: true,\n                texture: false,\n                baseTexture: false\n            });\n            this.tex = PIXI.Texture.from(this.imagePath);\n            let sprite = new PIXI.Sprite(this.tex);\n            sprite.renderable = false;\n            if (this.placeableImg._texture) {\n                sprite.width = this.placeableImg._texture.baseTexture.realWidth;\n                sprite.height = this.placeableImg._texture.baseTexture.realHeight;\n                sprite.anchor.set(0.5);\n            } else {\n                sprite.width = this.placeableImg.width;\n                sprite.height = this.placeableImg.height;\n            }\n            this.targetSprite = sprite;\n            this.uSamplerTarget = sprite._texture;\n            this.placeableImg.addChild(sprite);\n            this._playVideo(this._play);\n        }\n    }\n    // override\n    apply(filterManager, input, output, clear) {\n        const targetSprite = this.targetSprite;\n        const tex = targetSprite._texture;\n        if (tex.valid) {\n            if (!tex.uvMatrix) tex.uvMatrix = new PIXI.TextureMatrix(tex, 0.0);\n            tex.uvMatrix.update();\n            this.uniforms.uSamplerTarget = tex;\n            if (this.maintainScale) {\n                let pScale = targetSprite.parent.scale;\n                targetSprite.scale.set(1 / pScale.x, 1 / pScale.y);\n            }\n            let w = targetSprite.worldTransform;\n            if (this.maintainAspectRatio) {\n                let scale = Math.min(w.a, w.d);\n                w.set(scale, w.b, w.c, scale, w.tx, w.ty);\n            }\n            this.uniforms.targetUVMatrix = filterManager.calculateSpriteMatrix(this.targetSpriteMatrix, targetSprite);\n            this.uniforms.inputClampTarget = tex.uvMatrix.uClampFrame;\n        }\n        super.apply(filterManager, input, output, clear);\n    }\n    // override\n    destroy() {\n        super.destroy();\n        if (!this.targetSprite.destroyed) this.targetSprite.destroy({\n            children: true,\n            texture: false,\n            baseTexture: false\n        });\n    }\n}\n$6ec6ac6f8551358e$export$96f9417ff369e52.defaults = {\n    color: 0x000000,\n    colorize: false,\n    inverse: false,\n    alpha: 1,\n    alphaDiscard: false,\n    repeat: false,\n    top: false,\n    rotation: 0.0,\n    twRadiusPercent: 0,\n    twAngle: 0,\n    bpRadiusPercent: 0,\n    bpStrength: 0,\n    scaleX: 1,\n    scaleY: 1,\n    translationX: 0,\n    translationY: 0,\n    play: true,\n    loop: true,\n    maintainAspectRatio: false,\n    maintainScale: false\n};\n\n\nconst $9736e5d4a7871309$export$3729c40aa34df6ff = `#version 300 es\r\nprecision mediump float;\r\n\r\nuniform float rotation;\r\nuniform float twRadius;\r\nuniform float twAngle;\r\nuniform float bpRadius;\r\nuniform float bpStrength;\r\nuniform float alpha;\r\n\r\nuniform bool repeat;\r\n\r\nuniform vec2 scale;\r\nuniform vec2 translation;\r\n\r\nuniform vec4 inputClamp;\r\nuniform vec4 inputClampTarget;\r\n\r\nuniform sampler2D uSampler;\r\nuniform sampler2D uSamplerTarget;\r\n\r\nin vec2 vTextureCoord;\r\nin vec2 vTextureCoordExtra;\r\nin vec2 vFilterCoord;\r\nin mat3 vTargetUVMatrix;\r\n\r\nout vec4 outputColor;\r\n\r\nconst float PI = 3.14159265358;\r\n\r\nfloat getClip(in vec2 uv) {\r\n    return step(3.5,\r\n       step(inputClampTarget.x, uv.x) +\r\n       step(inputClampTarget.y, uv.y) +\r\n       step(uv.x, inputClampTarget.z) +\r\n       step(uv.y, inputClampTarget.w));\r\n}\r\n\r\nvec2 morphing(in vec2 uv) {\r\n    float dist = length(uv);\r\n\r\n    // twist effect\r\n    if (dist < twRadius) {\r\n        float ratioDist = (twRadius - dist) / twRadius;\r\n        float angleMod = ratioDist * ratioDist * twAngle;\r\n        float s = sin(angleMod);\r\n        float c = cos(angleMod);\r\n        uv = vec2(uv.x * c - uv.y * s, uv.x * s + uv.y * c);\r\n    }\r\n\r\n    // bulge pinch effect\r\n    if (dist < bpRadius) {\r\n        float percent = dist / bpRadius;\r\n        if (bpStrength > 0.) {\r\n            uv *= mix(1.0, smoothstep(0., bpRadius / dist, percent), bpStrength * 0.75);\r\n        } else {\r\n            uv *= mix(1.0, pow(percent, 1.0 + bpStrength * 0.75) * bpRadius / dist, 1.0 - percent);\r\n        }\r\n    }\r\n\r\n    return uv;\r\n}\r\n\r\nvec2 transform(in vec2 uv) {\r\n    float angle = -(PI * rotation * 0.005555555555);\r\n    uv -= 0.5;\r\n    uv *= mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\r\n    uv *= mat2(1.0 / scale.x, 0.0, 0.0, 1.0 / scale.y);\r\n    uv = morphing(uv);\r\n    uv += 0.5;\r\n\r\n    return uv;\r\n}\r\n\r\nvec4 getFromColor(in vec2 uv) {\r\n    return texture(uSampler, clamp(uv, inputClamp.xy, inputClamp.zw));\r\n}\r\n\r\nvec4 getToColor(in vec2 uv) {\r\n    return texture(uSamplerTarget, clamp(uv, inputClampTarget.xy, inputClampTarget.zw)) * getClip(uv);\r\n}\r\n\r\nvec4 getToColorFract(in vec2 uv) {\r\n    return textureGrad(uSamplerTarget, fract(uv), dFdx(uv), dFdy(uv));\r\n}\r\n\r\nvoid main() {\r\n\r\n    // UV transformations\r\n    vec2 uvTex = transform(vTextureCoordExtra);\r\n\r\n    // get samplers color\r\n    vec4 icolor = getFromColor(vTextureCoord);\r\n\r\n    vec4 tcolor;\r\n    if(repeat) tcolor = getToColorFract(uvTex + translation);\r\n    else tcolor = getToColor(uvTex + translation);\r\n\r\n    outputColor = icolor * (tcolor.a * alpha);\r\n}\r\n`;\n\n\n\n\n\n\n\nclass $68be543dfb80fbf0$export$4569ea13832ce134 extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    tex = null;\n    constructor(params){\n        let { imagePath: imagePath, alpha: alpha, repeat: repeat, rotation: rotation, twRadiusPercent: twRadiusPercent, twAngle: twAngle, twRotation: twRotation, bpRadiusPercent: bpRadiusPercent, bpStrength: bpStrength, scale: scale, scaleX: scaleX, scaleY: scaleY, translationX: translationX, translationY: translationY, play: play, loop: loop, maintainAspectRatio: maintainAspectRatio, maintainScale: maintainScale } = Object.assign({}, $68be543dfb80fbf0$export$4569ea13832ce134.defaults, params);\n        const targetSpriteMatrix = new PIXI.Matrix();\n        // using specific vertex shader and fragment shader\n        super((0, $7bc465f1b3307540$export$935bdd8d48f63a2e), (0, $9736e5d4a7871309$export$3729c40aa34df6ff));\n        // vertex uniforms\n        this.uniforms.targetUVMatrix = targetSpriteMatrix;\n        // fragment uniforms\n        this.uniforms.inputClampTarget = new Float32Array([\n            0,\n            0,\n            0,\n            0\n        ]);\n        this.uniforms.color = new Float32Array([\n            0.0,\n            0.0,\n            0.0\n        ]);\n        this.uniforms.scale = new Float32Array([\n            1.0,\n            1.0\n        ]);\n        this.uniforms.translation = new Float32Array([\n            0.0,\n            0.0\n        ]);\n        // to store sprite matrix from the filter manager (and send to vertex)\n        this.targetSpriteMatrix = targetSpriteMatrix;\n        Object.assign(this, {\n            imagePath: (0, $843aec23ddc05ff2$export$3bebb302ab08af33)(imagePath),\n            alpha: alpha,\n            repeat: repeat,\n            rotation: rotation,\n            twRadiusPercent: twRadiusPercent,\n            twAngle: twAngle,\n            twRotation: twRotation,\n            bpRadiusPercent: bpRadiusPercent,\n            bpStrength: bpStrength,\n            scale: scale,\n            scaleX: scaleX,\n            scaleY: scaleY,\n            translationX: translationX,\n            translationY: translationY,\n            play: play,\n            loop: loop,\n            maintainAspectRatio: maintainAspectRatio,\n            maintainScale: maintainScale\n        });\n        this.zOrder = 0;\n        this.autoFit = false;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    setTMParams(params) {\n        super.setTMParams(params);\n        if (!this.dummy && \"imagePath\" in params) this.assignTexture();\n    }\n    _play = true;\n    _loop = true;\n    _maintainAspectRatio = false;\n    _maintainScale = false;\n    get play() {\n        return this._play;\n    }\n    set play(value) {\n        if (!(value == null) && typeof value === \"boolean\") {\n            this._play = value;\n            this._playVideo(this._play);\n        }\n    }\n    get loop() {\n        return this._loop;\n    }\n    set loop(value) {\n        if (!(value == null) && typeof value === \"boolean\") {\n            this._loop = value;\n            this._playVideo(this._play);\n        }\n    }\n    get maintainAspectRatio() {\n        return this._maintainAspectRatio;\n    }\n    set maintainAspectRatio(value) {\n        if (!(value == null) && typeof value === \"boolean\") this._maintainAspectRatio = value;\n    }\n    get maintainScale() {\n        return this._maintainScale;\n    }\n    set maintainScale(value) {\n        if (!(value == null) && typeof value === \"boolean\") this._maintainScale = value;\n    }\n    get alpha() {\n        return this.uniforms.alpha;\n    }\n    set alpha(value) {\n        this.uniforms.alpha = value;\n    }\n    get repeat() {\n        return this.uniforms.repeat;\n    }\n    set repeat(value) {\n        if (!(value == null) && typeof value === \"boolean\") this.uniforms.repeat = value;\n    }\n    get rotation() {\n        return this.uniforms.rotation;\n    }\n    set rotation(value) {\n        this.uniforms.rotation = value;\n    }\n    get twRadiusPercent() {\n        return this.uniforms.twRadius * 200;\n    }\n    set twRadiusPercent(value) {\n        this.uniforms.twRadius = value / 200;\n    }\n    get twAngle() {\n        return this.uniforms.twAngle;\n    }\n    set twAngle(value) {\n        this.uniforms.twAngle = value;\n    }\n    get twRotation() {\n        return this.uniforms.twAngle * (180 / Math.PI);\n    }\n    set twRotation(value) {\n        this.uniforms.twAngle = value * (Math.PI / 180);\n    }\n    get bpRadiusPercent() {\n        return this.uniforms.bpRadius * 200;\n    }\n    set bpRadiusPercent(value) {\n        this.uniforms.bpRadius = value / 200;\n    }\n    get bpStrength() {\n        return this.uniforms.bpStrength;\n    }\n    set bpStrength(value) {\n        this.uniforms.bpStrength = value;\n    }\n    get scale() {\n        // a little hack (we get only x)\n        return this.uniforms.scale[0];\n    }\n    set scale(value) {\n        this.uniforms.scale[1] = this.uniforms.scale[0] = value;\n    }\n    get scaleX() {\n        return this.uniforms.scale[0];\n    }\n    set scaleX(value) {\n        this.uniforms.scale[0] = value;\n    }\n    get scaleY() {\n        return this.uniforms.scale[1];\n    }\n    set scaleY(value) {\n        this.uniforms.scale[1] = value;\n    }\n    get translationX() {\n        return this.uniforms.translation[0];\n    }\n    set translationX(value) {\n        this.uniforms.translation[0] = value;\n    }\n    get translationY() {\n        return this.uniforms.translation[1];\n    }\n    set translationY(value) {\n        this.uniforms.translation[1] = value;\n    }\n    get uSamplerTarget() {\n        return this.uniforms.uSamplerTarget;\n    }\n    set uSamplerTarget(value) {\n        this.uniforms.uSamplerTarget = value;\n    }\n    async _playVideo(value) {\n        // Play if baseTexture resource is a video\n        if (this.tex) {\n            const source = getProperty(this.tex, \"baseTexture.resource.source\");\n            if (source && source.tagName === \"VIDEO\") {\n                if (isNaN(source.duration)) await new Promise((resolve)=>{\n                    source.onloadedmetadata = ()=>resolve();\n                });\n                if (value) game.video.play(source, {\n                    loop: this._loop,\n                    volume: 0\n                });\n                else game.video.stop(source);\n            }\n        }\n    }\n    assignTexture() {\n        if (this.hasOwnProperty(\"imagePath\")) {\n            // Destroy the previous sprite\n            if (this.targetSprite && !this.targetSprite.destroyed) this.targetSprite.destroy({\n                children: true,\n                texture: false,\n                baseTexture: false\n            });\n            this.tex = PIXI.Texture.from(this.imagePath);\n            let sprite = new PIXI.Sprite(this.tex);\n            sprite.renderable = false;\n            if (this.placeableImg._texture) {\n                sprite.width = this.placeableImg._texture.baseTexture.realWidth;\n                sprite.height = this.placeableImg._texture.baseTexture.realHeight;\n                sprite.anchor.set(0.5);\n            } else {\n                sprite.width = this.placeableImg.width;\n                sprite.height = this.placeableImg.height;\n            }\n            this.targetSprite = sprite;\n            this.uSamplerTarget = sprite._texture;\n            this.placeableImg.addChild(sprite);\n            this._playVideo(this._play);\n        }\n    }\n    // override\n    apply(filterManager, input, output, clear) {\n        const targetSprite = this.targetSprite;\n        const tex = targetSprite._texture;\n        if (tex.valid) {\n            if (!tex.uvMatrix) tex.uvMatrix = new PIXI.TextureMatrix(tex, 0.0);\n            tex.uvMatrix.update();\n            this.uniforms.uSamplerTarget = tex;\n            if (this.maintainScale) {\n                let pScale = targetSprite.parent.scale;\n                targetSprite.scale.set(1 / pScale.x, 1 / pScale.y);\n            }\n            let w = targetSprite.worldTransform;\n            if (this.maintainAspectRatio) {\n                let scale = Math.min(w.a, w.d);\n                w.set(scale, w.b, w.c, scale, w.tx, w.ty);\n            }\n            this.uniforms.targetUVMatrix = filterManager.calculateSpriteMatrix(this.targetSpriteMatrix, targetSprite);\n            this.uniforms.inputClampTarget = tex.uvMatrix.uClampFrame;\n        }\n        super.apply(filterManager, input, output, clear);\n    }\n    // override\n    destroy() {\n        super.destroy();\n        if (!this.targetSprite.destroyed) this.targetSprite.destroy({\n            children: true,\n            texture: false,\n            baseTexture: false\n        });\n    }\n}\n$68be543dfb80fbf0$export$4569ea13832ce134.defaults = {\n    alpha: 1,\n    repeat: false,\n    rotation: 0.0,\n    twRadiusPercent: 0,\n    twAngle: 0,\n    bpRadiusPercent: 0,\n    bpStrength: 0,\n    scaleX: 1,\n    scaleY: 1,\n    translationX: 0,\n    translationY: 0,\n    play: true,\n    loop: true,\n    maintainAspectRatio: false,\n    maintainScale: false\n};\n\n\n\n\nclass $ed38b6bd78b4a5ef$export$c3ce4d77f1074b4d extends PIXI.filters.ColorReplaceFilter {\n    constructor(params){\n        super();\n        this.originalColor = [\n            1,\n            0,\n            0\n        ];\n        this.newColor = [\n            0,\n            1,\n            0\n        ];\n        this.epsilon = 0.7;\n        this.zOrder = 100;\n        this.animating = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n}\n\n\n\n\n\n\nconst $21badb97c59966b9$export$711d0b0b05d4a93a = `\r\nvarying vec2 vTextureCoord;\r\nuniform sampler2D uSampler;\r\nuniform vec3 tint;\r\nvoid main() {\r\n    vec4 color = texture2D(uSampler, vTextureCoord);\r\n    float lesser = min(color.g,color.b);\r\n    float bigger = max(color.g,color.b);\r\n    if ((bigger - lesser < 0.1) && (color.r > 1.5 * bigger)) {\r\n        float primary = color.r;\r\n        float range = primary - lesser;\r\n        color.r = lesser + range * tint.r;\r\n        color.g = lesser + range * tint.g;\r\n        color.b = lesser + range * tint.b;\r\n    }\r\n    gl_FragColor = color;\r\n}`;\n\n\nclass $15d7437eb4e5f5ac$export$1ee8d69885ee6ad1 extends (0, $d39b4acfbdc1a130$export$c042bd0ff4d3251b) {\n    constructor(params){\n        super((0, $7b2095add72e19b6$export$c6eb01d07cc2e1e8), (0, $21badb97c59966b9$export$711d0b0b05d4a93a));\n        this.tint = [\n            1,\n            0,\n            0\n        ];\n        this.zOrder = 100;\n        this.animating = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get tint() {\n        return this.uniforms.tint;\n    }\n    set tint(value) {\n        this.uniforms.tint = value;\n    }\n}\n\n\n\nconst $855c97940ea7d48a$export$19612c32a2f7f4cd = {\n    MAIN: \"tmfx-main\",\n    TEMPLATE: \"tmfx-template\"\n};\nvar $855c97940ea7d48a$export$7afd9c1079ecedf7 = [];\nlet $855c97940ea7d48a$var$params = [\n    {\n        filterType: \"bevel\",\n        filterId: \"bevel\",\n        rotation: 0,\n        thickness: 5,\n        lightColor: 0xff0000,\n        lightAlpha: 0.8,\n        shadowColor: 0x00ff00,\n        shadowAlpha: 0.5,\n        animated: {\n            rotation: {\n                active: true,\n                clockWise: true,\n                loopDuration: 1600,\n                animType: \"syncRotation\"\n            }\n        }\n    }\n];\nvar $855c97940ea7d48a$var$presetObject = {};\n$855c97940ea7d48a$var$presetObject.name = \"bevel\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"adjustment\",\n        filterId: \"adjustment\",\n        saturation: 1.5,\n        brightness: 1.5,\n        contrast: 2,\n        gamma: 2,\n        red: 4,\n        green: 0.25,\n        blue: 0.25,\n        alpha: 1,\n        animated: {\n            alpha: {\n                active: true,\n                loopDuration: 5000,\n                animType: \"syncCosOscillation\",\n                val1: 0.15,\n                val2: 1\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"adjustment\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"shadow\",\n        filterId: \"dropshadow\",\n        rotation: 35,\n        blur: 2,\n        quality: 5,\n        distance: 20,\n        alpha: 0.7,\n        padding: 10,\n        shadowOnly: false,\n        color: 0x000000,\n        animated: {\n            blur: {\n                active: true,\n                loopDuration: 1500,\n                animType: \"syncCosOscillation\",\n                val1: 2,\n                val2: 3\n            },\n            rotation: {\n                active: true,\n                loopDuration: 150,\n                animType: \"syncSinOscillation\",\n                val1: 33,\n                val2: 35\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"dropshadow\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"outline\",\n        filterId: \"outline\",\n        padding: 10,\n        color: 0xee6035,\n        thickness: 1,\n        quality: 5,\n        animated: {\n            thickness: {\n                active: true,\n                loopDuration: 800,\n                animType: \"syncCosOscillation\",\n                val1: 1,\n                val2: 6\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"outline\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"glow\",\n        filterId: \"glow\",\n        outerStrength: 7,\n        innerStrength: 0,\n        color: 0x006000,\n        quality: 0.5,\n        padding: 10,\n        animated: {\n            color: {\n                active: true,\n                loopDuration: 3000,\n                animType: \"colorOscillation\",\n                val1: 0x003000,\n                val2: 0x00ff00\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"glow\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"xbloom\",\n        filterId: \"bloom\",\n        threshold: 0.35,\n        bloomScale: 0,\n        brightness: 1,\n        blur: 0.1,\n        padding: 10,\n        quality: 15,\n        blendMode: 0,\n        animated: {\n            bloomScale: {\n                active: true,\n                loopDuration: 2000,\n                animType: \"syncCosOscillation\",\n                val1: 0,\n                val2: 2.1\n            },\n            threshold: {\n                active: false,\n                loopDuration: 1000,\n                animType: \"syncCosOscillation\",\n                val1: 0.0,\n                val2: 1.9\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"bloom\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"distortion\",\n        filterId: \"distortion\",\n        maskPath: \"modules/tokenmagic/fx/assets/distortion-1.png\",\n        maskSpriteScaleX: 5,\n        maskSpriteScaleY: 5,\n        padding: 20,\n        animated: {\n            maskSpriteX: {\n                active: true,\n                speed: 0.05,\n                animType: \"move\"\n            },\n            maskSpriteY: {\n                active: true,\n                speed: 0.07,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"distortion\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"oldfilm\",\n        filterId: \"oldfilm\",\n        sepia: 0.6,\n        noise: 0.2,\n        noiseSize: 1.0,\n        scratch: 0.8,\n        scratchDensity: 0.5,\n        scratchWidth: 1.2,\n        vignetting: 0.9,\n        vignettingAlpha: 0.6,\n        vignettingBlur: 0.2,\n        animated: {\n            seed: {\n                active: true,\n                animType: \"randomNumber\",\n                val1: 0,\n                val2: 1\n            },\n            vignetting: {\n                active: true,\n                animType: \"syncCosOscillation\",\n                loopDuration: 2000,\n                val1: 0.2,\n                val2: 0.4\n            }\n        }\n    },\n    {\n        filterType: \"outline\",\n        filterId: \"oldfilm\",\n        color: 0x000000,\n        thickness: 0\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"oldfilm\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"twist\",\n        filterId: \"twist\",\n        radiusPercent: 120,\n        angle: 0,\n        animated: {\n            angle: {\n                active: true,\n                animType: \"sinOscillation\",\n                loopDuration: 10000,\n                val1: -0.6 * Math.PI,\n                val2: 0.6 * Math.PI\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"twist\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"bulgepinch\",\n        filterId: \"bulge\",\n        padding: 150,\n        strength: 0,\n        zIndex: 2,\n        radiusPercent: 200,\n        animated: {\n            strength: {\n                active: true,\n                animType: \"cosOscillation\",\n                loopDuration: 2000,\n                val1: 0,\n                val2: 0.45\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"bulge\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"blur\",\n        filterId: \"blur\",\n        padding: 10,\n        quality: 4.0,\n        blur: 0,\n        blurX: 0,\n        blurY: 0,\n        animated: {\n            blurX: {\n                active: true,\n                animType: \"syncCosOscillation\",\n                loopDuration: 500,\n                val1: 0,\n                val2: 6\n            },\n            blurY: {\n                active: true,\n                animType: \"syncCosOscillation\",\n                loopDuration: 750,\n                val1: 0,\n                val2: 6\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"blur\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"zoomblur\",\n        filterId: \"zoomblur\",\n        strength: 0.15,\n        innerRadiusPercent: 65,\n        radiusPercent: 100,\n        padding: 30,\n        animated: {\n            innerRadiusPercent: {\n                active: true,\n                animType: \"sinOscillation\",\n                loopDuration: 500,\n                val1: 65,\n                val2: 75\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"zoomblur\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"shockwave\",\n        filterId: \"shockwave\",\n        time: 0,\n        amplitude: 8,\n        wavelength: 75,\n        radius: 500,\n        brightness: 1.5,\n        speed: 25,\n        padding: 0,\n        animated: {\n            time: {\n                animType: \"cosOscillation\",\n                active: true,\n                loopDuration: 1800,\n                val1: 0,\n                val2: 10\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"shockwave\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"zapshadow\",\n        filterId: \"zapshadow\",\n        alphaTolerance: 0.45\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"zapshadow\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"ray\",\n        filterId: \"rays\",\n        time: 0,\n        color: 0xcf8000,\n        alpha: 0.5,\n        divisor: 32,\n        anchorX: 0,\n        anchorY: 0,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0005,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"rays\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"fog\",\n        filterId: \"fog\",\n        color: 0x000000,\n        density: 0.65,\n        time: 0,\n        dimX: 1,\n        dimY: 1,\n        animated: {\n            time: {\n                active: true,\n                speed: 2.2,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"fog\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"fumes\",\n        filterId: \"fumes\",\n        color: 0x808080,\n        time: 0,\n        blend: 8,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.001,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"fumes\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"electric\",\n        filterId: \"electric\",\n        color: 0xffffff,\n        time: 0,\n        blend: 1,\n        intensity: 5,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.002,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"electric\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"fire\",\n        filterId: \"fire\",\n        intensity: 1,\n        color: 0xffffff,\n        amplitude: 1,\n        time: 0,\n        blend: 2,\n        fireBlend: 1,\n        animated: {\n            time: {\n                active: true,\n                speed: -0.0024,\n                animType: \"move\"\n            },\n            intensity: {\n                active: true,\n                loopDuration: 15000,\n                val1: 0.8,\n                val2: 2,\n                animType: \"syncCosOscillation\"\n            },\n            amplitude: {\n                active: true,\n                loopDuration: 4400,\n                val1: 1,\n                val2: 1.4,\n                animType: \"syncCosOscillation\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"fire\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"wave\",\n        filterId: \"waves\",\n        time: 0,\n        anchorX: 0.5,\n        anchorY: 0.5,\n        strength: 0.015,\n        frequency: 120,\n        color: 0xffffff,\n        maxIntensity: 2.5,\n        minIntensity: 0.9,\n        padding: 10,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0085,\n                animType: \"move\"\n            },\n            anchorX: {\n                active: false,\n                val1: 0.15,\n                val2: 0.85,\n                animType: \"syncChaoticOscillation\",\n                loopDuration: 20000\n            },\n            anchorY: {\n                active: false,\n                val1: 0.15,\n                val2: 0.85,\n                animType: \"syncSinOscillation\",\n                loopDuration: 20000\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"waves\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"flood\",\n        filterId: \"flood\",\n        time: 0,\n        color: 0x0020bb,\n        billowy: 0.43,\n        tintIntensity: 0.72,\n        glint: 0.31,\n        scale: 70,\n        padding: 10,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0006,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"flood\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"smoke\",\n        filterId: \"smoke\",\n        color: 0x5099dd,\n        time: 0,\n        blend: 2,\n        dimX: 0.1,\n        dimY: 1,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.009,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"smoke\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"images\",\n        filterId: \"images\",\n        time: 0,\n        nbImage: 4,\n        alphaImg: 1.0,\n        alphaChr: 0.0,\n        blend: 4,\n        ampX: 0.1,\n        ampY: 0.1,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.001,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"images\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"images\",\n        filterId: \"chaos-images\",\n        time: 0,\n        nbImage: 4,\n        alphaImg: 1.0,\n        alphaChr: 0.0,\n        blend: 4,\n        ampX: 0.1,\n        ampY: 0.1,\n        padding: 80,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.001,\n                animType: \"move\"\n            },\n            ampX: {\n                active: true,\n                val1: 0.0,\n                val2: 0.3,\n                chaosFactor: 0.03,\n                animType: \"syncChaoticOscillation\",\n                loopDuration: 2000\n            },\n            ampY: {\n                active: true,\n                val1: 0.0,\n                val2: 0.3,\n                chaosFactor: 0.04,\n                animType: \"syncChaoticOscillation\",\n                loopDuration: 1650\n            },\n            alphaChr: {\n                active: true,\n                animType: \"randomNumberPerLoop\",\n                val1: 0.0,\n                val2: 1,\n                loopDuration: 250\n            },\n            alphaImg: {\n                active: true,\n                animType: \"randomNumberPerLoop\",\n                val1: 0.8,\n                val2: 1,\n                loopDuration: 250\n            },\n            nbImage: {\n                active: true,\n                val1: 1,\n                val2: 9,\n                animType: \"syncSinOscillation\",\n                loopDuration: 1400\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"chaos-images\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"images\",\n        filterId: \"spectral-images\",\n        time: 0,\n        blend: 4,\n        nbImage: 4,\n        padding: 100,\n        alphaImg: 0.5,\n        alphaChr: 0.0,\n        ampX: 0.1,\n        ampY: 0.1,\n        animated: {\n            time: {\n                speed: 0.001,\n                animType: \"move\"\n            },\n            ampX: {\n                val1: 0,\n                val2: 0.22,\n                animType: \"syncCosOscillation\",\n                loopDuration: 2500\n            },\n            ampY: {\n                val1: 0,\n                val2: 0.24,\n                animType: \"syncCosOscillation\",\n                loopDuration: 2500,\n                pauseBetweenDuration: 2500\n            },\n            alphaChr: {\n                val1: 1,\n                val2: 0,\n                animType: \"syncCosOscillation\",\n                loopDuration: 2500\n            },\n            alphaImg: {\n                val1: 0.2,\n                val2: 0.8,\n                animType: \"syncSinOscillation\",\n                loopDuration: 2500\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"spectral-images\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"field\",\n        filterId: \"hexa-field\",\n        shieldType: 2,\n        gridPadding: 1.5,\n        color: 0xcc00cc,\n        time: 0,\n        blend: 3,\n        intensity: 1,\n        lightAlpha: 0.5,\n        lightSize: 0.5,\n        scale: 1,\n        radius: 1,\n        chromatic: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0015,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"hexa-field\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"field\",\n        filterId: \"fire-field\",\n        shieldType: 1,\n        gridPadding: 2,\n        color: 0xe58550,\n        time: 0,\n        blend: 2,\n        intensity: 1.15,\n        lightAlpha: 2,\n        lightSize: 0.7,\n        scale: 1,\n        radius: 1,\n        chromatic: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0015,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"fire-field\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"field\",\n        filterId: \"smoke-field\",\n        shieldType: 3,\n        gridPadding: 1.5,\n        color: 0x60cc70,\n        time: 0,\n        blend: 2,\n        intensity: 0.9,\n        lightAlpha: 1,\n        lightSize: 0.7,\n        scale: 1,\n        radius: 1,\n        chromatic: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0015,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"smoke-field\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"field\",\n        filterId: \"earth-field\",\n        shieldType: 4,\n        gridPadding: 2,\n        color: 0xbb9070,\n        time: 0,\n        blend: 1,\n        intensity: 1.25,\n        lightAlpha: 1,\n        lightSize: 0.7,\n        scale: 1,\n        radius: 1,\n        chromatic: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0015,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"earth-field\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"field\",\n        filterId: \"earth-field-top\",\n        shieldType: 5,\n        gridPadding: 3,\n        color: 0xaaaaaa,\n        time: 0,\n        blend: 5,\n        intensity: 1.9,\n        lightAlpha: 1,\n        lightSize: 0.7,\n        scale: 1,\n        radius: 1,\n        zIndex: 5,\n        chromatic: true,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0015,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"earth-field-top\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"field\",\n        filterId: \"air-field\",\n        shieldType: 6,\n        gridPadding: 1.2,\n        color: 0x7090aa,\n        time: 0,\n        blend: 14,\n        intensity: 1,\n        lightAlpha: 1,\n        lightSize: 0.7,\n        scale: 1,\n        radius: 1,\n        chromatic: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0015,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"air-field\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"field\",\n        filterId: \"magic-field\",\n        shieldType: 7,\n        gridPadding: 1,\n        color: 0xffffff,\n        time: 0,\n        blend: 10,\n        intensity: 0.8,\n        lightAlpha: 1,\n        lightSize: 0.45,\n        scale: 1,\n        radius: 1,\n        chromatic: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0015,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"magic-field\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"field\",\n        filterId: \"chromatic-field\",\n        shieldType: 8,\n        gridPadding: 2,\n        color: 0xaaaaaa,\n        time: 0,\n        blend: 0,\n        intensity: 1,\n        lightAlpha: 0,\n        lightSize: 0,\n        scale: 1,\n        radius: 1,\n        chromatic: true,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0045,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"chromatic-field\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"field\",\n        filterId: \"water-field\",\n        shieldType: 9,\n        gridPadding: 1.2,\n        color: 0x20bbee,\n        time: 0,\n        blend: 4,\n        intensity: 1,\n        lightAlpha: 0.7,\n        lightSize: 0.5,\n        scale: 0.6,\n        radius: 1,\n        chromatic: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0015,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"water-field\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"field\",\n        filterId: \"evil-field\",\n        shieldType: 9,\n        gridPadding: 2,\n        color: 0xff3010,\n        time: 0,\n        blend: 5,\n        intensity: 1,\n        lightAlpha: 4,\n        lightSize: 0.8,\n        scale: 0.5,\n        radius: 1,\n        chromatic: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0012,\n                animType: \"move\"\n            },\n            lightSize: {\n                val1: 0.4,\n                val2: 1.5,\n                animType: \"syncCosOscillation\",\n                loopDuration: 5000\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"evil-field\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"field\",\n        filterId: \"grid-field\",\n        shieldType: 11,\n        gridPadding: 2,\n        color: 0x00cccc,\n        time: 0,\n        blend: 2,\n        intensity: 1,\n        lightAlpha: 1,\n        lightSize: 0.3,\n        scale: 0.5,\n        radius: 1,\n        chromatic: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0009,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"grid-field\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"field\",\n        filterId: \"warp-field\",\n        shieldType: 12,\n        gridPadding: 2,\n        color: 0xffffff,\n        time: 0,\n        blend: 2,\n        intensity: 1,\n        lightAlpha: 0.8,\n        lightSize: 0.5,\n        scale: 0.9,\n        radius: 1,\n        chromatic: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0009,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"warp-field\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"field\",\n        filterId: \"color-field\",\n        shieldType: 13,\n        gridPadding: 2,\n        color: 0x00cc00,\n        time: 0,\n        blend: 14,\n        intensity: 1,\n        lightAlpha: 0,\n        lightSize: 0,\n        scale: 1,\n        radius: 1,\n        chromatic: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0009,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"color-field\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"xray\",\n        filterId: \"sunburst\",\n        time: 0,\n        color: 0xffbb00,\n        blend: 9,\n        dimX: 1,\n        dimY: 1,\n        anchorX: 0,\n        anchorY: 0,\n        divisor: 36,\n        intensity: 4,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0012,\n                animType: \"move\"\n            },\n            anchorX: {\n                animType: \"syncCosOscillation\",\n                loopDuration: 6000,\n                val1: 0.4,\n                val2: 0.6\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"sunburst\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"xray\",\n        filterId: \"clover\",\n        time: 0,\n        color: 0x00ff00,\n        blend: 9,\n        dimX: 0.05,\n        dimY: 0.05,\n        anchorX: 0.5,\n        anchorY: 0.5,\n        divisor: 4,\n        intensity: 1,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0012,\n                animType: \"move\"\n            },\n            anchorX: {\n                animType: \"syncCosOscillation\",\n                loopDuration: 6000,\n                val1: 0.4,\n                val2: 0.6\n            },\n            anchorY: {\n                animType: \"syncSinOscillation\",\n                loopDuration: 6000,\n                val1: 0.4,\n                val2: 0.6\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"clover\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"xray\",\n        filterId: \"scan\",\n        time: 0,\n        color: 0xffffff,\n        blend: 5,\n        dimX: 20,\n        dimY: 20,\n        anchorX: 0.5,\n        anchorY: 0,\n        divisor: 8,\n        intensity: 1,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0005,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"scan\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"xray\",\n        filterId: \"blue-rays\",\n        time: 0,\n        color: 0x1030ff,\n        blend: 9,\n        dimX: 1,\n        dimY: 1,\n        anchorX: 0,\n        anchorY: 0,\n        divisor: 24,\n        intensity: 1,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0002,\n                animType: \"move\"\n            },\n            anchorX: {\n                animType: \"syncCosOscillation\",\n                loopDuration: 18000,\n                val1: 0.05,\n                val2: 0.95\n            },\n            anchorY: {\n                animType: \"syncSinOscillation\",\n                loopDuration: 18000,\n                val1: 0.05,\n                val2: 0.95\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"blue-rays\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"liquid\",\n        filterId: \"spectral-body\",\n        color: 0x20aaee,\n        time: 0,\n        blend: 8,\n        intensity: 4,\n        spectral: true,\n        scale: 0.9,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.001,\n                animType: \"move\"\n            },\n            color: {\n                active: true,\n                loopDuration: 6000,\n                animType: \"colorOscillation\",\n                val1: 0xffffff,\n                val2: 0x00aaff\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"spectral-body\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"liquid\",\n        filterId: \"mantle-of-madness\",\n        color: 0x0090ff,\n        time: 0,\n        blend: 5,\n        intensity: 0.0001,\n        spectral: false,\n        scale: 7,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0015,\n                animType: \"move\"\n            },\n            intensity: {\n                active: true,\n                animType: \"syncCosOscillation\",\n                loopDuration: 30000,\n                val1: 0.0001,\n                val2: 4\n            },\n            scale: {\n                active: true,\n                animType: \"syncCosOscillation\",\n                loopDuration: 30000,\n                val1: 7,\n                val2: 1\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"mantle-of-madness\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"wave\",\n        filterId: \"drift-in-plans\",\n        time: 0,\n        anchorX: 0.5,\n        anchorY: 0.5,\n        strength: 0.035,\n        frequency: 80,\n        color: 0xffffff,\n        maxIntensity: 1.5,\n        minIntensity: 0.5,\n        padding: 10,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0085,\n                animType: \"move\"\n            },\n            anchorX: {\n                active: true,\n                val1: 0.35,\n                val2: 0.65,\n                animType: \"syncCosOscillation\",\n                loopDuration: 10000\n            },\n            anchorY: {\n                active: true,\n                val1: 0.35,\n                val2: 0.65,\n                animType: \"syncSinOscillation\",\n                loopDuration: 10000\n            }\n        }\n    },\n    {\n        filterType: \"liquid\",\n        filterId: \"drift-in-plans\",\n        color: 0xff0000,\n        time: 0,\n        blend: 6,\n        intensity: 5,\n        spectral: false,\n        scale: 2.5,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0018,\n                animType: \"move\"\n            },\n            color: {\n                active: true,\n                loopDuration: 9000,\n                animType: \"colorOscillation\",\n                val1: 0xff0000,\n                val2: 0xffffff\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"drift-in-plans\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"zapshadow\",\n        filterId: \"fire-aura\",\n        alphaTolerance: 0.5\n    },\n    {\n        filterType: \"xglow\",\n        filterId: \"fire-aura\",\n        auraType: 2,\n        color: 0x903010,\n        thickness: 9.8,\n        scale: 4,\n        time: 0,\n        auraIntensity: 2,\n        subAuraIntensity: 1.5,\n        threshold: 0.4,\n        discard: true,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0027,\n                animType: \"move\"\n            },\n            thickness: {\n                active: true,\n                loopDuration: 3000,\n                animType: \"cosOscillation\",\n                val1: 2,\n                val2: 5\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"fire-aura\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"zapshadow\",\n        filterId: \"glacial-aura\",\n        alphaTolerance: 0.5\n    },\n    {\n        filterType: \"xglow\",\n        filterId: \"glacial-aura\",\n        auraType: 1,\n        color: 0x5099dd,\n        thickness: 4.5,\n        scale: 3,\n        time: 0,\n        auraIntensity: 0.8,\n        subAuraIntensity: 0.25,\n        threshold: 0.5,\n        discard: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0018,\n                animType: \"move\"\n            },\n            thickness: {\n                val1: 2,\n                val2: 4.7,\n                animType: \"cosOscillation\",\n                loopDuration: 3000\n            },\n            subAuraIntensity: {\n                val1: 0.45,\n                val2: 0.65,\n                animType: \"cosOscillation\",\n                loopDuration: 6000\n            },\n            auraIntensity: {\n                val1: 0.9,\n                val2: 2.2,\n                animType: \"cosOscillation\",\n                loopDuration: 3000\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"glacial-aura\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"zapshadow\",\n        filterId: \"anti-aura\",\n        alphaTolerance: 0.5\n    },\n    {\n        filterType: \"xglow\",\n        filterId: \"anti-aura\",\n        auraType: 2,\n        color: 0x050505,\n        thickness: 2.7,\n        scale: 7,\n        time: 0,\n        auraIntensity: 5,\n        subAuraIntensity: 2,\n        threshold: 0.08,\n        discard: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0012,\n                animType: \"move\"\n            },\n            auraIntensity: {\n                active: true,\n                loopDuration: 3000,\n                animType: \"syncCosOscillation\",\n                val1: 5,\n                val2: 0\n            },\n            subAuraIntensity: {\n                active: true,\n                loopDuration: 3000,\n                animType: \"syncCosOscillation\",\n                val1: 2,\n                val2: 0\n            },\n            color: {\n                active: true,\n                loopDuration: 6000,\n                animType: \"syncColorOscillation\",\n                val1: 0x050505,\n                val2: 0x200000\n            },\n            threshold: {\n                active: true,\n                loopDuration: 1500,\n                animType: \"syncCosOscillation\",\n                val1: 0.02,\n                val2: 0.5\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"anti-aura\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"fire\",\n        filterId: \"pure-fire-aura\",\n        intensity: 1,\n        color: 0xffffff,\n        amplitude: 1,\n        time: 0,\n        blend: 2,\n        fireBlend: 1,\n        animated: {\n            time: {\n                active: true,\n                speed: -0.0024,\n                animType: \"move\"\n            },\n            intensity: {\n                active: true,\n                loopDuration: 15000,\n                val1: 0.8,\n                val2: 2,\n                animType: \"syncCosOscillation\"\n            },\n            amplitude: {\n                active: true,\n                loopDuration: 4400,\n                val1: 1,\n                val2: 1.4,\n                animType: \"syncCosOscillation\"\n            }\n        }\n    },\n    {\n        filterType: \"zapshadow\",\n        filterId: \"pure-fire-aura\",\n        alphaTolerance: 0.5\n    },\n    {\n        filterType: \"xglow\",\n        filterId: \"pure-fire-aura\",\n        auraType: 2,\n        color: 0x903010,\n        thickness: 9.8,\n        scale: 4,\n        time: 0,\n        auraIntensity: 2,\n        subAuraIntensity: 1.5,\n        threshold: 0.4,\n        discard: true,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0027,\n                animType: \"move\"\n            },\n            thickness: {\n                active: true,\n                loopDuration: 3000,\n                animType: \"cosOscillation\",\n                val1: 2,\n                val2: 5\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"pure-fire-aura\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"zapshadow\",\n        filterId: \"pure-fire-aura-2\",\n        alphaTolerance: 0.5\n    },\n    {\n        filterType: \"xglow\",\n        filterId: \"pure-fire-aura-2\",\n        auraType: 2,\n        color: 0x903010,\n        thickness: 9.8,\n        scale: 4,\n        time: 0,\n        auraIntensity: 1,\n        subAuraIntensity: 0.3,\n        threshold: 0.5,\n        discard: true,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0027,\n                animType: \"move\"\n            },\n            thickness: {\n                active: true,\n                loopDuration: 3000,\n                animType: \"cosOscillation\",\n                val1: 2,\n                val2: 3.6\n            }\n        }\n    },\n    {\n        filterType: \"fire\",\n        filterId: \"pure-fire-aura-2\",\n        intensity: 1,\n        color: 0xffffff,\n        amplitude: 1,\n        time: 0,\n        blend: 2,\n        fireBlend: 1,\n        animated: {\n            time: {\n                active: true,\n                speed: -0.0024,\n                animType: \"move\"\n            },\n            intensity: {\n                active: true,\n                loopDuration: 15000,\n                val1: 0.8,\n                val2: 3,\n                animType: \"syncCosOscillation\"\n            },\n            amplitude: {\n                active: true,\n                loopDuration: 4400,\n                val1: 1,\n                val2: 1.6,\n                animType: \"syncCosOscillation\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"pure-fire-aura-2\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"zapshadow\",\n        filterId: \"pure-ice-aura\",\n        alphaTolerance: 0.5\n    },\n    {\n        filterType: \"xglow\",\n        filterId: \"pure-ice-aura\",\n        auraType: 1,\n        color: 0x5099dd,\n        thickness: 4.5,\n        scale: 10,\n        time: 0,\n        auraIntensity: 0.25,\n        subAuraIntensity: 1,\n        threshold: 0.5,\n        discard: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0018,\n                animType: \"move\"\n            },\n            thickness: {\n                val1: 2,\n                val2: 3.3,\n                animType: \"cosOscillation\",\n                loopDuration: 3000\n            },\n            subAuraIntensity: {\n                val1: 0.45,\n                val2: 0.65,\n                animType: \"cosOscillation\",\n                loopDuration: 6000\n            },\n            auraIntensity: {\n                val1: 0.9,\n                val2: 2.2,\n                animType: \"cosOscillation\",\n                loopDuration: 3000\n            }\n        }\n    },\n    {\n        filterType: \"smoke\",\n        filterId: \"pure-ice-aura\",\n        color: 0x80ccff,\n        time: 0,\n        blend: 2,\n        dimX: 0.3,\n        dimY: 1,\n        animated: {\n            time: {\n                active: true,\n                speed: -0.006,\n                animType: \"move\"\n            },\n            dimX: {\n                val1: 0.4,\n                val2: 0.2,\n                animType: \"cosOscillation\",\n                loopDuration: 3000\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"pure-ice-aura\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"pixel\",\n        filterId: \"pixelate\",\n        sizeX: 2.5,\n        sizeY: 2.5\n    }\n];\n$855c97940ea7d48a$var$presetObject = new Object();\n$855c97940ea7d48a$var$presetObject.name = \"pixelate\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.MAIN;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$7afd9c1079ecedf7.push($855c97940ea7d48a$var$presetObject);\nvar $855c97940ea7d48a$export$bfc0b9c61923b5ec = [];\n// white : **electric , **waves, ***xrays, **liquid (normal), (clover)\n// black : **liquid (protoplasm), **smoke, **rays, outline, **fumes, **fog, **flood, **fire\n// no texture : **glow, **bulge, **blur, **bloom\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"flood\",\n        filterId: \"Watery Surface\",\n        time: 0,\n        color: 0x0020bb,\n        billowy: 0.43,\n        tintIntensity: 0.72,\n        glint: 0.31,\n        scale: 70,\n        padding: 10,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0006,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = {};\n$855c97940ea7d48a$var$presetObject.name = \"Watery Surface\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.TEMPLATE;\n$855c97940ea7d48a$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png\";\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$bfc0b9c61923b5ec.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"liquid\",\n        filterId: \"Protoplasm\",\n        color: 0x20aaee,\n        time: 0,\n        blend: 8,\n        intensity: 4,\n        spectral: true,\n        scale: 1.4,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.001,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = {};\n$855c97940ea7d48a$var$presetObject.name = \"Protoplasm\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.TEMPLATE;\n$855c97940ea7d48a$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png\";\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$bfc0b9c61923b5ec.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"liquid\",\n        filterId: \"Watery Surface 2\",\n        color: 0x20aaee,\n        time: 0,\n        blend: 8,\n        intensity: 4,\n        spectral: false,\n        scale: 1.4,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.001,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = {};\n$855c97940ea7d48a$var$presetObject.name = \"Watery Surface 2\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.TEMPLATE;\n$855c97940ea7d48a$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png\";\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$bfc0b9c61923b5ec.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"smoke\",\n        filterId: \"Smoky Area\",\n        color: 0xaaaaaa,\n        time: 0,\n        blend: 2,\n        dimX: 1,\n        dimY: 1,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.002,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = {};\n$855c97940ea7d48a$var$presetObject.name = \"Smoky Area\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.TEMPLATE;\n$855c97940ea7d48a$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png\";\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$bfc0b9c61923b5ec.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"electric\",\n        filterId: \"Shock\",\n        color: 0xffffff,\n        time: 0,\n        blend: 1,\n        intensity: 5,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.002,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = {};\n$855c97940ea7d48a$var$presetObject.name = \"Shock\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.TEMPLATE;\n$855c97940ea7d48a$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png\";\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$bfc0b9c61923b5ec.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"xray\",\n        filterId: \"Annihilating Rays\",\n        time: 0,\n        color: 0xffbb00,\n        blend: 9,\n        dimX: 1,\n        dimY: 1,\n        anchorX: 0,\n        anchorY: 0,\n        divisor: 6,\n        intensity: 4,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0012,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = {};\n$855c97940ea7d48a$var$presetObject.name = \"Annihilating Rays\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.TEMPLATE;\n$855c97940ea7d48a$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png\";\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$bfc0b9c61923b5ec.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"ray\",\n        filterId: \"Classic Rays\",\n        time: 0,\n        color: 0xcf8000,\n        alpha: 0.5,\n        divisor: 32,\n        anchorX: 0,\n        anchorY: 0,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0005,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = {};\n$855c97940ea7d48a$var$presetObject.name = \"Classic Rays\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.TEMPLATE;\n$855c97940ea7d48a$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png\";\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$bfc0b9c61923b5ec.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"fumes\",\n        filterId: \"Smoke Filaments\",\n        color: 0x808080,\n        time: 0,\n        blend: 8,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.001,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = {};\n$855c97940ea7d48a$var$presetObject.name = \"Smoke Filaments\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.TEMPLATE;\n$855c97940ea7d48a$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png\";\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$bfc0b9c61923b5ec.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"fire\",\n        filterId: \"Flames\",\n        intensity: 1.5,\n        color: 0xffffff,\n        amplitude: 1.3,\n        time: 0,\n        blend: 2,\n        fireBlend: 1,\n        animated: {\n            time: {\n                active: true,\n                speed: -0.0016,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = {};\n$855c97940ea7d48a$var$presetObject.name = \"Flames\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.TEMPLATE;\n$855c97940ea7d48a$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png\";\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$bfc0b9c61923b5ec.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"xfog\",\n        filterId: \"Thick Fog\",\n        autoFit: false,\n        color: 0x3090ff,\n        time: 0,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0006,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = {};\n$855c97940ea7d48a$var$presetObject.name = \"Thick Fog\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.TEMPLATE;\n$855c97940ea7d48a$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/black-tone-vstrong-opacity.png\";\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$bfc0b9c61923b5ec.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"glow\",\n        filterId: \"Glowing Outline\",\n        outerStrength: 5.5,\n        innerStrength: 0,\n        color: 0x006000,\n        quality: 0.5,\n        padding: 10,\n        animated: {\n            outerStrength: {\n                active: true,\n                loopDuration: 3000,\n                animType: \"syncCosOscillation\",\n                val1: 5.5,\n                val2: 1.5\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = {};\n$855c97940ea7d48a$var$presetObject.name = \"Glowing Outline\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.TEMPLATE;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$bfc0b9c61923b5ec.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"wave\",\n        filterId: \"Waves\",\n        time: 0,\n        anchorX: 0.5,\n        anchorY: 0.5,\n        strength: 0.015,\n        frequency: 120,\n        color: 0xffffff,\n        maxIntensity: 2.5,\n        minIntensity: 0.9,\n        padding: 10,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0085,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = {};\n$855c97940ea7d48a$var$presetObject.name = \"Waves\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.TEMPLATE;\n$855c97940ea7d48a$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png\";\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$bfc0b9c61923b5ec.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"wave\",\n        filterId: \"Waves 2\",\n        time: 0,\n        anchorX: 0.5,\n        anchorY: 0.5,\n        strength: 0.014,\n        frequency: 400,\n        color: 0xffffff,\n        maxIntensity: 2.4,\n        minIntensity: 0.8,\n        padding: 10,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0385,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = {};\n$855c97940ea7d48a$var$presetObject.name = \"Waves 2\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.TEMPLATE;\n$855c97940ea7d48a$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png\";\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$bfc0b9c61923b5ec.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"wave\",\n        filterId: \"Waves 3\",\n        time: 0,\n        anchorX: 0.5,\n        anchorY: 0.5,\n        strength: 0.017,\n        frequency: 35,\n        color: 0xffffff,\n        maxIntensity: 2.6,\n        minIntensity: 0.9,\n        padding: 20,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0085,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = {};\n$855c97940ea7d48a$var$presetObject.name = \"Waves 3\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.TEMPLATE;\n$855c97940ea7d48a$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png\";\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$bfc0b9c61923b5ec.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"xglow\",\n        filterId: \"Zone : Fire\",\n        auraType: 1,\n        color: 0x903010,\n        scale: 1.5,\n        time: 0,\n        auraIntensity: 1.8,\n        subAuraIntensity: 0.25,\n        threshold: 0.6,\n        discard: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0027,\n                animType: \"move\"\n            },\n            thickness: {\n                active: true,\n                loopDuration: 3000,\n                animType: \"cosOscillation\",\n                val1: 2,\n                val2: 5\n            }\n        }\n    },\n    {\n        filterType: \"fire\",\n        filterId: \"Zone : Fire\",\n        intensity: 1.5,\n        color: 0xffffff,\n        amplitude: 1,\n        time: 0,\n        blend: 2,\n        fireBlend: 1,\n        animated: {\n            time: {\n                active: true,\n                speed: -0.0015,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = {};\n$855c97940ea7d48a$var$presetObject.name = \"Zone : Fire\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.TEMPLATE;\n$855c97940ea7d48a$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png\";\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$bfc0b9c61923b5ec.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"xglow\",\n        filterId: \"Zone : Electricity\",\n        auraType: 2,\n        color: 0x303030,\n        scale: 1.5,\n        time: 0,\n        auraIntensity: 1,\n        subAuraIntensity: 0.9,\n        threshold: 0,\n        discard: true,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0027,\n                animType: \"move\"\n            },\n            thickness: {\n                active: true,\n                loopDuration: 3000,\n                animType: \"cosOscillation\",\n                val1: 1,\n                val2: 2\n            }\n        }\n    },\n    {\n        filterType: \"electric\",\n        filterId: \"Zone : Electricity\",\n        color: 0xffffff,\n        time: 0,\n        blend: 1,\n        intensity: 5,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.002,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = {};\n$855c97940ea7d48a$var$presetObject.name = \"Zone : Electricity\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.TEMPLATE;\n$855c97940ea7d48a$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png\";\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$bfc0b9c61923b5ec.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"xglow\",\n        filterId: \"Zone : Blizzard\",\n        auraType: 1,\n        color: 0x5099dd,\n        thickness: 4.5,\n        scale: 5,\n        time: 0,\n        auraIntensity: 0.25,\n        subAuraIntensity: 1,\n        threshold: 0.5,\n        discard: false,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0018,\n                animType: \"move\"\n            },\n            thickness: {\n                val1: 2,\n                val2: 3.3,\n                animType: \"cosOscillation\",\n                loopDuration: 3000\n            },\n            subAuraIntensity: {\n                val1: 0.05,\n                val2: 0.1,\n                animType: \"cosOscillation\",\n                loopDuration: 6000\n            },\n            auraIntensity: {\n                val1: 0.9,\n                val2: 2.2,\n                animType: \"cosOscillation\",\n                loopDuration: 3000\n            }\n        }\n    },\n    {\n        filterType: \"smoke\",\n        filterId: \"Zone : Blizzard\",\n        color: 0x80ccff,\n        time: 0,\n        blend: 2,\n        dimY: 1,\n        animated: {\n            time: {\n                active: true,\n                speed: -0.005,\n                animType: \"move\"\n            },\n            dimX: {\n                val1: 0.4,\n                val2: 0.2,\n                animType: \"cosOscillation\",\n                loopDuration: 3000\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = {};\n$855c97940ea7d48a$var$presetObject.name = \"Zone : Blizzard\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.TEMPLATE;\n$855c97940ea7d48a$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png\";\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$bfc0b9c61923b5ec.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"bulgepinch\",\n        filterId: \"Bulging Out\",\n        padding: 150,\n        strength: 0,\n        radiusPercent: 200,\n        animated: {\n            strength: {\n                active: true,\n                animType: \"cosOscillation\",\n                loopDuration: 2000,\n                val1: 0,\n                val2: 0.45\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = {};\n$855c97940ea7d48a$var$presetObject.name = \"Bulging Out\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.TEMPLATE;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$bfc0b9c61923b5ec.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"blur\",\n        filterId: \"Blurred Texture\",\n        padding: 25,\n        quality: 4.0,\n        blur: 0,\n        blurX: 0,\n        blurY: 0,\n        animated: {\n            blurX: {\n                active: true,\n                animType: \"syncCosOscillation\",\n                loopDuration: 500,\n                val1: 0,\n                val2: 6\n            },\n            blurY: {\n                active: true,\n                animType: \"syncCosOscillation\",\n                loopDuration: 750,\n                val1: 0,\n                val2: 6\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = {};\n$855c97940ea7d48a$var$presetObject.name = \"Blurred Texture\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.TEMPLATE;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$bfc0b9c61923b5ec.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"xbloom\",\n        filterId: \"Bloomed Texture\",\n        threshold: 0.35,\n        bloomScale: 0,\n        brightness: 1,\n        blur: 0.1,\n        padding: 10,\n        quality: 15,\n        blendMode: 0,\n        animated: {\n            bloomScale: {\n                active: true,\n                loopDuration: 2000,\n                animType: \"syncCosOscillation\",\n                val1: 0,\n                val2: 2.1\n            },\n            threshold: {\n                active: false,\n                loopDuration: 1000,\n                animType: \"syncCosOscillation\",\n                val1: 0.0,\n                val2: 1.9\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = {};\n$855c97940ea7d48a$var$presetObject.name = \"Bloomed Texture\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.TEMPLATE;\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$bfc0b9c61923b5ec.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"liquid\",\n        filterId: \"Wild Magic\",\n        color: 0xff0000,\n        time: 0,\n        blend: 6,\n        intensity: 5,\n        spectral: false,\n        scale: 2.5,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0018,\n                animType: \"move\"\n            }\n        }\n    },\n    {\n        filterType: \"wave\",\n        filterId: \"Wild Magic\",\n        time: 0,\n        anchorX: 0.5,\n        anchorY: 0.5,\n        strength: 0.014,\n        frequency: 10,\n        color: 0xffffff,\n        maxIntensity: 1.3,\n        minIntensity: 0.6,\n        padding: 10,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0065,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = {};\n$855c97940ea7d48a$var$presetObject.name = \"Wild Magic\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.TEMPLATE;\n$855c97940ea7d48a$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png\";\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$bfc0b9c61923b5ec.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"web\",\n        filterId: \"Spider Web 1\",\n        anchorX: 0.5,\n        anchorY: 0.5,\n        color: 0xffffff,\n        thickness: 2,\n        div2: 5,\n        time: 98.8,\n        animated: {\n            time: {\n                active: true,\n                loopDuration: 5000,\n                animType: \"cosOscillation\",\n                val1: 98.8,\n                val2: 99.7\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = {};\n$855c97940ea7d48a$var$presetObject.name = \"Spider Web 1\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.TEMPLATE;\n$855c97940ea7d48a$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png\";\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$bfc0b9c61923b5ec.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"web\",\n        filterId: \"Spider Web 2\",\n        anchorX: 0.5,\n        anchorY: 0.5,\n        color: 0xcccccc,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0005,\n                animType: \"move\"\n            }\n        }\n    },\n    {\n        filterType: \"liquid\",\n        filterId: \"Spider Web 2\",\n        color: 0xff0000,\n        time: 0,\n        blend: 4,\n        intensity: 8,\n        spectral: false,\n        scale: 0.2,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0005,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = {};\n$855c97940ea7d48a$var$presetObject.name = \"Spider Web 2\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.TEMPLATE;\n$855c97940ea7d48a$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png\";\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$bfc0b9c61923b5ec.push($855c97940ea7d48a$var$presetObject);\n$855c97940ea7d48a$var$params = [\n    {\n        filterType: \"web\",\n        filterId: \"Spider Web 3\",\n        anchorX: 0.5,\n        anchorY: 0.5,\n        color: 0xcccccc,\n        time: 100\n    },\n    {\n        filterType: \"liquid\",\n        filterId: \"Spider Web 3\",\n        color: 0xff0000,\n        time: 0,\n        blend: 1,\n        intensity: 4,\n        spectral: true,\n        scale: 0.2,\n        animated: {\n            time: {\n                active: true,\n                speed: 0.0005,\n                animType: \"move\"\n            }\n        }\n    }\n];\n$855c97940ea7d48a$var$presetObject = {};\n$855c97940ea7d48a$var$presetObject.name = \"Spider Web 3\";\n$855c97940ea7d48a$var$presetObject.library = $855c97940ea7d48a$export$19612c32a2f7f4cd.TEMPLATE;\n$855c97940ea7d48a$var$presetObject.defaultTexture = \"modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png\";\n$855c97940ea7d48a$var$presetObject.params = $855c97940ea7d48a$var$params;\n$855c97940ea7d48a$export$bfc0b9c61923b5ec.push($855c97940ea7d48a$var$presetObject);\nvar $855c97940ea7d48a$export$9381e89181e5b461 = $855c97940ea7d48a$export$7afd9c1079ecedf7.concat($855c97940ea7d48a$export$bfc0b9c61923b5ec);\n\n\n\n\nconst $65a4ae23b1e0568d$var$Magic = (0, $843aec23ddc05ff2$export$4367b12d875874d3)();\nconst $65a4ae23b1e0568d$export$df3971f21aaed551 = {\n    ARCHAIC: \"\",\n    V030: \"0.3.0\",\n    V040: \"0.4.0\",\n    V040b: \"0.4.0b\",\n    V041: \"0.4.1\",\n    V043: \"0.4.3\"\n};\nasync function $65a4ae23b1e0568d$export$182eb7a8e7220720() {\n    if ((0, $843aec23ddc05ff2$export$485113ed30b22bb8)()) {\n        var dataVersionNow;\n        try {\n            dataVersionNow = game.settings.get(\"tokenmagic\", \"migration\");\n        } catch (e) {\n            dataVersionNow = $65a4ae23b1e0568d$export$df3971f21aaed551.ARCHAIC;\n        }\n        if (dataVersionNow < $65a4ae23b1e0568d$export$df3971f21aaed551.V030) await $65a4ae23b1e0568d$var$updatePresetsV030();\n        if (dataVersionNow < $65a4ae23b1e0568d$export$df3971f21aaed551.V040) await $65a4ae23b1e0568d$var$updatePresetsV040();\n        if (dataVersionNow < $65a4ae23b1e0568d$export$df3971f21aaed551.V040b) await $65a4ae23b1e0568d$var$updatePresetsV040b();\n        if (dataVersionNow < $65a4ae23b1e0568d$export$df3971f21aaed551.V041) await $65a4ae23b1e0568d$var$updatePresetsV041();\n        if (dataVersionNow < $65a4ae23b1e0568d$export$df3971f21aaed551.V043) await $65a4ae23b1e0568d$var$updatePresetsV043();\n    }\n}\n// migrating to the new presets data\nasync function $65a4ae23b1e0568d$var$updatePresetsV030() {\n    var presets = game.settings.get(\"tokenmagic\", \"presets\");\n    if (!(presets == null)) {\n        (0, $843aec23ddc05ff2$export$bef1f36f5486a6a3)(`Migration 0.3.0 - Launching presets data migration...`);\n        let foundTemplateLibrary = false;\n        for (const preset of presets){\n            if (!preset.hasOwnProperty(\"library\")) {\n                preset.library = (0, $855c97940ea7d48a$export$19612c32a2f7f4cd).MAIN;\n                (0, $843aec23ddc05ff2$export$bef1f36f5486a6a3)(`Migration 0.3.0 - Adding ${preset.name} to ${(0, $855c97940ea7d48a$export$19612c32a2f7f4cd).MAIN}`);\n            } else if (preset.library === (0, $855c97940ea7d48a$export$19612c32a2f7f4cd).TEMPLATE && !foundTemplateLibrary) {\n                foundTemplateLibrary = true;\n                (0, $843aec23ddc05ff2$export$bef1f36f5486a6a3)(`Migration 0.3.0 - Found template presets. Templates will not be added.`);\n            }\n        }\n        if (!foundTemplateLibrary) (0, $843aec23ddc05ff2$export$bef1f36f5486a6a3)(`Migration 0.3.0 - Merging templates presets.`);\n        let newPresets = foundTemplateLibrary ? presets : presets.concat((0, $855c97940ea7d48a$export$bfc0b9c61923b5ec));\n        try {\n            await game.settings.set(\"tokenmagic\", \"presets\", newPresets);\n            await game.settings.set(\"tokenmagic\", \"migration\", $65a4ae23b1e0568d$export$df3971f21aaed551.V030);\n            (0, $843aec23ddc05ff2$export$bef1f36f5486a6a3)(`Migration 0.3.0 - Migration successful!`);\n        } catch (e) {\n            (0, $843aec23ddc05ff2$export$a3bc9b8ed74fc)(`Migration 0.3.0 - Migration failed.`);\n            (0, $843aec23ddc05ff2$export$a3bc9b8ed74fc)(e);\n        }\n    }\n}\nasync function $65a4ae23b1e0568d$var$updatePresetsV040() {\n    var presets = game.settings.get(\"tokenmagic\", \"presets\");\n    if (!(presets == null)) {\n        (0, $843aec23ddc05ff2$export$bef1f36f5486a6a3)(`Migration 0.4.0 - Launching presets data migration...`);\n        // Adding zOrder for the template presets only\n        // Does not break visuals\n        for (const preset of presets)if (preset.library === (0, $855c97940ea7d48a$export$19612c32a2f7f4cd).TEMPLATE) {\n            (0, $843aec23ddc05ff2$export$bef1f36f5486a6a3)(`Migration 0.4.0 - Checking template preset ${preset.name}...`);\n            let zOrder = 1;\n            for (const filter of preset.params)if (!filter.hasOwnProperty(\"zOrder\")) {\n                filter.zOrder = zOrder;\n                (0, $843aec23ddc05ff2$export$bef1f36f5486a6a3)(`Migration 0.4.0 - Updating ${filter.filterType} in ${preset.name}...`);\n                zOrder++;\n            }\n        }\n        try {\n            await game.settings.set(\"tokenmagic\", \"presets\", presets);\n            (0, $843aec23ddc05ff2$export$bef1f36f5486a6a3)(`Migration 0.4.0 - Importing new template presets...`);\n            await $65a4ae23b1e0568d$var$Magic.importPresetLibraryFromPath(\"modules/tokenmagic/import/TMFX-update-presets-v040.json\", {\n                overwrite: false\n            });\n            await game.settings.set(\"tokenmagic\", \"migration\", $65a4ae23b1e0568d$export$df3971f21aaed551.V040);\n            (0, $843aec23ddc05ff2$export$bef1f36f5486a6a3)(`Migration 0.4.0 - Migration successful!`);\n        } catch (e) {\n            (0, $843aec23ddc05ff2$export$a3bc9b8ed74fc)(`Migration 0.4.0 - Migration failed.`);\n            (0, $843aec23ddc05ff2$export$a3bc9b8ed74fc)(e);\n        }\n    }\n}\nasync function $65a4ae23b1e0568d$var$updatePresetsV040b() {\n    var presets = game.settings.get(\"tokenmagic\", \"presets\");\n    if (!(presets == null)) {\n        (0, $843aec23ddc05ff2$export$bef1f36f5486a6a3)(`Migration 0.4.0b - Launching presets data migration...`);\n        try {\n            await game.settings.set(\"tokenmagic\", \"presets\", presets);\n            (0, $843aec23ddc05ff2$export$bef1f36f5486a6a3)(`Migration 0.4.0b - updating template presets...`);\n            await $65a4ae23b1e0568d$var$Magic.importPresetLibraryFromPath(\"modules/tokenmagic/import/TMFX-update-presets-v040b.json\", {\n                overwrite: true\n            });\n            await game.settings.set(\"tokenmagic\", \"migration\", $65a4ae23b1e0568d$export$df3971f21aaed551.V040b);\n            (0, $843aec23ddc05ff2$export$bef1f36f5486a6a3)(`Migration 0.4.0b - Migration successful!`);\n        } catch (e) {\n            (0, $843aec23ddc05ff2$export$a3bc9b8ed74fc)(`Migration 0.4.0b - Migration failed.`);\n            (0, $843aec23ddc05ff2$export$a3bc9b8ed74fc)(e);\n        }\n    }\n}\nasync function $65a4ae23b1e0568d$var$updatePresetsV041() {\n    var presets = game.settings.get(\"tokenmagic\", \"presets\");\n    if (!(presets == null)) {\n        (0, $843aec23ddc05ff2$export$bef1f36f5486a6a3)(`Migration 0.4.1 - Launching presets data migration...`);\n        try {\n            await game.settings.set(\"tokenmagic\", \"presets\", presets);\n            (0, $843aec23ddc05ff2$export$bef1f36f5486a6a3)(`Migration 0.4.1 - updating template presets...`);\n            await $65a4ae23b1e0568d$var$Magic.importPresetLibraryFromPath(\"modules/tokenmagic/import/TMFX-update-presets-v041.json\", {\n                overwrite: true\n            });\n            await game.settings.set(\"tokenmagic\", \"migration\", $65a4ae23b1e0568d$export$df3971f21aaed551.V041);\n            (0, $843aec23ddc05ff2$export$bef1f36f5486a6a3)(`Migration 0.4.1 - Migration successful!`);\n        } catch (e) {\n            (0, $843aec23ddc05ff2$export$a3bc9b8ed74fc)(`Migration 0.4.1 - Migration failed.`);\n            (0, $843aec23ddc05ff2$export$a3bc9b8ed74fc)(e);\n        }\n    }\n}\nasync function $65a4ae23b1e0568d$var$updatePresetsV043() {\n    var presets = game.settings.get(\"tokenmagic\", \"presets\");\n    if (!(presets == null)) {\n        (0, $843aec23ddc05ff2$export$bef1f36f5486a6a3)(`Migration 0.4.3 - Launching presets data migration...`);\n        try {\n            await game.settings.set(\"tokenmagic\", \"presets\", presets);\n            (0, $843aec23ddc05ff2$export$bef1f36f5486a6a3)(`Migration 0.4.3 - updating template presets...`);\n            await $65a4ae23b1e0568d$var$Magic.importPresetLibraryFromPath(\"modules/tokenmagic/import/TMFX-update-presets-v043.json\", {\n                overwrite: true\n            });\n            await game.settings.set(\"tokenmagic\", \"migration\", $65a4ae23b1e0568d$export$df3971f21aaed551.V043);\n            (0, $843aec23ddc05ff2$export$bef1f36f5486a6a3)(`Migration 0.4.3 - Migration successful!`);\n        } catch (e) {\n            (0, $843aec23ddc05ff2$export$a3bc9b8ed74fc)(`Migration 0.4.3 - Migration failed.`);\n            (0, $843aec23ddc05ff2$export$a3bc9b8ed74fc)(e);\n        }\n    }\n}\n\n\n\n\n\n\nclass $8e9589e1a89f7fdf$export$1ab2366e25c48ed5 extends PIXI.filters.CRTFilter {\n    constructor(params){\n        super();\n        this.curvature = 1.0;\n        this.lineWidth = 1.0;\n        this.lineContrast = 0.25;\n        this.verticalLine = false;\n        this.noise = 0.08;\n        this.noiseSize = 1.0;\n        this.seed = 0;\n        this.vignetting = 0;\n        this.zOrder = 320;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n}\n\n\n\n\nclass $affe7c1f1e13b606$export$767e09686399ca49 extends PIXI.filters.RGBSplitFilter {\n    constructor(params){\n        super();\n        this.red = new Float32Array([\n            -10,\n            0\n        ]);\n        this.green = new Float32Array([\n            0,\n            10\n        ]);\n        this.blue = new Float32Array([\n            0,\n            0\n        ]);\n        this.zOrder = 340;\n        this.animated = {};\n        this.setTMParams(params);\n        if (!this.dummy) {\n            this.anime = new (0, $b144ce1eeabb28ed$export$b229f242afc35ae9)(this);\n            this.normalizeTMParams();\n        }\n    }\n    get redX() {\n        return this.uniforms.red[0];\n    }\n    set redX(value) {\n        this.uniforms.red[0] = value;\n    }\n    get redY() {\n        return this.uniforms.red[1];\n    }\n    set redY(value) {\n        this.uniforms.red[1] = value;\n    }\n    get greenX() {\n        return this.uniforms.green[0];\n    }\n    set greenX(value) {\n        this.uniforms.green[0] = value;\n    }\n    get greenY() {\n        return this.uniforms.green[1];\n    }\n    set greenY(value) {\n        this.uniforms.green[1] = value;\n    }\n    get blueX() {\n        return this.uniforms.blue[0];\n    }\n    set blueX(value) {\n        this.uniforms.blue[0] = value;\n    }\n    get blueY() {\n        return this.uniforms.blue[1];\n    }\n    set blueY(value) {\n        this.uniforms.blue[1] = value;\n    }\n}\n\n\n\n\n\n\nclass $df9b71b8b9df6e3e$export$7b4b307b24c88455 {\n    static get defaultConfiguration() {\n        const defaultConfig = {\n            categories: {},\n            overrides: {\n                0: {\n                    target: \"Stinking Cloud\",\n                    opacity: 0.5,\n                    tint: \"#00a80b\",\n                    preset: \"Smoky Area\",\n                    texture: null\n                },\n                1: {\n                    target: \"Web\",\n                    opacity: 0.5,\n                    tint: \"#808080\",\n                    preset: \"Spider Web 2\",\n                    texture: null\n                }\n            }\n        };\n        Object.keys(CONFIG.DND5E.damageTypes).forEach((dmgType)=>{\n            if (defaultConfig.categories[dmgType] == undefined) {\n                const config = {\n                    opacity: (0, $2a8e669d7b55d798$export$7395e4cb572e863b),\n                    tint: null\n                };\n                switch(dmgType.toLowerCase()){\n                    case \"acid\":\n                        config.tint = \"#2d8000\";\n                        config.opacity = 0.6;\n                        break;\n                    case \"cold\":\n                        config.tint = \"#47b3ff\";\n                        break;\n                    case \"necrotic\":\n                        config.tint = \"#502673\";\n                        break;\n                    case \"poison\":\n                        config.tint = \"#00a80b\";\n                        break;\n                    case \"psychic\":\n                        config.tint = \"#8000ff\";\n                        break;\n                    case \"thunder\":\n                        config.tint = \"#0060ff\";\n                        break;\n                    default:\n                        break;\n                }\n                defaultConfig.categories[dmgType] = config;\n            }\n            Object.keys(CONFIG.MeasuredTemplate.types).forEach((tplType)=>{\n                const config = {\n                    preset: (0, $2a8e669d7b55d798$export$680af52575be3523),\n                    texture: null\n                };\n                switch(dmgType.toLowerCase()){\n                    case \"acid\":\n                        config.preset = \"Watery Surface 2\";\n                        break;\n                    case \"cold\":\n                        config.preset = \"Thick Fog\";\n                        break;\n                    case \"fire\":\n                        config.preset = \"Flames\";\n                        break;\n                    case \"force\":\n                        config.preset = \"Waves 3\";\n                        break;\n                    case \"lightning\":\n                        config.preset = \"Shock\";\n                        break;\n                    case \"necrotic\":\n                        config.preset = \"Smoke Filaments\";\n                        break;\n                    case \"poison\":\n                        config.preset = \"Smoky Area\";\n                        break;\n                    case \"psychic\":\n                        config.preset = \"Classic Rays\";\n                        break;\n                    case \"radiant\":\n                        config.preset = \"Annihilating Rays\";\n                        break;\n                    case \"thunder\":\n                        config.preset = \"Waves\";\n                        break;\n                    default:\n                        break;\n                }\n                defaultConfig.categories[dmgType][tplType] = config;\n            });\n        });\n        return defaultConfig;\n    }\n    constructor(){\n        this._enabled = false;\n    }\n    get enabled() {\n        return this._enabled;\n    }\n    configure(enabled = false) {\n        if (game.system.id !== \"dnd5e\") return;\n        if (!enabled) {\n            if (this._enabled) {\n                if (game.modules.get(\"lib-wrapper\")?.active) libWrapper.unregister(\"tokenmagic\", \"game.dnd5e.canvas.AbilityTemplate.fromItem\");\n                else window.location.reload();\n            }\n        } else if (!this._enabled) {\n            if (game.modules.get(\"lib-wrapper\")?.active) libWrapper.register(\"tokenmagic\", \"game.dnd5e.canvas.AbilityTemplate.fromItem\", $df9b71b8b9df6e3e$var$fromItem, \"WRAPPER\");\n            else {\n                const origFromItem = game.dnd5e.canvas.AbilityTemplate.fromItem;\n                game.dnd5e.canvas.AbilityTemplate.fromItem = function() {\n                    return $df9b71b8b9df6e3e$var$fromItem.call(this, origFromItem.bind(this), ...arguments);\n                };\n            }\n        }\n        this._enabled = enabled;\n    }\n    getData() {\n        return {\n            hasAutoTemplates: true,\n            dmgTypes: CONFIG.DND5E.damageTypes,\n            templateTypes: CONFIG.MeasuredTemplate.types\n        };\n    }\n}\nfunction $df9b71b8b9df6e3e$var$fromConfig(config, template) {\n    const o = {\n        tokenmagic: {\n            options: {}\n        }\n    };\n    if (config.preset && config.preset !== \"\" && config.preset !== (0, $2a8e669d7b55d798$export$680af52575be3523)) o.tokenmagic.options.tmfxPreset = config.preset;\n    if (config.texture && config.texture !== \"\") o.tokenmagic.options.tmfxTexture = config.texture;\n    if (config.tint && config.tint !== \"\") o.tokenmagic.options.tmfxTint = config.tint;\n    o.tokenmagic.options.tmfxTextureAlpha = config.opacity;\n    template.document.updateSource({\n        flags: {\n            tokenmagic: o.tokenmagic\n        }\n    });\n}\nfunction $df9b71b8b9df6e3e$var$fromOverrides(overrides = [], item, template) {\n    let config = overrides.find((el)=>el.target.toLowerCase() === item.name.toLowerCase());\n    if (!config) return false;\n    $df9b71b8b9df6e3e$var$fromConfig(config, template);\n    return true;\n}\nfunction $df9b71b8b9df6e3e$var$fromCategories(categories = {}, item, template) {\n    if (!item.hasDamage) return false;\n    let config, dmgSettings;\n    // some items/spells have multiple damage types\n    // this loop looks over all the types until it finds one with a valid fx preset\n    for (const [_, dmgType] of item.data.data.damage.parts){\n        dmgSettings = categories[dmgType] || {};\n        config = dmgSettings[template.data.t];\n        if (config && config.preset !== (0, $2a8e669d7b55d798$export$680af52575be3523)) break;\n    }\n    if (!config) return false;\n    $df9b71b8b9df6e3e$var$fromConfig(mergeObject(config, {\n        opacity: dmgSettings.opacity,\n        tint: dmgSettings.tint\n    }, true, true), template);\n    return true;\n}\nfunction $df9b71b8b9df6e3e$var$fromItem(wrapped, ...args) {\n    const [item] = args;\n    const template = wrapped(...args);\n    if (!template) return template;\n    let hasPreset = template.hasOwnProperty(\"tmfxPreset\");\n    if (hasPreset) return template;\n    const settings = game.settings.get(\"tokenmagic\", \"autoTemplateSettings\");\n    let updated = settings.overrides ? $df9b71b8b9df6e3e$var$fromOverrides(Object.values(settings.overrides), item, template) : false;\n    if (!updated) $df9b71b8b9df6e3e$var$fromCategories(settings.categories, item, template);\n    return template;\n}\nconst $df9b71b8b9df6e3e$export$2e33ee4bec8a51fe = new $df9b71b8b9df6e3e$export$7b4b307b24c88455();\n\n\n\nclass $e71b84600a531e84$export$974ac8c3143e0d38 {\n    static get defaultConfiguration() {\n        const defaultConfig = {\n            categories: {},\n            overrides: {\n                0: {\n                    target: \"Stinking Cloud\",\n                    opacity: 0.5,\n                    tint: \"#00a80b\",\n                    preset: \"Smoky Area\",\n                    texture: null\n                },\n                1: {\n                    target: \"Sanguine Mist\",\n                    opacity: 0.6,\n                    tint: \"#c41212\",\n                    preset: \"Smoky Area\"\n                },\n                2: {\n                    target: \"Web\",\n                    opacity: 0.5,\n                    tint: \"#808080\",\n                    preset: \"Spider Web 2\",\n                    texture: null\n                },\n                3: {\n                    target: \"Incendiary Aura\",\n                    opacity: 0.2,\n                    tint: \"#b12910\",\n                    preset: \"Smoke Filaments\",\n                    texture: null\n                }\n            }\n        };\n        Object.keys(CONFIG.PF2E.damageTraits).forEach((dmgType)=>{\n            if (defaultConfig.categories[dmgType] == undefined) {\n                const config = {\n                    opacity: (0, $2a8e669d7b55d798$export$7395e4cb572e863b),\n                    tint: null\n                };\n                switch(dmgType.toLowerCase()){\n                    case \"acid\":\n                        config.tint = \"#2d8000\";\n                        config.opacity = 0.6;\n                        break;\n                    case \"cold\":\n                        config.tint = \"#47b3ff\";\n                        break;\n                    case \"electricity\":\n                        break;\n                    case \"fire\":\n                        break;\n                    case \"force\":\n                        break;\n                    case \"mental\":\n                        config.tint = \"#8000ff\";\n                        break;\n                    case \"negative\":\n                        config.tint = \"#502673\";\n                        break;\n                    case \"poison\":\n                        config.tint = \"#00a80b\";\n                        break;\n                    case \"positive\":\n                        break;\n                    case \"sonic\":\n                        config.tint = \"#0060ff\";\n                        break;\n                    default:\n                        break;\n                }\n                defaultConfig.categories[dmgType] = config;\n            }\n            Object.keys(CONFIG.MeasuredTemplate.types).forEach((tplType)=>{\n                const config = {\n                    preset: (0, $2a8e669d7b55d798$export$680af52575be3523),\n                    texture: null\n                };\n                switch(dmgType.toLowerCase()){\n                    case \"acid\":\n                        config.preset = \"Watery Surface 2\";\n                        break;\n                    case \"cold\":\n                        config.preset = \"Thick Fog\";\n                        break;\n                    case \"electricity\":\n                        config.preset = \"Shock\";\n                        break;\n                    case \"fire\":\n                        config.preset = \"Flames\";\n                        break;\n                    case \"force\":\n                        config.preset = \"Waves 3\";\n                        break;\n                    case \"mental\":\n                        config.preset = \"Classic Rays\";\n                        break;\n                    case \"negative\":\n                        config.preset = \"Smoke Filaments\";\n                        break;\n                    case \"poison\":\n                        config.preset = \"Smoky Area\";\n                        break;\n                    case \"positive\":\n                        config.preset = \"Annihilating Rays\";\n                        break;\n                    case \"sonic\":\n                        config.preset = \"Waves\";\n                        break;\n                    default:\n                        break;\n                }\n                defaultConfig.categories[dmgType][tplType] = config;\n            });\n        });\n        return defaultConfig;\n    }\n    constructor(){\n        this._enabled = false;\n    }\n    configure(enabled = false) {\n        if (game.system.id !== \"pf2e\") return;\n        this._enabled = enabled;\n    }\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {}\n    getData() {\n        return {\n            hasAutoTemplates: true,\n            dmgTypes: CONFIG.PF2E.damageTraits,\n            templateTypes: CONFIG.MeasuredTemplate.types\n        };\n    }\n    preCreateMeasuredTemplate(template) {\n        let hasPreset = template.hasOwnProperty(\"tmfxPreset\");\n        if (hasPreset) return template;\n        const origin = template.flags?.pf2e?.origin;\n        const settings = game.settings.get(\"tokenmagic\", \"autoTemplateSettings\");\n        let updated = settings.overrides ? $e71b84600a531e84$var$fromOverrides(Object.values(settings.overrides), origin, template) : false;\n        if (!updated) $e71b84600a531e84$var$fromCategories(settings.categories, origin, template);\n        return template;\n    }\n}\nfunction $e71b84600a531e84$var$fromConfig(config, template) {\n    const o = {\n        tokenmagic: {\n            options: {}\n        }\n    };\n    if (config.preset && config.preset !== \"\" && config.preset !== (0, $2a8e669d7b55d798$export$680af52575be3523)) o.tokenmagic.options.tmfxPreset = config.preset;\n    if (config.texture && config.texture !== \"\") o.tokenmagic.options.tmfxTexture = config.texture;\n    if (config.tint && config.tint !== \"\") o.tokenmagic.options.tmfxTint = config.tint;\n    o.tokenmagic.options.tmfxTextureAlpha = config.opacity;\n    template.updateSource({\n        flags: {\n            tokenmagic: o.tokenmagic\n        }\n    });\n}\nfunction $e71b84600a531e84$var$fromOverrides(overrides = [], origin, template) {\n    const { name: name, slug: slug } = origin;\n    let config = overrides.find((el)=>el.target.toLowerCase() === name?.toLowerCase());\n    if (!config) return false;\n    $e71b84600a531e84$var$fromConfig(config, template);\n    return true;\n}\nfunction $e71b84600a531e84$var$fromCategories(categories = {}, origin, template) {\n    if (!origin.traits?.length) return false;\n    let config, dmgSettings;\n    // some templates may have multiple traits\n    // this loop looks over all of them until it finds one with a valid fx preset\n    for (const trait of origin.traits){\n        dmgSettings = categories[trait.toLowerCase()] || {};\n        config = dmgSettings[template.t];\n        if (config && config.preset !== (0, $2a8e669d7b55d798$export$680af52575be3523)) break;\n    }\n    if (!config) return false;\n    $e71b84600a531e84$var$fromConfig(mergeObject(config, {\n        opacity: dmgSettings.opacity,\n        tint: dmgSettings.tint\n    }, true, true), template);\n    return true;\n}\nconst $e71b84600a531e84$export$437ce40001ae0212 = new $e71b84600a531e84$export$974ac8c3143e0d38();\n\n\n\nclass $d6a82333f27252db$export$6e94d583ff29718b {\n    static get defaultConfiguration() {\n        const defaultConfig = {\n            categories: {},\n            overrides: {\n                0: {\n                    target: \"Игни\",\n                    opacity: 0.5,\n                    tint: \"#00a80b\",\n                    preset: \"Flames\",\n                    texture: null\n                }\n            }\n        };\n        Object.keys(CONFIG.witcher.meleeSkills).forEach((meleeSkillType)=>{\n            if (defaultConfig.categories[meleeSkillType] == undefined) {\n                const config = {\n                    opacity: (0, $2a8e669d7b55d798$export$7395e4cb572e863b),\n                    tint: null\n                };\n                switch(meleeSkillType.toLowerCase()){\n                    case \"brawling\":\n                        config.tint = \"#2d8000\";\n                        config.opacity = 0.6;\n                        break;\n                    case \"melee\":\n                        config.tint = \"#47b3ff\";\n                        break;\n                    case \"small blades\":\n                        config.tint = \"#502673\";\n                        break;\n                    case \"staff/spear\":\n                        config.tint = \"#00a80b\";\n                        break;\n                    case \"swordsmanship\":\n                        config.tint = \"#8000ff\";\n                        break;\n                    case \"athletics\":\n                        config.tint = \"#0060ff\";\n                        break;\n                    default:\n                        break;\n                }\n                defaultConfig.categories[meleeSkillType] = config;\n            }\n            Object.keys(CONFIG.MeasuredTemplate.types).forEach((tplType)=>{\n                const config = {\n                    preset: (0, $2a8e669d7b55d798$export$680af52575be3523),\n                    texture: null\n                };\n                switch(meleeSkillType.toLowerCase()){\n                    case \"acid\":\n                        config.preset = \"slashing\";\n                        break;\n                    case \"cold\":\n                        config.preset = \"bludgeoning\";\n                        break;\n                    case \"fire\":\n                        config.preset = \"piercing\";\n                        break;\n                    case \"force\":\n                        config.preset = \"elemental\";\n                        break;\n                    default:\n                        break;\n                }\n                defaultConfig.categories[meleeSkillType][tplType] = config;\n            });\n        });\n        return defaultConfig;\n    }\n    constructor(){\n        this._enabled = false;\n    }\n    get enabled() {\n        return this._enabled;\n    }\n    configure(enabled = false) {\n        if (game.system.id !== \"TheWitcherTRPG\") return;\n        this._enabled = enabled;\n    }\n    getData() {\n        return {\n            hasAutoTemplates: true,\n            meleeSkills: CONFIG.witcher.meleeSkills,\n            templateTypes: CONFIG.MeasuredTemplate.types\n        };\n    }\n    preCreateMeasuredTemplate(template) {\n        let hasPreset = template.hasOwnProperty(\"tmfxPreset\");\n        if (hasPreset) return template;\n        const settings = game.settings.get(\"tokenmagic\", \"autoTemplateSettings\");\n        let updated = settings.overrides ? $d6a82333f27252db$var$fromOverrides(Object.values(settings.overrides), template) : false;\n        if (!updated) $d6a82333f27252db$var$fromCategories(settings.categories, template);\n    }\n}\nfunction $d6a82333f27252db$var$fromConfig(config, templateData) {\n    const o = {\n        tokenmagic: {\n            options: {}\n        }\n    };\n    if (config.preset && config.preset !== \"\" && config.preset !== (0, $2a8e669d7b55d798$export$680af52575be3523)) o.tokenmagic.options.tmfxPreset = config.preset;\n    if (config.texture && config.texture !== \"\") o.tokenmagic.options.tmfxTexture = config.texture;\n    if (config.tint && config.tint !== \"\") o.tokenmagic.options.tmfxTint = config.tint;\n    o.tokenmagic.options.tmfxTextureAlpha = config.opacity;\n    mergeObject(templateData, {\n        \"flags.tokenmagic\": o.tokenmagic\n    });\n}\nfunction $d6a82333f27252db$var$fromOverrides(overrides = [], templateData) {\n    const name = templateData.flags.witcher?.origin?.name;\n    let config = overrides.find((el)=>el.target.toLowerCase() === name?.toLowerCase());\n    if (!config) return false;\n    $d6a82333f27252db$var$fromConfig(config, templateData);\n    return true;\n}\nfunction $d6a82333f27252db$var$fromCategories(categories = {}, templateData) {\n    const traits = templateData.flags.witcher?.origin?.traits ?? [];\n    let config, dmgSettings;\n    for (const trait of traits){\n        dmgSettings = categories[trait] || {};\n        config = dmgSettings[templateData.t];\n        if (config && config.preset !== (0, $2a8e669d7b55d798$export$680af52575be3523)) break;\n    }\n    if (!config) return false;\n    $d6a82333f27252db$var$fromConfig(mergeObject(config, {\n        opacity: dmgSettings.opacity,\n        tint: dmgSettings.tint\n    }, true, true), templateData);\n    return true;\n}\nconst $d6a82333f27252db$export$e8d12d88f51888cc = new $d6a82333f27252db$export$6e94d583ff29718b();\n\n\n\nconst $3cb990d4b29536ce$var$Magic = (0, $843aec23ddc05ff2$export$4367b12d875874d3)();\nclass $3cb990d4b29536ce$export$804072f25096732f extends FormApplication {\n    constructor(object = {}, options){\n        super(object, options);\n    }\n    /** @override */ static get defaultOptions() {\n        return {\n            ...super.defaultOptions,\n            template: \"modules/tokenmagic/templates/settings/settings.html\",\n            height: \"auto\",\n            title: game.i18n.localize(\"TMFX.settings.autoTemplateSettings.dialog.title\"),\n            width: 600,\n            classes: [\n                \"tokenmagic\",\n                \"settings\"\n            ],\n            tabs: [\n                {\n                    navSelector: \".tabs\",\n                    contentSelector: \"form\",\n                    initial: \"name\"\n                }\n            ],\n            submitOnClose: false\n        };\n    }\n    static init() {\n        const menuAutoTemplateSettings = {\n            key: \"autoTemplateSettings\",\n            config: {\n                name: game.i18n.localize(\"TMFX.settings.autoTemplateSettings.button.name\"),\n                label: game.i18n.localize(\"TMFX.settings.autoTemplateSettings.button.label\"),\n                hint: game.i18n.localize(\"TMFX.settings.autoTemplateSettings.button.hint\"),\n                type: $3cb990d4b29536ce$export$804072f25096732f,\n                restricted: true\n            }\n        };\n        const settingAutoTemplateSettings = {\n            key: \"autoTemplateSettings\",\n            config: {\n                name: game.i18n.localize(\"TMFX.settings.autoTemplateSettings.name\"),\n                hint: game.i18n.localize(\"TMFX.settings.autoTemplateSettings.hint\"),\n                scope: \"world\",\n                config: false,\n                default: {},\n                type: Object\n            }\n        };\n        const templates = this.getSystemTemplates();\n        let hasAutoTemplates = !!templates;\n        if (templates) {\n            game.settings.registerMenu(\"tokenmagic\", menuAutoTemplateSettings.key, menuAutoTemplateSettings.config);\n            game.settings.register(\"tokenmagic\", settingAutoTemplateSettings.key, mergeObject(settingAutoTemplateSettings.config, {\n                default: templates.constructor.defaultConfiguration\n            }, true, true));\n        }\n        game.settings.register(\"tokenmagic\", \"autoTemplateEnabled\", {\n            name: game.i18n.localize(\"TMFX.settings.autoTemplateEnabled.name\"),\n            hint: game.i18n.localize(\"TMFX.settings.autoTemplateEnabled.hint\"),\n            scope: \"world\",\n            config: hasAutoTemplates,\n            default: hasAutoTemplates,\n            type: Boolean,\n            onChange: (value)=>$3cb990d4b29536ce$export$804072f25096732f.configureAutoTemplate(value)\n        });\n        game.settings.register(\"tokenmagic\", \"defaultTemplateOnHover\", {\n            name: game.i18n.localize(\"TMFX.settings.defaultTemplateOnHover.name\"),\n            hint: game.i18n.localize(\"TMFX.settings.defaultTemplateOnHover.hint\"),\n            scope: \"world\",\n            config: true,\n            default: hasAutoTemplates,\n            type: Boolean,\n            onChange: ()=>window.location.reload()\n        });\n        game.settings.register(\"tokenmagic\", \"autohideTemplateElements\", {\n            name: game.i18n.localize(\"TMFX.settings.autohideTemplateElements.name\"),\n            hint: game.i18n.localize(\"TMFX.settings.autohideTemplateElements.hint\"),\n            scope: \"world\",\n            config: true,\n            default: true,\n            type: Boolean,\n            onChange: ()=>window.location.reload()\n        });\n        game.settings.register(\"tokenmagic\", \"useAdditivePadding\", {\n            name: game.i18n.localize(\"TMFX.settings.useMaxPadding.name\"),\n            hint: game.i18n.localize(\"TMFX.settings.useMaxPadding.hint\"),\n            scope: \"world\",\n            config: true,\n            default: false,\n            type: Boolean\n        });\n        game.settings.register(\"tokenmagic\", \"minPadding\", {\n            name: game.i18n.localize(\"TMFX.settings.minPadding.name\"),\n            hint: game.i18n.localize(\"TMFX.settings.minPadding.hint\"),\n            scope: \"world\",\n            config: true,\n            default: 50,\n            type: Number\n        });\n        game.settings.register(\"tokenmagic\", \"fxPlayerPermission\", {\n            name: game.i18n.localize(\"TMFX.settings.fxPlayerPermission.name\"),\n            hint: game.i18n.localize(\"TMFX.settings.fxPlayerPermission.hint\"),\n            scope: \"world\",\n            config: true,\n            default: false,\n            type: Boolean\n        });\n        game.settings.register(\"tokenmagic\", \"importOverwrite\", {\n            name: game.i18n.localize(\"TMFX.settings.importOverwrite.name\"),\n            hint: game.i18n.localize(\"TMFX.settings.importOverwrite.hint\"),\n            scope: \"world\",\n            config: true,\n            default: false,\n            type: Boolean\n        });\n        game.settings.register(\"tokenmagic\", \"useZOrder\", {\n            name: game.i18n.localize(\"TMFX.settings.useZOrder.name\"),\n            hint: game.i18n.localize(\"TMFX.settings.useZOrder.hint\"),\n            scope: \"world\",\n            config: true,\n            default: false,\n            type: Boolean\n        });\n        game.settings.register(\"tokenmagic\", \"disableAnimations\", {\n            name: game.i18n.localize(\"TMFX.settings.disableAnimations.name\"),\n            hint: game.i18n.localize(\"TMFX.settings.disableAnimations.hint\"),\n            scope: \"client\",\n            config: true,\n            default: false,\n            type: Boolean,\n            onChange: ()=>window.location.reload()\n        });\n        game.settings.register(\"tokenmagic\", \"disableCaching\", {\n            name: game.i18n.localize(\"TMFX.settings.disableCaching.name\"),\n            hint: game.i18n.localize(\"TMFX.settings.disableCaching.hint\"),\n            scope: \"client\",\n            config: true,\n            default: true,\n            type: Boolean\n        });\n        game.settings.register(\"tokenmagic\", \"disableVideo\", {\n            name: game.i18n.localize(\"TMFX.settings.disableVideo.name\"),\n            hint: game.i18n.localize(\"TMFX.settings.disableVideo.hint\"),\n            scope: \"world\",\n            config: true,\n            default: false,\n            type: Boolean,\n            onChange: ()=>window.location.reload()\n        });\n        game.settings.register(\"tokenmagic\", \"presets\", {\n            name: \"Token Magic FX presets\",\n            hint: \"Token Magic FX presets\",\n            scope: \"world\",\n            config: false,\n            default: (0, $855c97940ea7d48a$export$7afd9c1079ecedf7),\n            type: Object\n        });\n        game.settings.register(\"tokenmagic\", \"migration\", {\n            name: \"TMFX Data Version\",\n            hint: \"TMFX Data Version\",\n            scope: \"world\",\n            config: false,\n            default: (0, $65a4ae23b1e0568d$export$df3971f21aaed551).ARCHAIC,\n            type: String\n        });\n        loadTemplates([\n            \"modules/tokenmagic/templates/settings/settings.html\",\n            \"modules/tokenmagic/templates/settings/dnd5e/categories.html\",\n            \"modules/tokenmagic/templates/settings/dnd5e/overrides.html\",\n            \"modules/tokenmagic/templates/settings/pf2e/categories.html\",\n            \"modules/tokenmagic/templates/settings/pf2e/overrides.html\",\n            \"modules/tokenmagic/templates/settings/TheWitcherTRPG/categories.html\",\n            \"modules/tokenmagic/templates/settings/TheWitcherTRPG/overrides.html\"\n        ]);\n    }\n    static configureAutoTemplate(enabled = false) {\n        this.getSystemTemplates()?.configure(enabled);\n    }\n    static getSystemTemplates() {\n        switch(game.system.id){\n            case \"dnd5e\":\n                return 0, $df9b71b8b9df6e3e$export$2e33ee4bec8a51fe;\n            case \"pf2e\":\n                return 0, $e71b84600a531e84$export$437ce40001ae0212;\n            case \"TheWitcherTRPG\":\n                return 0, $d6a82333f27252db$export$e8d12d88f51888cc;\n            default:\n                return null;\n        }\n    }\n    getSettingsData() {\n        let settingsData = {\n            autoTemplateEnable: game.settings.get(\"tokenmagic\", \"autoTemplateEnabled\")\n        };\n        if ($3cb990d4b29536ce$export$804072f25096732f.getSystemTemplates()) settingsData[\"autoTemplateSettings\"] = game.settings.get(\"tokenmagic\", \"autoTemplateSettings\");\n        return settingsData;\n    }\n    /** @override */ getData() {\n        let data = super.getData();\n        data.hasAutoTemplates = false;\n        data.emptyPreset = (0, $2a8e669d7b55d798$export$680af52575be3523);\n        const templates = $3cb990d4b29536ce$export$804072f25096732f.getSystemTemplates();\n        if (templates) mergeObject(data, templates.getData());\n        data.presets = $3cb990d4b29536ce$var$Magic.getPresets((0, $855c97940ea7d48a$export$19612c32a2f7f4cd).TEMPLATE).sort(function(a, b) {\n            if (a.name < b.name) return -1;\n            if (a.name > b.name) return 1;\n            return 0;\n        });\n        data.system = {\n            id: game.system.id,\n            title: game.system.title\n        };\n        data.settings = this.getSettingsData();\n        data.submitText = game.i18n.localize(\"TMFX.save\");\n        return data;\n    }\n    /** @override */ async _updateObject(_, formData) {\n        const data = expandObject(formData);\n        for (let [key, value] of Object.entries(data)){\n            if (key === \"autoTemplateSettings\" && value.overrides) {\n                const compacted = {};\n                Object.values(value.overrides).forEach((val, idx)=>compacted[idx] = val);\n                value.overrides = compacted;\n            }\n            await game.settings.set(\"tokenmagic\", key, value);\n        }\n    }\n    /** @override */ activateListeners(html) {\n        super.activateListeners(html);\n        html.find(\"button.add-override\").click(this._onAddOverride.bind(this));\n        html.find(\"button.remove-override\").click(this._onRemoveOverride.bind(this));\n    }\n    async _onAddOverride(event) {\n        event.preventDefault();\n        let idx = 0;\n        const entries = event.target.closest(\"div.tab\").querySelectorAll(\"div.override-entry\");\n        const last = entries[entries.length - 1];\n        if (last) idx = last.dataset.idx + 1;\n        let updateData = {};\n        updateData[`autoTemplateSettings.overrides.${idx}.target`] = \"\";\n        updateData[`autoTemplateSettings.overrides.${idx}.opacity`] = (0, $2a8e669d7b55d798$export$7395e4cb572e863b);\n        updateData[`autoTemplateSettings.overrides.${idx}.tint`] = null;\n        updateData[`autoTemplateSettings.overrides.${idx}.preset`] = (0, $2a8e669d7b55d798$export$680af52575be3523);\n        updateData[`autoTemplateSettings.overrides.${idx}.texture`] = null;\n        await this._onSubmit(event, {\n            updateData: updateData,\n            preventClose: true\n        });\n        this.render();\n    }\n    async _onRemoveOverride(event) {\n        event.preventDefault();\n        let idx = event.target.dataset.idx;\n        const el = event.target.closest(`div[data-idx=\"${idx}\"]`);\n        if (!el) return true;\n        el.remove();\n        await this._onSubmit(event, {\n            preventClose: true\n        });\n        this.render();\n    }\n}\nHooks.once(\"init\", ()=>{\n    // Extracted from https://github.com/leapfrogtechnology/just-handlebars-helpers/\n    Handlebars.registerHelper(\"concat\", function(...params) {\n        // Ignore the object appended by handlebars.\n        if (typeof params[params.length - 1] === \"object\") params.pop();\n        return params.join(\"\");\n    });\n    $3cb990d4b29536ce$export$804072f25096732f.init();\n    $3cb990d4b29536ce$export$804072f25096732f.configureAutoTemplate(game.settings.get(\"tokenmagic\", \"autoTemplateEnabled\"));\n    const wmtdUpdate = async function(wrapped, ...args) {\n        const [document] = args;\n        let preset, hasPresetData;\n        const tex = document.texture ?? \"\";\n        const hasTexture = !!document.texture;\n        const opt = document.flags?.tokenmagic?.options ?? null;\n        if (!opt) preset = document[\"flags.tokenmagic.templateData.preset\"];\n        hasPresetData = !!preset;\n        //const hasOpt = data[\"flags.tokenmagic\"]?.options ?? null;\n        if (hasTexture) document.texture = (0, $843aec23ddc05ff2$export$3bebb302ab08af33)(document.texture);\n        if (opt == null) {\n            if (hasPresetData && preset !== (0, $2a8e669d7b55d798$export$680af52575be3523)) {\n                let defaultTexture = $3cb990d4b29536ce$var$Magic._getPresetTemplateDefaultTexture(preset);\n                if (!(defaultTexture == null)) {\n                    if (tex === \"\" || tex.startsWith(\"modules/tokenmagic/fx/assets/templates/\")) document.texture = defaultTexture;\n                }\n            } else if (hasTexture && tex.startsWith(\"modules/tokenmagic/fx/assets/templates/\") && hasPresetData && preset === (0, $2a8e669d7b55d798$export$680af52575be3523)) document.texture = \"\";\n        }\n        return await wrapped(...args);\n    };\n    const wmtDraw = async function(wrapped, ...args) {\n        if (this.document.texture) this.document.texture = (0, $843aec23ddc05ff2$export$3bebb302ab08af33)(this.document.texture);\n        const retVal = await wrapped(...args);\n        this.template.alpha = this.document.getFlag(\"tokenmagic\", \"templateData\")?.opacity ?? 1;\n        return retVal;\n    };\n    let wmtApplyRenderFlags;\n    let wmtApplyRenderFlagsType;\n    let wmtRefreshTemplate;\n    let wmtRefreshTemplateType;\n    if (!(0, $843aec23ddc05ff2$export$62085f0363fc8c9)()) {\n        const toRadians = Math.toRadians;\n        wmtApplyRenderFlagsType = \"WRAPPER\";\n        wmtApplyRenderFlags = function(wrapped, ...args) {\n            const [flags] = args;\n            if (flags?.refreshShape) flags.refreshShape = this.template && !this.template._destroyed;\n            return wrapped(...args);\n        };\n        /* ------------------------------------------------------------------------------------ */ wmtRefreshTemplateType = \"OVERRIDE\";\n        /**\r\n\t\t *\r\n\t\t * @return {wmtRefreshTemplate}\r\n\t\t */ wmtRefreshTemplate = function() {\n            const t = this.template.clear();\n            if (!this.isVisible) return;\n            // Draw the Template outline\n            t.lineStyle(this._borderThickness, this.borderColor, 0.75).beginFill(0x000000, 0.0);\n            // Fill Color or Texture\n            if (this.texture) {\n                let mat = PIXI.Matrix.IDENTITY;\n                // rectangle\n                if (this.shape.width && this.shape.height) mat.scale(this.shape.width / this.texture.width, this.shape.height / this.texture.height);\n                else if (this.shape.radius) {\n                    mat.scale(this.shape.radius * 2 / this.texture.height, this.shape.radius * 2 / this.texture.width);\n                    // Circle center is texture start...\n                    mat.translate(-this.shape.radius, -this.shape.radius);\n                } else if (this.document.t === \"ray\") {\n                    const d = canvas.dimensions, height = this.document.width * d.size / d.distance, width = this.document.distance * d.size / d.distance;\n                    mat.scale(width / this.texture.width, height / this.texture.height);\n                    mat.translate(0, -height * 0.5);\n                    mat.rotate(toRadians(this.document.direction));\n                } else {\n                    // cone\n                    const d = canvas.dimensions;\n                    // Extract and prepare data\n                    let { direction: direction, distance: distance, angle: angle } = this.document;\n                    distance *= d.size / d.distance;\n                    direction = Math.toRadians(direction);\n                    const width = this.document.distance * d.size / d.distance;\n                    const angles = [\n                        angle / -2,\n                        angle / 2\n                    ];\n                    distance = distance / Math.cos(Math.toRadians(angle / 2));\n                    // Get the cone shape as a polygon\n                    const rays = angles.map((a)=>Ray.fromAngle(0, 0, direction + Math.toRadians(a), distance + 1));\n                    const height = Math.sqrt((rays[0].B.x - rays[1].B.x) * (rays[0].B.x - rays[1].B.x) + (rays[0].B.y - rays[1].B.y) * (rays[0].B.y - rays[1].B.y));\n                    mat.scale(width / this.texture.width, height / this.texture.height);\n                    mat.translate(0, -height / 2);\n                    mat.rotate(toRadians(this.document.direction));\n                }\n                t.beginTextureFill({\n                    texture: this.texture,\n                    matrix: mat,\n                    alpha: 1.0\n                });\n                const source = getProperty(this.texture, \"baseTexture.resource.source\");\n                if (source && source.tagName === \"VIDEO\") {\n                    source.loop = true;\n                    source.muted = true;\n                    game.video.play(source);\n                }\n            } else t.beginFill(0x000000, 0.0);\n            // Draw the shape\n            t.drawShape(this.shape);\n            // Draw origin and destination points\n            t.lineStyle(this._borderThickness, 0x000000).beginFill(0x000000, 0.5).drawCircle(0, 0, 6).drawCircle(this.ray.dx, this.ray.dy, 6);\n            // Update visibility\n            this.controlIcon.visible = !!this.layer.active;\n            this.controlIcon.border.visible = !!this.hover;\n            const alpha = this.document.getFlag(\"tokenmagic\", \"templateData\")?.opacity ?? 1;\n            t.alpha = this.hover ? alpha / 1.25 : alpha;\n            return this;\n        };\n    /* ------------------------------------------------------------------------------------ */ }\n    if (game.settings.get(\"tokenmagic\", \"autohideTemplateElements\")) {\n        /**\r\n\t\t *\r\n\t\t * @param wrapped\r\n\t\t * @param args\r\n\t\t * @return {*}\r\n\t\t */ const autohideTemplateElements = function(wrapped, ...args) {\n            // Save texture and border thickness\n            const texture = this.texture;\n            const borderThickness = this._borderThickness;\n            // Hide template texture while moving\n            if (this._original || this.parent === canvas.templates.preview) this.texture = null;\n            // Show border outline only on hover if the template is textured\n            if (this.texture && this.texture !== \"\" && !this._hover) this._borderThickness = 0;\n            const retVal = wrapped(...args);\n            // Restore texture and border thickness\n            this.texture = texture;\n            this._borderThickness = borderThickness;\n            {\n                // Show the origin/destination points and ruler text only on hover or while creating but not while moving\n                const template = this._original ?? this;\n                const show = !this._original && (this._hover || this.parent === canvas.templates.preview);\n                if (!show && template.template?.geometry) {\n                    // Hide origin and destination points, i.e., hide everything except the template shape\n                    for (const document of template.template.geometry.graphicsData)if (document.shape !== template.shape) {\n                        document.fillStyle.visible = false;\n                        document.lineStyle.visible = false;\n                    }\n                    template.template.geometry.invalidate();\n                }\n                if (template.ruler) template.ruler.renderable = show;\n                if (template.controlIcon) template.controlIcon.renderable = template.owner;\n                if (template.handle) template.handle.renderable = template.owner;\n            }\n            return retVal;\n        };\n        /* ------------------------------------------------------------------------------------ */ if (wmtApplyRenderFlags) {\n            const _wmtApplyRenderFlags = wmtApplyRenderFlags;\n            wmtApplyRenderFlags = function() {\n                return autohideTemplateElements.call(this, _wmtApplyRenderFlags.bind(this), ...arguments);\n            };\n        } else {\n            wmtApplyRenderFlagsType = \"WRAPPER\";\n            wmtApplyRenderFlags = autohideTemplateElements;\n        }\n    }\n    if (game.settings.get(\"tokenmagic\", \"defaultTemplateOnHover\")) Hooks.on(\"canvasReady\", ()=>{\n        canvas.stage.on(\"mousemove\", (event)=>{\n            const { x: mx, y: my } = event.data.getLocalPosition(canvas.templates);\n            for (const template of canvas.templates.placeables){\n                const hl = canvas.grid.getHighlightLayer(`MeasuredTemplate.${template.id}`);\n                const opacity = template.document.getFlag(\"tokenmagic\", \"templateData\")?.opacity ?? 1;\n                if (template.texture && template.texture !== \"\") {\n                    const { x: cx, y: cy } = template.center;\n                    const mouseover = template.shape?.contains(mx - cx, my - cy);\n                    hl.renderable = mouseover;\n                    template.template.alpha = (mouseover ? 0.5 : 1.0) * opacity;\n                } else {\n                    hl.renderable = true;\n                    template.template.alpha = opacity;\n                }\n            }\n        });\n    });\n    if (game.modules.get(\"lib-wrapper\")?.active) {\n        libWrapper.register(\"tokenmagic\", \"MeasuredTemplateDocument.prototype.update\", wmtdUpdate, \"WRAPPER\");\n        libWrapper.register(\"tokenmagic\", \"MeasuredTemplate.prototype._draw\", wmtDraw, \"WRAPPER\");\n        if (wmtApplyRenderFlags) libWrapper.register(\"tokenmagic\", \"MeasuredTemplate.prototype._applyRenderFlags\", wmtApplyRenderFlags, wmtApplyRenderFlagsType);\n        if (wmtRefreshTemplate) libWrapper.register(\"tokenmagic\", \"MeasuredTemplate.prototype._refreshTemplate\", wmtRefreshTemplate, wmtRefreshTemplateType);\n    } else {\n        const cmtdUpdate = MeasuredTemplateDocument.prototype.update;\n        MeasuredTemplateDocument.prototype.update = function() {\n            return wmtdUpdate.call(this, cmtdUpdate.bind(this), ...arguments);\n        };\n        const cmtDraw = MeasuredTemplate.prototype._draw;\n        MeasuredTemplate.prototype._draw = function() {\n            return wmtDraw.call(this, cmtDraw.bind(this), ...arguments);\n        };\n        if (wmtApplyRenderFlags) {\n            if (wmtApplyRenderFlagsType && wmtApplyRenderFlagsType !== \"OVERRIDE\") {\n                const cmtApplyRenderFlags = MeasuredTemplate.prototype._applyRenderFlags;\n                MeasuredTemplate.prototype._applyRenderFlags = function() {\n                    return wmtApplyRenderFlags.call(this, cmtApplyRenderFlags.bind(this), ...arguments);\n                };\n            } else MeasuredTemplate.prototype._applyRenderFlags = wmtApplyRenderFlags;\n        }\n        if (wmtRefreshTemplate) {\n            if (wmtRefreshTemplateType && wmtRefreshTemplateType !== \"OVERRIDE\") {\n                const cmtRefreshTemplate = MeasuredTemplate.prototype._refreshTemplate;\n                MeasuredTemplate.prototype._refreshTemplate = function() {\n                    return wmtRefreshTemplate.call(this, cmtRefreshTemplate.bind(this), ...arguments);\n                };\n            } else MeasuredTemplate.prototype._refreshTemplate = wmtRefreshTemplate;\n        }\n    }\n});\n\n\n/*\r\n\r\nIt's getting messy here !\r\nI will fix it in a future version\r\n(+ duplicated code to factorize and code to improve)\r\n\r\n*/ const $843aec23ddc05ff2$var$moduleTM = \"module.tokenmagic\";\nconst $843aec23ddc05ff2$export$c67e46de1ec7dfa6 = {\n    adjustment: (0, $b18b66f231b68d33$export$1545cd3bbac349ce),\n    ascii: (0, $266d272be8565e9a$export$1efdcfd4cb16ac29),\n    dot: (0, $66f275f0cec2a609$export$d75528d01a211954),\n    distortion: (0, $3bd1625f35d5c5ab$export$2d59c37be5e749a7),\n    crt: (0, $8e9589e1a89f7fdf$export$1ab2366e25c48ed5),\n    oldfilm: (0, $8d4366a6c959b91c$export$2094be6cc744d7bc),\n    glow: (0, $8260b0df112cbb55$export$3ea2d657d9f1c2fe),\n    outline: (0, $d5c2fdb7e9f35bb9$export$c04494508d798797),\n    bevel: (0, $edefbbc41be796fb$export$bcacf43f99a4009b),\n    xbloom: (0, $03f77eb51ab54ef5$export$e7bbc116d34f17bc),\n    shadow: (0, $08d037e0a0fb0db5$export$3fa21fd22495d321),\n    twist: (0, $8704f3a7b8eb8233$export$f4e603bceef0312b),\n    zoomblur: (0, $3592e136c2b5345d$export$767afdf6d9357594),\n    blur: (0, $ee208d7c0ba797cd$export$efc74ab3983784c5),\n    bulgepinch: (0, $b0a48ef8c9dc39a0$export$c1f4d37fd591fb01),\n    zapshadow: (0, $4681772edff39fb8$export$228231731d6adde3),\n    ray: (0, $7eb8251b5cefe8f6$export$1992e0dceaf7be8),\n    fog: (0, $68fc188eb5f24493$export$f17580ed76af4408),\n    xfog: (0, $dc989832d8d10a8f$export$da3eec8748131849),\n    electric: (0, $e083d04444045e2e$export$22f86bc7a100befc),\n    wave: (0, $052a5b7ae09fb485$export$4eeb783ef7c17da8),\n    shockwave: (0, $9bb93ce0cae67db4$export$985076e41ccfd508),\n    fire: (0, $6c6645b82b61bc37$export$fd0af22b8dd4eb46),\n    fumes: (0, $74f580247129123a$export$60b593b6124d1ebc),\n    smoke: (0, $2259918ac189db3e$export$2ba7369b7ae4551b),\n    flood: (0, $763101d941baf02d$export$bf2c97ada2c2b329),\n    images: (0, $ff9a4870337c9c29$export$7f3e808c6a96411c),\n    field: (0, $dd7b8e7fa7881c81$export$8353bd967bf6b04d),\n    xray: (0, $6cd542ba64bf5f03$export$a909c602e4f39889),\n    liquid: (0, $2d15a583bccdfdfc$export$76689802e4398e92),\n    xglow: (0, $3ad5a82bb0e54e91$export$dbf4d88a9f2fd9e6),\n    pixel: (0, $b42aa7ecb9ad892d$export$26c3bdb8b50816cc),\n    web: (0, $6fa7336a3977e368$export$be2f10404718dbad),\n    ripples: (0, $f18e6ec0a88cc5a8$export$3f7eb987d91438a2),\n    globes: (0, $73f856fafa2246eb$export$dd8c8c08b796f015),\n    transform: (0, $6e4bf56a3bec8613$export$e8341be799357874),\n    splash: (0, $8a211ec6959a309d$export$df3de41f3315cb09),\n    polymorph: (0, $8b6bb088e94ffbdd$export$cf7260b11c6fd85d),\n    xfire: (0, $3f0e291067dda99d$export$f5292971f4ab78f9),\n    sprite: (0, $6ec6ac6f8551358e$export$96f9417ff369e52),\n    spriteMask: (0, $68be543dfb80fbf0$export$4569ea13832ce134),\n    replaceColor: (0, $ed38b6bd78b4a5ef$export$c3ce4d77f1074b4d),\n    ddTint: (0, $15d7437eb4e5f5ac$export$1ee8d69885ee6ad1),\n    rgbSplit: (0, $affe7c1f1e13b606$export$767e09686399ca49)\n};\nconst $843aec23ddc05ff2$export$f2f6f02affe07ab5 = {\n    TOKEN: Token.embeddedName,\n    TILE: Tile.embeddedName,\n    TEMPLATE: MeasuredTemplate.embeddedName,\n    DRAWING: Drawing.embeddedName,\n    NOT_SUPPORTED: null\n};\nfunction $843aec23ddc05ff2$var$i18n(key) {\n    return game.i18n.localize(key);\n}\nasync function $843aec23ddc05ff2$var$exportObjectAsJson(exportObj, exportName) {\n    let jsonStr = JSON.stringify(exportObj, null, 4);\n    const a = document.createElement(\"a\");\n    const file = new Blob([\n        jsonStr\n    ], {\n        type: \"plain/text\"\n    });\n    a.href = URL.createObjectURL(file);\n    a.download = exportName + \".json\";\n    a.click();\n    URL.revokeObjectURL(a.href);\n}\nconst $843aec23ddc05ff2$export$157d7b8c087faa7b = {\n    SET_FLAG: \"TMFXSetFlag\",\n    SET_ANIME_FLAG: \"TMFXSetAnimeFlag\"\n};\nfunction $843aec23ddc05ff2$export$24d33a6f4bffea69(placeable, flag, socketAction) {\n    const data = {\n        tmAction: socketAction,\n        tmPlaceableId: placeable.id,\n        tmPlaceableType: placeable._TMFXgetPlaceableType(),\n        tmFlag: flag,\n        tmViewedScene: game.user.viewedScene\n    };\n    game.socket.emit($843aec23ddc05ff2$var$moduleTM, data, (resp)=>{});\n}\nfunction $843aec23ddc05ff2$export$73ccc1811a23c47(moduleName) {\n    return game.modules.has(moduleName) && game.modules.get(moduleName).active === true;\n}\nfunction $843aec23ddc05ff2$export$a3e1d0865041c250() {\n    return game.settings.get(\"tokenmagic\", \"minPadding\");\n}\nfunction $843aec23ddc05ff2$export$db02b1003f6b14db() {\n    return game.settings.get(\"tokenmagic\", \"useAdditivePadding\");\n}\nfunction $843aec23ddc05ff2$export$4d149f3fface3da5() {\n    return game.settings.get(\"tokenmagic\", \"disableCaching\");\n}\nfunction $843aec23ddc05ff2$export$62085f0363fc8c9() {\n    return game.settings.get(\"tokenmagic\", \"disableVideo\");\n}\nfunction $843aec23ddc05ff2$export$485113ed30b22bb8() {\n    const theOne = game.users.find((user)=>user.isGM && user.active);\n    return theOne && game.user === theOne;\n}\nfunction $843aec23ddc05ff2$export$ae4b89d79d01bd2b() {\n    return game.settings.get(\"tokenmagic\", \"fxPlayerPermission\") && !$843aec23ddc05ff2$export$485113ed30b22bb8();\n}\nfunction $843aec23ddc05ff2$export$2bf9d1af56f0b37d() {\n    canvas.app.renderer.filter.useMaxPadding = !$843aec23ddc05ff2$export$db02b1003f6b14db();\n}\nfunction $843aec23ddc05ff2$export$222530a21fa4a417() {\n    return game.settings.get(\"tokenmagic\", \"useZOrder\");\n}\nfunction $843aec23ddc05ff2$export$4876a704e2bf90fb() {\n    return game.settings.get(\"tokenmagic\", \"disableAnimations\");\n}\nfunction $843aec23ddc05ff2$export$bef1f36f5486a6a3(output) {\n    let logged = \"%cTokenMagic %c| \" + output;\n    console.log(logged, \"color:#4BC470\", \"color:#B3B3B3\");\n}\nfunction $843aec23ddc05ff2$export$c106dd0671a0fc2d(output) {\n    let logged = \"TokenMagic | \" + output;\n    console.warn(logged);\n}\nfunction $843aec23ddc05ff2$export$a3bc9b8ed74fc(output) {\n    let logged = \"TokenMagic | \" + output;\n    console.error(logged);\n}\nfunction $843aec23ddc05ff2$export$3bebb302ab08af33(path) {\n    /*\r\n      /prefix/...               =>   ...\r\n      /modules/tokenmagic/...   =>   modules/tokenmagic/...\r\n  */ if (path) {\n        const base = \"/modules/tokenmagic\";\n        const url = new URL(path, window.location.href);\n        if (url.origin === window.location.origin) {\n            let prefix = \"/\";\n            try {\n                if (ROUTE_PREFIX) prefix = new URL(ROUTE_PREFIX, window.location.origin).pathname;\n            } catch (err) {}\n            path = url.pathname;\n            if (prefix === \"/\") path = path.slice(1);\n            else if (path.startsWith(prefix) && (path.length === prefix.length || path[prefix.length] === \"/\")) path = path.slice(prefix.length + 1);\n            else if (path.startsWith(base) && (path.length === base.length || path[base.length] === \"/\")) path = path.slice(1);\n        } else path = url.href;\n    }\n    return path;\n}\nfunction $843aec23ddc05ff2$export$674b9bd489502778() {\n    const authorizedLayers = [\n        canvas.tokens,\n        canvas.tiles,\n        canvas.drawings\n    ];\n    if (authorizedLayers.some((layer)=>layer === canvas.activeLayer)) return canvas.activeLayer.placeables.filter((p)=>p.controlled === true) || [];\n    else return [];\n}\nfunction $843aec23ddc05ff2$export$c0c03469ba031852() {\n    return canvas.tokens.placeables.filter((placeable)=>placeable.isTargeted);\n}\nfunction $843aec23ddc05ff2$export$5008448b4c27fa2b(id, type) {\n    let placeable = null;\n    function findPlaceable(placeables, id) {\n        let rplaceable = null;\n        if (!(placeables == null) && placeables.length > 0) rplaceable = placeables.find((n)=>n.id === id);\n        return rplaceable;\n    }\n    switch(type){\n        case $843aec23ddc05ff2$export$f2f6f02affe07ab5.TOKEN:\n            placeable = findPlaceable(canvas.tokens.placeables, id);\n            break;\n        case $843aec23ddc05ff2$export$f2f6f02affe07ab5.TILE:\n            placeable = findPlaceable(canvas.tiles.placeables, id);\n            break;\n        case $843aec23ddc05ff2$export$f2f6f02affe07ab5.TEMPLATE:\n            placeable = findPlaceable(canvas.templates.placeables, id);\n            break;\n        case $843aec23ddc05ff2$export$f2f6f02affe07ab5.DRAWING:\n            placeable = findPlaceable(canvas.drawings.placeables, id);\n            break;\n    }\n    return placeable;\n}\n/**\r\n * Randomizes params using 'randomized' field.\r\n * 'randomized' is an object consisting of keys named after params to be randomized, which map either\r\n * to arrays or ranges which will be used to generate a random value.\r\n * e.g.\r\n * {\r\n *  param1: ['foo1', 'foo2', 'foo3'],\r\n *  param2: { list: ['foo1', 'foo2', 'foo3'], link: 'param5'},\r\n *  param3: { val1: 0, val2: 1, step: 0.1},\r\n *  param4: { val1: 0, val2: 10, step: 1, link: 'param6'},\r\n * }\r\n * 'link' will assign the same generated value to one other param.\r\n */ function $843aec23ddc05ff2$var$randomizeParams(params1) {\n    if (params1.randomized.hasOwnProperty(\"active\") && !params1.randomized.active) return;\n    for (const [param, opts] of Object.entries(params1.randomized)){\n        let rVal;\n        if (Array.isArray(opts) || opts.hasOwnProperty(\"list\")) {\n            const list = opts.list ?? opts;\n            rVal = list[Math.floor(Math.random() * list.length)];\n        } else {\n            const min = Math.min(opts.val1, opts.val2);\n            const max = Math.max(opts.val1, opts.val2);\n            const step = opts.step ?? 1;\n            const stepsInRange = (max - min + (Number.isInteger(step) ? 1 : 0)) / step;\n            rVal = Math.floor(Math.random() * stepsInRange) * step + min;\n        }\n        setProperty(params1, param, rVal);\n        if (opts.hasOwnProperty(\"link\")) setProperty(params1, opts.link, rVal);\n    }\n}\nfunction $843aec23ddc05ff2$export$45dd0c4934db71d0(target, ...sources) {\n    sources.forEach((source)=>{\n        Object.keys(source).forEach((key)=>{\n            const s_val = source[key];\n            const t_val = target[key];\n            if (s_val instanceof Array) target[key] = [\n                ...s_val\n            ];\n            else target[key] = t_val && s_val && typeof t_val === \"object\" && typeof s_val === \"object\" ? $843aec23ddc05ff2$export$45dd0c4934db71d0(t_val, s_val) : s_val;\n        });\n    });\n    return target;\n}\nfunction $843aec23ddc05ff2$export$4367b12d875874d3() {\n    let _cachedContainer = new PIXI.Container();\n    async function addFiltersOnSelected(paramsArray, replace = false) {\n        if (!Array.isArray(paramsArray)) paramsArray = getPreset(paramsArray);\n        const controlled = $843aec23ddc05ff2$export$674b9bd489502778();\n        if (!(controlled == null) && controlled.length > 0) for (const placeable of controlled)await addFilters(placeable, paramsArray, replace);\n    }\n    async function addUpdateFiltersOnSelected(paramsArray) {\n        if (!Array.isArray(paramsArray)) paramsArray = getPreset(paramsArray);\n        const controlled = $843aec23ddc05ff2$export$674b9bd489502778();\n        if (!(controlled == null) && controlled.length > 0) for (const placeable of controlled)await addUpdateFilters(placeable, paramsArray);\n    }\n    async function addUpdateFiltersOnTargeted(paramsArray) {\n        if (!Array.isArray(paramsArray)) paramsArray = getPreset(paramsArray);\n        const targeted = $843aec23ddc05ff2$export$c0c03469ba031852();\n        if (!(targeted == null) && targeted.length > 0) for (const token of targeted)await addUpdateFilters(token, paramsArray);\n    }\n    async function addFiltersOnTargeted(paramsArray, replace = false) {\n        if (!Array.isArray(paramsArray)) paramsArray = getPreset(paramsArray);\n        const targeted = $843aec23ddc05ff2$export$c0c03469ba031852();\n        if (!(targeted == null) && targeted.length > 0) for (const token of targeted)await addFilters(token, paramsArray, replace);\n    }\n    async function addFilters(placeable, paramsArray, replace = false) {\n        if (!Array.isArray(paramsArray)) paramsArray = getPreset(paramsArray);\n        if (!(paramsArray instanceof Array && paramsArray.length > 0) || placeable == null) return;\n        let actualFlags = replace ? null : placeable.document.getFlag(\"tokenmagic\", \"filters\");\n        let newFlags = [];\n        for (const params1 of paramsArray){\n            if (!params1.hasOwnProperty(\"filterType\") || !$843aec23ddc05ff2$export$c67e46de1ec7dfa6.hasOwnProperty(params1.filterType)) // one invalid ? all rejected.\n            return;\n            if (!params1.hasOwnProperty(\"rank\")) params1.rank = placeable._TMFXgetMaxFilterRank();\n            if (!params1.hasOwnProperty(\"filterId\") || params1.filterId == null) params1.filterId = randomID();\n            if (!params1.hasOwnProperty(\"enabled\") || !(typeof params1.enabled === \"boolean\")) params1.enabled = true;\n            if (params1.hasOwnProperty(\"randomized\")) $843aec23ddc05ff2$var$randomizeParams(params1);\n            params1.placeableId = placeable.id;\n            params1.filterInternalId = randomID();\n            params1.filterOwner = game.data.userId;\n            params1.placeableType = placeable._TMFXgetPlaceableType();\n            params1.updateId = randomID();\n            newFlags.push({\n                tmFilters: {\n                    tmFilterId: params1.filterId,\n                    tmFilterInternalId: params1.filterInternalId,\n                    tmFilterType: params1.filterType,\n                    tmFilterOwner: params1.filterOwner,\n                    tmParams: params1\n                }\n            });\n        }\n        if (!(actualFlags == null)) newFlags = actualFlags.concat(newFlags);\n        await placeable._TMFXsetFlag(newFlags);\n    }\n    async function addUpdateFilters(placeable, paramsArray) {\n        if (!paramsArray instanceof Array || paramsArray.length < 1) return;\n        let flags = placeable.document.getFlag(\"tokenmagic\", \"filters\");\n        let workingFlags = [];\n        if (flags) flags.forEach((flag)=>{\n            workingFlags.push(duplicate(flag));\n        });\n        let newFlags = [];\n        let updateParams;\n        for (const params1 of paramsArray){\n            updateParams = false;\n            params1.updateId = randomID();\n            if (params1.hasOwnProperty(\"randomized\")) $843aec23ddc05ff2$var$randomizeParams(params1);\n            workingFlags.forEach((flag)=>{\n                if (flag.tmFilters.tmFilterId === params1.filterId && flag.tmFilters.tmFilterType === params1.filterType) {\n                    if (flag.tmFilters.hasOwnProperty(\"tmParams\")) {\n                        $843aec23ddc05ff2$export$45dd0c4934db71d0(flag.tmFilters.tmParams, params1);\n                        updateParams = true;\n                    }\n                }\n            });\n            if (!updateParams) {\n                if (!params1.hasOwnProperty(\"filterType\") || !$843aec23ddc05ff2$export$c67e46de1ec7dfa6.hasOwnProperty(params1.filterType)) // one invalid ? all rejected (even the update)\n                return;\n                if (!params1.hasOwnProperty(\"rank\")) params1.rank = placeable._TMFXgetMaxFilterRank();\n                if (!params1.hasOwnProperty(\"filterId\") || params1.filterId == null) params1.filterId = randomID();\n                if (!params1.hasOwnProperty(\"enabled\") || !(typeof params1.enabled === \"boolean\")) params1.enabled = true;\n                params1.placeableId = placeable.id;\n                params1.filterInternalId = randomID();\n                params1.filterOwner = game.data.userId;\n                params1.placeableType = placeable._TMFXgetPlaceableType();\n                newFlags.push({\n                    tmFilters: {\n                        tmFilterId: params1.filterId,\n                        tmFilterInternalId: params1.filterInternalId,\n                        tmFilterType: params1.filterType,\n                        tmFilterOwner: params1.filterOwner,\n                        tmParams: params1\n                    }\n                });\n            }\n        }\n        if (newFlags.length > 0) workingFlags = newFlags.concat(workingFlags);\n        await placeable._TMFXsetFlag(workingFlags);\n    }\n    async function updateFilters(paramsArray) {\n        if (params == null || !params.hasOwnProperty(\"filterId\")) return;\n        let placeableIdSet = new Set();\n        let animations = (0, $b144ce1eeabb28ed$export$b229f242afc35ae9).getAnimeMap();\n        if (animations.size <= 0) return;\n        animations.forEach((anime, id)=>{\n            let filterIdMatch = (params1)=>params1.filterId === anime.puppet.filterId;\n            if (paramsArray.some(filterIdMatch)) placeableIdSet.add(anime.puppet.placeableId);\n        });\n        if (placeableIdSet.size <= 0) return;\n        for (const placeableId of placeableIdSet){\n            // we must browse the collection of placeables whatever their types\n            // we have just a filterId.\n            let placeable = $843aec23ddc05ff2$export$5008448b4c27fa2b(placeableId, $843aec23ddc05ff2$export$f2f6f02affe07ab5.TOKEN);\n            if (placeable == null) placeable = $843aec23ddc05ff2$export$5008448b4c27fa2b(placeableId, $843aec23ddc05ff2$export$f2f6f02affe07ab5.TEMPLATE);\n            if (placeable == null) placeable = $843aec23ddc05ff2$export$5008448b4c27fa2b(placeableId, $843aec23ddc05ff2$export$f2f6f02affe07ab5.TILE);\n            if (placeable == null) placeable = $843aec23ddc05ff2$export$5008448b4c27fa2b(placeableId, $843aec23ddc05ff2$export$f2f6f02affe07ab5.DRAWING);\n            if (!(placeable == null) && placeable instanceof PlaceableObject) await updateFiltersByPlaceable(placeable, paramsArray);\n        }\n    }\n    async function updateFiltersOnSelected(paramsArray) {\n        let placeables = $843aec23ddc05ff2$export$674b9bd489502778();\n        if (placeables == null || placeables.length < 1) return;\n        if (typeof paramsArray === \"string\") paramsArray = getPreset(paramsArray);\n        if (!(paramsArray instanceof Array) || paramsArray.length < 1) return;\n        for (const placeable of placeables)await updateFiltersByPlaceable(placeable, paramsArray);\n    }\n    async function updateFiltersOnTargeted(paramsArray) {\n        let targeted = $843aec23ddc05ff2$export$c0c03469ba031852();\n        if (targeted == null || targeted.length < 1) return;\n        if (typeof paramsArray === \"string\") paramsArray = getPreset(paramsArray);\n        if (!(paramsArray instanceof Array) || paramsArray.length < 1) return;\n        for (const token of targeted)await updateFiltersByPlaceable(token, paramsArray);\n    }\n    async function updateFiltersByPlaceable(placeable, paramsArray) {\n        if (!(paramsArray instanceof Array) || paramsArray.length < 1) return;\n        let flags = placeable.document.getFlag(\"tokenmagic\", \"filters\");\n        if (flags == null || !(flags instanceof Array) || flags.length < 1) return;\n         // nothing to update...\n        let workingFlags = [];\n        flags.forEach((flag)=>{\n            workingFlags.push(duplicate(flag));\n        });\n        for (const params1 of paramsArray){\n            params1.updateId = randomID();\n            if (params1.hasOwnProperty(\"randomized\")) $843aec23ddc05ff2$var$randomizeParams(params1);\n            workingFlags.forEach((flag)=>{\n                if (flag.tmFilters.tmFilterId === params1.filterId && flag.tmFilters.tmFilterType === params1.filterType) {\n                    if (flag.tmFilters.hasOwnProperty(\"tmParams\")) $843aec23ddc05ff2$export$45dd0c4934db71d0(flag.tmFilters.tmParams, params1);\n                }\n            });\n        }\n        await placeable._TMFXsetFlag(workingFlags);\n    }\n    // Deleting filters on targeted tokens\n    async function deleteFiltersOnTargeted(filterId = null) {\n        let targeted = $843aec23ddc05ff2$export$c0c03469ba031852();\n        if (!(targeted == null) && targeted.length > 0) for (const token of targeted)await deleteFilters(token, filterId);\n    }\n    // Deleting filters on selected placeable(s)\n    async function deleteFiltersOnSelected(filterId = null) {\n        let placeables = $843aec23ddc05ff2$export$674b9bd489502778();\n        if (!(placeables == null) && placeables.length > 0) for (const placeable of placeables)await deleteFilters(placeable, filterId);\n    }\n    // Deleting all filters on a placeable in parameter\n    async function deleteFilters(placeable, filterId = null) {\n        if (placeable == null) return;\n        if (filterId == null) {\n            await placeable._TMFXunsetFlag();\n            await placeable._TMFXunsetAnimeFlag();\n        } else if (typeof filterId === \"string\") {\n            let flags = placeable.document.getFlag(\"tokenmagic\", \"filters\");\n            if (flags == null || !(flags instanceof Array) || flags.length < 1) return;\n             // nothing to delete...\n            let workingFlags = [];\n            flags.forEach((flag)=>{\n                if (flag.tmFilters.tmFilterId !== filterId) workingFlags.push(duplicate(flag));\n            });\n            if (workingFlags.length > 0) await placeable._TMFXsetFlag(workingFlags);\n            else await placeable._TMFXunsetFlag();\n            flags = placeable.document.getFlag(\"tokenmagic\", \"animeInfo\");\n            if (flags == null || !(flags instanceof Array) || flags.length < 1) return;\n             // nothing to delete...\n            workingFlags = [];\n            flags.forEach((flag)=>{\n                if (flag.tmFilterId !== filterId) workingFlags.push(duplicate(flag));\n            });\n            if (workingFlags.length > 0) await placeable._TMFXsetAnimeFlag(workingFlags);\n            else await placeable._TMFXunsetAnimeFlag();\n        }\n    }\n    function hasFilterType(placeable, filterType) {\n        if (placeable == null || filterType == null || !(placeable instanceof PlaceableObject)) return null;\n        let flags = placeable.document.getFlag(\"tokenmagic\", \"filters\");\n        if (flags == null || !(flags instanceof Array) || flags.length < 1) return false;\n        const found = flags.find((flag)=>flag.tmFilters.tmFilterType === filterType);\n        if (found === undefined) return false;\n        return true;\n    }\n    function isApplicableUser(tmParams) {\n        const hasUser = (arr)=>{\n            return arr.includes(game.user.name) || arr.includes(game.user.id);\n        };\n        if (tmParams.users?.include?.length && !hasUser(tmParams.users.include) || tmParams.users?.exclude?.length && hasUser(tmParams.users?.exclude)) return false;\n        return true;\n    }\n    function hasFilterId(placeable, filterId) {\n        if (placeable == null || !(placeable instanceof PlaceableObject)) return null;\n        let flags = placeable.document.getFlag(\"tokenmagic\", \"filters\");\n        return _checkFilterId(placeable, filterId, flags);\n    }\n    function _checkFilterId(placeable, filterId, flags) {\n        if (placeable == null || filterId == null || !(placeable instanceof PlaceableObject)) return null;\n        if (flags == null || !(flags instanceof Array) || flags.length < 1) return false;\n        const found = flags.find((flag)=>flag.tmFilters.tmFilterId === filterId);\n        if (found === undefined) return false;\n        return true;\n    }\n    function setFilter(placeable, filter) {\n        placeable._TMFXsetRawFilters(filter);\n    }\n    function _loadPersistedValues(params1, animeInfos) {\n        if (!params1.hasOwnProperty(\"animated\")) return;\n        if (!animeInfos || animeInfos.length <= 0) return;\n        for (const effect of Object.keys(params1.animated)){\n            for (const animeInfo of animeInfos.values())if (animeInfo.tmFilterId === params1.filterId && animeInfo.tmFilterInternalId === params1.filterInternalId && animeInfo.tmFilterEffect === effect) {\n                params1.animated[effect].active = false;\n                params1[effect] = animeInfo.tmFilterEffectValue;\n                // special case for halfCosOscillation\n                if (params1.animated[effect].animType === \"halfCosOscillation\") {\n                    if (params1.animated[effect].val1 !== animeInfo.tmFilterEffectValue) {\n                        params1.animated[effect].val2 = params1.animated[effect].val1;\n                        params1.animated[effect].val1 = animeInfo.tmFilterEffectValue;\n                    }\n                }\n            }\n        }\n    }\n    function _assignFilters(placeable, filters, bulkLoading = false) {\n        if (filters == null || placeable == null) return;\n        // Assign all filters to the placeable\n        let animeInfos = placeable.document.getFlag(\"tokenmagic\", \"animeInfo\");\n        for (const filterInfo of filters){\n            // if bulkloading is on, we update with terminal value if it exists\n            if (bulkLoading) {\n                let params1 = filterInfo.tmFilters.tmParams;\n                _loadPersistedValues(params1, animeInfos);\n            }\n            _assignFilter(placeable, filterInfo);\n        }\n    }\n    function _assignFilter(placeable, filterInfo) {\n        if (filterInfo == null) return;\n        // Do not assign the filter if it has been explicitly set as not applicable to the current user\n        if (!isApplicableUser(filterInfo.tmFilters.tmParams)) return;\n        let workingFilterInfo = duplicate(filterInfo);\n        workingFilterInfo.tmFilters.tmParams.placeableId = placeable.id;\n        workingFilterInfo.tmFilters.tmParams.placeableType = placeable._TMFXgetPlaceableType();\n        let filter = new $843aec23ddc05ff2$export$c67e46de1ec7dfa6[workingFilterInfo.tmFilters.tmFilterType](workingFilterInfo.tmFilters.tmParams);\n        setFilter(placeable, filter);\n    }\n    function _loadFilters(placeables, bulkLoading = true) {\n        if (!(placeables == null)) placeables.slice().reverse().forEach((placeable)=>{\n            _singleLoadFilters(placeable, bulkLoading);\n        });\n    }\n    function _singleLoadFilters(placeable, bulkLoading = false) {\n        let placeableType = placeable._TMFXgetPlaceableType();\n        if (placeableType === $843aec23ddc05ff2$export$f2f6f02affe07ab5.TEMPLATE) {\n            let updateData = placeable.document.getFlag(\"tokenmagic\", \"templateData\");\n            if (!(updateData == null)) {\n                placeable.document.tmfxTextureAlpha = placeable._TMFXgetSprite().alpha = updateData.opacity;\n                placeable.document.tmfxTint = updateData.tint;\n            }\n        }\n        let filters = placeable.document.getFlag(\"tokenmagic\", \"filters\");\n        if (!(filters == null)) {\n            if (placeableType === $843aec23ddc05ff2$export$f2f6f02affe07ab5.TEMPLATE) // get the first filterId to assign tmfxPreset\n            placeable.document.tmfxPreset = filters[0].tmFilters.tmFilterId;\n            _assignFilters(placeable, filters, bulkLoading);\n        }\n        placeable.loadingRequest = false;\n    }\n    function _fxPseudoEqual(flagObject, filterObject) {\n        function isObject(object) {\n            return object != null && typeof object === \"object\";\n        }\n        const flagKeys = Object.keys(flagObject);\n        for (const flagKey of flagKeys){\n            let flagValue = flagObject[flagKey];\n            const filterValue = filterObject[flagKey];\n            const areObjects = isObject(flagValue) && isObject(filterValue);\n            if (areObjects && !_fxPseudoEqual(flagValue, filterValue)) return false;\n            // handling the Infinity exception with loops... thanks to JSON serialization...\n            if (!areObjects && flagKey === \"loops\" && flagValue === null) flagValue = Infinity; // not nice, but works ! :-)=\n            if (!areObjects && flagValue !== filterValue) return false;\n        }\n        return true;\n    }\n    function _updateTemplateData(data, options, placeableType) {\n        if (!options.hasOwnProperty(\"flags\") || !options.flags.hasOwnProperty(\"tokenmagic\")) return;\n        if (data == null || !data.hasOwnProperty(\"_id\")) return;\n        let placeable = $843aec23ddc05ff2$export$5008448b4c27fa2b(data._id, placeableType);\n        if (placeable == null) return;\n        let updateData = placeable.document.getFlag(\"tokenmagic\", \"templateData\");\n        if (!(updateData == null)) placeable._TMFXgetSprite().alpha = updateData.opacity;\n    }\n    function _updateFilters(data, options, placeableType) {\n        if (!(options.hasOwnProperty(\"flags\") && options.flags.hasOwnProperty(\"tokenmagic\") && (options.flags.tokenmagic.hasOwnProperty(\"filters\") || options.flags.tokenmagic.hasOwnProperty(\"-=filters\")))) return;\n        if (data == null || !data.hasOwnProperty(\"_id\")) return;\n        let placeable = $843aec23ddc05ff2$export$5008448b4c27fa2b(data._id, placeableType);\n        if (placeable == null) return;\n        // Shortcut when all filters are deleted\n        if (options.flags.tokenmagic.hasOwnProperty(\"-=filters\")) {\n            (0, $b144ce1eeabb28ed$export$b229f242afc35ae9).removeAnimation(data._id); // removing animations on this placeable\n            this._clearImgFiltersByPlaceable(placeable); // clearing the filters (owned by tokenmagic)\n            return;\n        }\n        let filters = placeable.document.getFlag(\"tokenmagic\", \"filters\");\n        if (filters == null) return;\n        // CROSS-RESEARCH between the anime map and tokenmagic flags to add, delete or update filters on this placeable\n        // we begin by detecting deleted filters\n        for (let anime of (0, $b144ce1eeabb28ed$export$b229f242afc35ae9).getAnimeMap().values())// we test all the animes that are supposed to be on the placeable\n        if (anime.puppet.placeableId === placeable.id) {\n            // is the animation present in the tokenmagic flags for this placeable ?\n            // and is it applicable to the current user?\n            let foundFilter = false;\n            filters.forEach((filterFlag)=>{\n                if (anime.puppet.filterId === filterFlag.tmFilters.tmFilterId && anime.puppet.filterInternalId === filterFlag.tmFilters.tmFilterInternalId && anime.puppet.placeableId === filterFlag.tmFilters.tmParams.placeableId && isApplicableUser(filterFlag.tmFilters.tmParams)) // we find it !\n                foundFilter = true;\n            });\n            // Not found, the animation is removed from the AnimeMap as well as the filter on the placeable\n            if (!foundFilter) {\n                (0, $b144ce1eeabb28ed$export$b229f242afc35ae9).removeAnimationByFilterId(data._id, anime.puppet.filterId);\n                this._clearImgFiltersByPlaceable(placeable, anime.puppet.filterId);\n            }\n        }\n        // we test each tokenmagic filter flag in the placeable\n        filters.forEach((filterFlag)=>{\n            if (filterFlag.tmFilters.hasOwnProperty(\"tmParams\")) {\n                // we get the puppets in anime corresponding to this placeable\n                let puppets = (0, $b144ce1eeabb28ed$export$b229f242afc35ae9).getPuppetsByParams(filterFlag.tmFilters.tmParams);\n                if (puppets.length > 0) // we found corresponding filters\n                for (const puppet of puppets){\n                    // we update if needed\n                    if (!_fxPseudoEqual(filterFlag.tmFilters.tmParams, puppet)) {\n                        if (!puppet.hasOwnProperty(\"updateId\") || puppet.hasOwnProperty(\"updateId\") && puppet.updateId !== filterFlag.tmFilters.tmParams.updateId) {\n                            puppet.setTMParams(duplicate(filterFlag.tmFilters.tmParams));\n                            puppet.normalizeTMParams();\n                        }\n                    }\n                }\n                else // this is a new filter, we assign it to the placeable\n                _assignFilter(placeable, filterFlag);\n            }\n        });\n    }\n    function _clearImgFiltersByPlaceable(placeable, filterId = null) {\n        if (placeable == null) return;\n        let filterById = filterId != null && typeof filterId === \"string\";\n        function destroyClearedFilters(theFilters) {\n            if (theFilters instanceof Array) {\n                let tmFilters = theFilters.filter((filter)=>filterById ? filter.hasOwnProperty(\"filterId\") && filter.filterId === filterId : filter.hasOwnProperty(\"filterId\"));\n                for (const filter of tmFilters){\n                    filter.enabled = false;\n                    filter.destroy();\n                }\n            }\n        }\n        function filterTheFiltering(theFilters) {\n            if (theFilters instanceof Array) {\n                let tmFilters = theFilters.filter((filter)=>filterById ? !(filter.hasOwnProperty(\"filterId\") && filter.filterId === filterId) : !filter.hasOwnProperty(\"filterId\"));\n                return tmFilters.length === 0 ? null : tmFilters;\n            }\n            return theFilters;\n        }\n        let sprite = placeable._TMFXgetSprite();\n        if (sprite != null) {\n            destroyClearedFilters(sprite.filters);\n            sprite.filters = filterTheFiltering(sprite.filters);\n        }\n    }\n    async function _importPresetContent(content, options = {}) {\n        // In internal, we can force overwrite\n        if (!options.hasOwnProperty(\"overwrite\")) options.overwrite = game.settings.get(\"tokenmagic\", \"importOverwrite\");\n        ///////////////////////////////////////////////\n        // Checking the imported object format\n        $843aec23ddc05ff2$export$bef1f36f5486a6a3(\"import -> checking import file format...\");\n        if (!(content instanceof Array) || content.length < 1) {\n            $843aec23ddc05ff2$export$a3bc9b8ed74fc(\"import -> file format check KO !\");\n            $843aec23ddc05ff2$export$a3bc9b8ed74fc($843aec23ddc05ff2$var$i18n(\"TMFX.preset.import.format.failure\"));\n            return false;\n        }\n        $843aec23ddc05ff2$export$bef1f36f5486a6a3(\"import -> file format check OK !\");\n        // check object format end\n        /////////////////////////////////////////////////\n        let check = true;\n        ///////////////////////////////////////////////\n        // Checking the imported content\n        $843aec23ddc05ff2$export$bef1f36f5486a6a3(\"import -> checking import file content...\");\n        for (const element of content)if (element.hasOwnProperty(\"name\") && typeof element.name === \"string\" && element.hasOwnProperty(\"params\") && element.params instanceof Array) {\n            for (const effect of element.params)if (!(effect.hasOwnProperty(\"filterType\") && $843aec23ddc05ff2$export$c67e46de1ec7dfa6.hasOwnProperty(effect.filterType))) {\n                check = false;\n                break;\n            }\n            if (!check) break;\n        } else {\n            check = false;\n            break;\n        }\n        if (!check) {\n            $843aec23ddc05ff2$export$a3bc9b8ed74fc(\"import -> file content check KO !\");\n            $843aec23ddc05ff2$export$a3bc9b8ed74fc($843aec23ddc05ff2$var$i18n(\"TMFX.preset.import.format.failure\"));\n            return false;\n        }\n        $843aec23ddc05ff2$export$bef1f36f5486a6a3(\"import -> file content check OK !\");\n        // check content end\n        /////////////////////////////////////////////////\n        // The preset libray must be replaced ?\n        if (options.hasOwnProperty(\"replaceLibrary\") && options.replaceLibrary) {\n            await game.settings.set(\"tokenmagic\", \"presets\", content);\n            $843aec23ddc05ff2$export$bef1f36f5486a6a3(\"import -> preset library replaced\");\n            $843aec23ddc05ff2$export$bef1f36f5486a6a3($843aec23ddc05ff2$var$i18n(\"TMFX.preset.import.success\"));\n            return true;\n        }\n        let pst = game.settings.get(\"tokenmagic\", \"presets\");\n        let it = 0;\n        for (const element of content){\n            const preset = pst.find((el)=>el.name === element.name);\n            if (preset == null) {\n                $843aec23ddc05ff2$export$bef1f36f5486a6a3(\"import -> add: \" + element.name);\n                pst.push(element);\n                it++;\n            } else if (options.hasOwnProperty(\"overwrite\") && options.overwrite) {\n                const index = pst.indexOf(preset);\n                if (index > -1) {\n                    $843aec23ddc05ff2$export$bef1f36f5486a6a3(\"import -> overwrite: \" + element.name);\n                    pst[index] = element;\n                    it++;\n                }\n            } else $843aec23ddc05ff2$export$c106dd0671a0fc2d(\"import -> ignored: \" + element.name + \" -> already exists\");\n        }\n        await game.settings.set(\"tokenmagic\", \"presets\", pst);\n        $843aec23ddc05ff2$export$bef1f36f5486a6a3(\"import -> \" + it + \" preset(s) added to the library\");\n        $843aec23ddc05ff2$export$bef1f36f5486a6a3($843aec23ddc05ff2$var$i18n(\"TMFX.preset.import.success\"));\n        return true;\n    }\n    async function _importTemplateSettingsContent(content, options = {}) {\n        ///////////////////////////////////////////////\n        // Checking the imported object format\n        $843aec23ddc05ff2$export$bef1f36f5486a6a3(\"import -> checking import file format...\");\n        if (!(content instanceof Object)) {\n            $843aec23ddc05ff2$export$a3bc9b8ed74fc(\"import -> file format check KO !\");\n            $843aec23ddc05ff2$export$a3bc9b8ed74fc($843aec23ddc05ff2$var$i18n(\"TMFX.preset.import.format.failure\"));\n            return false;\n        }\n        $843aec23ddc05ff2$export$bef1f36f5486a6a3(\"import -> file format check OK !\");\n        // check object format end\n        /////////////////////////////////////////////////\n        await game.settings.set(\"tokenmagic\", \"autoTemplateSettings\", content);\n        $843aec23ddc05ff2$export$bef1f36f5486a6a3(\"import -> automatic template settings replaced\");\n        $843aec23ddc05ff2$export$bef1f36f5486a6a3($843aec23ddc05ff2$var$i18n(\"TMFX.preset.import.success\"));\n        return true;\n    }\n    async function resetPresetLibrary() {\n        if (!game.user.isGM) return;\n        if (confirm($843aec23ddc05ff2$var$i18n(\"TMFX.preset.reset.message\"))) try {\n            await game.settings.set(\"tokenmagic\", \"presets\", (0, $855c97940ea7d48a$export$9381e89181e5b461));\n            ui.notifications.info($843aec23ddc05ff2$var$i18n(\"TMFX.preset.reset.success\"));\n        } catch (e) {\n            $843aec23ddc05ff2$export$a3bc9b8ed74fc(e.message);\n        }\n    }\n    async function importPresetLibraryFromURL(url, options = {}) {\n        try {\n            $.getJSON(url, async function(content) {\n                return await _importPresetContent(content, options);\n            });\n        } catch (e) {\n            $843aec23ddc05ff2$export$a3bc9b8ed74fc(e.message);\n            $843aec23ddc05ff2$export$a3bc9b8ed74fc($843aec23ddc05ff2$var$i18n(\"TMFX.preset.import.failure\"));\n            return false;\n        }\n    }\n    async function importPresetLibraryFromPath(path, options = {}) {\n        try {\n            const response = await fetch(path);\n            const content = await response.json();\n            return await _importPresetContent(content, options);\n        } catch (e) {\n            $843aec23ddc05ff2$export$a3bc9b8ed74fc(e.message);\n            $843aec23ddc05ff2$export$a3bc9b8ed74fc($843aec23ddc05ff2$var$i18n(\"TMFX.preset.import.failure\"));\n            return false;\n        }\n    }\n    async function importTemplateSettingsFromPath(path, options = {}) {\n        try {\n            const response = await fetch(path);\n            const content = await response.json();\n            return await _importTemplateSettingsContent(content, options);\n        } catch (e) {\n            $843aec23ddc05ff2$export$a3bc9b8ed74fc(e.message);\n            $843aec23ddc05ff2$export$a3bc9b8ed74fc($843aec23ddc05ff2$var$i18n(\"TMFX.preset.import.failure\"));\n            return false;\n        }\n    }\n    async function importPresetLibrary() {\n        const path = \"modules/tokenmagic/import\";\n        new FilePicker({\n            type: \"json\",\n            current: path,\n            callback: importPresetLibraryFromPath\n        }).browse();\n    }\n    function exportPresetLibrary(exportName = \"tmfx-presets\") {\n        let pst = game.settings.get(\"tokenmagic\", \"presets\");\n        if (pst == null || typeof pst !== \"object\") return false;\n        $843aec23ddc05ff2$var$exportObjectAsJson(pst, exportName);\n    }\n    async function importTemplateSettings() {\n        const path = \"modules/tokenmagic/import\";\n        new FilePicker({\n            type: \"json\",\n            current: path,\n            callback: importTemplateSettingsFromPath\n        }).browse();\n    }\n    function exportTemplateSettings(exportName = \"tmfx-template-settings\") {\n        let pst = game.settings.get(\"tokenmagic\", \"autoTemplateSettings\");\n        if (pst == null || typeof pst !== \"object\") return false;\n        $843aec23ddc05ff2$var$exportObjectAsJson(pst, exportName);\n    }\n    function getPresets(libraryName = (0, $855c97940ea7d48a$export$19612c32a2f7f4cd).MAIN) {\n        let pst = game.settings.get(\"tokenmagic\", \"presets\");\n        if (pst == null || typeof pst !== \"object\") return [];\n        return pst.filter((preset)=>preset.library === libraryName);\n    }\n    function _getPresetTemplateDefaultTexture(presetName, presetLibrary = (0, $855c97940ea7d48a$export$19612c32a2f7f4cd).TEMPLATE) {\n        let pst = game.settings.get(\"tokenmagic\", \"presets\");\n        const preset = pst.find((el)=>el[\"name\"] === presetName && el[\"library\"] === presetLibrary);\n        if (!(preset == null) && preset.hasOwnProperty(\"defaultTexture\")) return $843aec23ddc05ff2$export$3bebb302ab08af33(preset.defaultTexture);\n        else return null;\n    }\n    function getPreset(presetName) {\n        let pName = null, pLibrary = null;\n        let argIsObj = presetName instanceof Object;\n        const { name: name, library: library, ...adjustmentProp } = argIsObj ? presetName : {};\n        if (argIsObj) {\n            if (presetName.hasOwnProperty(\"name\")) pName = presetName.name;\n            if (presetName.hasOwnProperty(\"library\")) pLibrary = presetName.library;\n        } else pName = presetName;\n        if (pLibrary == null || typeof pLibrary !== \"string\") pLibrary = (0, $855c97940ea7d48a$export$19612c32a2f7f4cd).MAIN;\n        if (typeof pName !== \"string\") return undefined;\n        let pst = game.settings.get(\"tokenmagic\", \"presets\");\n        if (pst == null || typeof pst !== \"object\") return undefined;\n        const preset = pst.find((el)=>el[\"name\"] === pName && el[\"library\"] === pLibrary);\n        if (!(preset == null) && preset.hasOwnProperty(\"params\") && preset.params instanceof Array) {\n            for (const [filterProp, filterPropVal] of Object.entries(adjustmentProp)){\n                //log(`getPreset ${filterProp}: ${filterPropVal}`);\n                for (const param of preset.params)if (param.hasOwnProperty(filterProp)) param[filterProp] = filterPropVal;\n            }\n            return deepClone(preset.params);\n        }\n        return undefined;\n    }\n    async function deletePreset(presetName, silent = false) {\n        if (!game.user.isGM) {\n            if (!silent) ui.notifications.warn($843aec23ddc05ff2$var$i18n(\"TMFX.preset.delete.permission.failure\"));\n            return false;\n        }\n        let pName = null, pLibrary = null;\n        if (presetName instanceof Object) {\n            if (presetName.hasOwnProperty(\"name\")) pName = presetName.name;\n            if (presetName.hasOwnProperty(\"library\")) pLibrary = presetName.library;\n        } else pName = presetName;\n        if (pLibrary == null || typeof pLibrary !== \"string\") pLibrary = (0, $855c97940ea7d48a$export$19612c32a2f7f4cd).MAIN;\n        if (typeof pName !== \"string\") {\n            if (!silent) ui.notifications.error($843aec23ddc05ff2$var$i18n(\"TMFX.preset.delete.params.failure\"));\n            return false;\n        }\n        let pst = game.settings.get(\"tokenmagic\", \"presets\");\n        if (pst == null) {\n            if (!silent) ui.notifications.warn($843aec23ddc05ff2$var$i18n(\"TMFX.preset.delete.empty.failure\"));\n            return false;\n        }\n        let state = true;\n        const preset = pst.find((el)=>el[\"name\"] === pName && el[\"library\"] === pLibrary);\n        if (preset == null) {\n            if (!silent) ui.notifications.warn($843aec23ddc05ff2$var$i18n(\"TMFX.preset.delete.notfound.failure\"));\n            state = false;\n        } else {\n            const index = pst.indexOf(preset);\n            if (index > -1) {\n                pst.splice(index, 1);\n                try {\n                    await game.settings.set(\"tokenmagic\", \"presets\", pst);\n                    if (!silent) ui.notifications.info($843aec23ddc05ff2$var$i18n(\"TMFX.preset.delete.success\"));\n                } catch (e) {\n                    if (!silent) ui.notifications.error(e.message);\n                    console.error(e);\n                    state = false;\n                }\n            }\n        }\n        return state;\n    }\n    async function addPreset(presetName, params1, silent = false) {\n        if (!game.user.isGM) {\n            if (!silent) ui.notifications.warn($843aec23ddc05ff2$var$i18n(\"TMFX.preset.add.permission.failure\"));\n            return false;\n        }\n        let pName = null, pLibrary = null, pDefaultTexture = null;\n        if (presetName instanceof Object) {\n            if (presetName.hasOwnProperty(\"name\")) pName = presetName.name;\n            if (presetName.hasOwnProperty(\"library\")) pLibrary = presetName.library;\n            if (presetName.hasOwnProperty(\"defaultTexture\")) pDefaultTexture = $843aec23ddc05ff2$export$3bebb302ab08af33(presetName.defaultTexture);\n        } else pName = presetName;\n        if (pLibrary == null || typeof pLibrary !== \"string\") pLibrary = (0, $855c97940ea7d48a$export$19612c32a2f7f4cd).MAIN;\n        if (typeof pDefaultTexture !== \"string\") pDefaultTexture = null;\n        if (typeof pName !== \"string\" && !(params1 instanceof Array)) {\n            if (!silent) ui.notifications.error($843aec23ddc05ff2$var$i18n(\"TMFX.preset.add.params.failure\"));\n            return false;\n        }\n        for (const param of params1)param.filterId = pName;\n        let pst = game.settings.get(\"tokenmagic\", \"presets\");\n        let presetObject = {};\n        presetObject.name = pName;\n        presetObject.library = pLibrary;\n        presetObject.params = params1;\n        if (pDefaultTexture != null) presetObject.defaultTexture = pDefaultTexture;\n        let state = true;\n        if (pst == null) pst = [\n            presetObject\n        ];\n        else {\n            const preset = pst.find((el)=>el[\"name\"] === pName && el[\"library\"] === pLibrary);\n            if (preset == null) pst.push(presetObject);\n            else {\n                if (!silent) ui.notifications.warn($843aec23ddc05ff2$var$i18n(\"TMFX.preset.add.duplicate.failure\"));\n                state = false;\n            }\n        }\n        if (state) try {\n            await game.settings.set(\"tokenmagic\", \"presets\", pst);\n            if (!silent) ui.notifications.info($843aec23ddc05ff2$var$i18n(\"TMFX.preset.add.success\"));\n        } catch (e) {\n            if (!silent) ui.notifications.error(e.message);\n            console.error(e);\n            state = false;\n        }\n        return state;\n    }\n    return {\n        addFilters: addFilters,\n        addFiltersOnSelected: addFiltersOnSelected,\n        addFiltersOnTargeted: addFiltersOnTargeted,\n        addUpdateFilters: addUpdateFilters,\n        addUpdateFiltersOnSelected: addUpdateFiltersOnSelected,\n        addUpdateFiltersOnTargeted: addUpdateFiltersOnTargeted,\n        deleteFilters: deleteFilters,\n        deleteFiltersOnSelected: deleteFiltersOnSelected,\n        deleteFiltersOnTargeted: deleteFiltersOnTargeted,\n        updateFilters: updateFilters,\n        updateFiltersOnSelected: updateFiltersOnSelected,\n        updateFiltersOnTargeted: updateFiltersOnTargeted,\n        updateFiltersByPlaceable: updateFiltersByPlaceable,\n        hasFilterType: hasFilterType,\n        hasFilterId: hasFilterId,\n        importTemplateSettings: importTemplateSettings,\n        importTemplateSettingsFromPath: importTemplateSettingsFromPath,\n        exportTemplateSettings: exportTemplateSettings,\n        exportPresetLibrary: exportPresetLibrary,\n        importPresetLibrary: importPresetLibrary,\n        importPresetLibraryFromURL: importPresetLibraryFromURL,\n        importPresetLibraryFromPath: importPresetLibraryFromPath,\n        resetPresetLibrary: resetPresetLibrary,\n        getPresets: getPresets,\n        getPreset: getPreset,\n        addPreset: addPreset,\n        deletePreset: deletePreset,\n        getControlledPlaceables: $843aec23ddc05ff2$export$674b9bd489502778,\n        getTargetedTokens: $843aec23ddc05ff2$export$c0c03469ba031852,\n        getPlaceableById: $843aec23ddc05ff2$export$5008448b4c27fa2b,\n        _assignFilters: _assignFilters,\n        _loadFilters: _loadFilters,\n        _clearImgFiltersByPlaceable: _clearImgFiltersByPlaceable,\n        _getAnimeMap: (0, $b144ce1eeabb28ed$export$b229f242afc35ae9).getAnimeMap,\n        _updateFilters: _updateFilters,\n        _updateTemplateData: _updateTemplateData,\n        _singleLoadFilters: _singleLoadFilters,\n        _cachedContainer: _cachedContainer,\n        _checkFilterId: _checkFilterId,\n        _getPresetTemplateDefaultTexture: _getPresetTemplateDefaultTexture\n    };\n}\nconst $843aec23ddc05ff2$export$480e4c19201e4e74 = $843aec23ddc05ff2$export$4367b12d875874d3();\nasync function $843aec23ddc05ff2$var$compilingShaders() {\n    // Caching filters to prevent freezing on first-time loading (shader compilation time)\n    // https://www.html5gamedevs.com/topic/43652-shader-compile-performance/\n    let params1 = {\n        enabled: true,\n        dummy: true\n    };\n    $843aec23ddc05ff2$export$480e4c19201e4e74._cachedContainer.filters = [];\n    const filterTypes = Object.keys($843aec23ddc05ff2$export$c67e46de1ec7dfa6);\n    for (const filterType of filterTypes){\n        params1.filterType = filterType;\n        $843aec23ddc05ff2$export$bef1f36f5486a6a3(`Caching ${filterType}`);\n        $843aec23ddc05ff2$export$480e4c19201e4e74._cachedContainer.filters.push(new $843aec23ddc05ff2$export$c67e46de1ec7dfa6[filterType](params1));\n    }\n    $843aec23ddc05ff2$export$bef1f36f5486a6a3(\"Compiling shaders...\");\n    let tmpRenderTexture = new PIXI.RenderTexture.create({\n        width: 4,\n        height: 4\n    });\n    // A call to render triggers the compilation of all the shaders bound to the filters.\n    canvas.app.renderer.render($843aec23ddc05ff2$export$480e4c19201e4e74._cachedContainer, {\n        renderTexture: tmpRenderTexture\n    });\n    $843aec23ddc05ff2$export$bef1f36f5486a6a3(\"Shaders compiled for the GPU and ready!\");\n}\nfunction $843aec23ddc05ff2$var$initSocketListener() {\n    // Activate the listener only for the One\n    const theOne = game.users.find((user)=>user.isGM && user.active);\n    if (theOne && game.user !== theOne) return;\n    // Listener the listening\n    game.socket.on($843aec23ddc05ff2$var$moduleTM, async (data)=>{\n        if (data == null || !data.hasOwnProperty(\"tmAction\")) return;\n        async function updateFlags(targetFlag) {\n            // getting the scene coming from the socket\n            let scene = game.scenes.get(data.tmViewedScene);\n            if (scene == null) return;\n            // preparing flag data (with -= if the data is null)\n            let updateData;\n            if (data.tmFlag == null) updateData = {\n                [`flags.tokenmagic.-=${targetFlag}`]: null\n            };\n            else updateData = {\n                [`flags.tokenmagic.${targetFlag}`]: data.tmFlag\n            };\n            updateData[\"_id\"] = data.tmPlaceableId;\n            // updating the placeable in the scene\n            await scene.updateEmbeddedDocuments(data.tmPlaceableType, [\n                updateData\n            ]);\n        }\n        switch(data.tmAction){\n            case $843aec23ddc05ff2$export$157d7b8c087faa7b.SET_FLAG:\n                await updateFlags(`filters`);\n                break;\n            case $843aec23ddc05ff2$export$157d7b8c087faa7b.SET_ANIME_FLAG:\n                await updateFlags(`animeInfo`);\n                break;\n        }\n    });\n}\nasync function $843aec23ddc05ff2$var$requestLoadFilters(placeable, startTimeout = 0) {\n    let reqTimer;\n    placeable.loadingRequest = true;\n    function launchRequest(placeable) {\n        reqTimer = setTimeout(()=>{\n            if (placeable == null) return;\n            let check = placeable._TMFXcheckSprite();\n            if (check == null) {\n                placeable.loadingRequest = false;\n                return;\n            } else if (check) $843aec23ddc05ff2$export$480e4c19201e4e74._singleLoadFilters(placeable);\n            else launchRequest(placeable);\n        }, 35);\n    }\n    function setRequestTimeOut() {\n        setTimeout(()=>{\n            clearTimeout(reqTimer);\n        }, 2000);\n    }\n    setTimeout(()=>{\n        setRequestTimeOut();\n        launchRequest(placeable);\n    }, startTimeout);\n}\nfunction $843aec23ddc05ff2$var$getAnchor(direction, angle, shapeType) {\n    if (shapeType === \"circle\" || shapeType === \"rect\") return {\n        x: 0.5,\n        y: 0.5\n    };\n    // Compute emanation anchor point from the orthonormal bounding rect containing the polygon.\n    // Not complete (to rework later), but ok with cardinal and half-cardinal directions\n    let dirRad = direction * Math.PI / 180;\n    let angleRad = angle * Math.PI / 180;\n    let cosRa1 = Math.cos(dirRad - angleRad / 2);\n    let rsinRa1 = -Math.sin(dirRad - angleRad / 2);\n    let cosRa2 = Math.cos(dirRad + angleRad / 2);\n    let rsinRa2 = -Math.sin(dirRad + angleRad / 2);\n    let x = 0, y = 1;\n    if (cosRa1 < 0 && cosRa2 < 0) x = 1;\n    else if (cosRa1 < 0 || cosRa2 < 0) x = (Math.sin(-dirRad - Math.PI / 2) + 1) / 2;\n    if (rsinRa1 < 0 && rsinRa2 < 0) y = 0;\n    else if (rsinRa1 < 0 || rsinRa2 < 0) y = (Math.cos(-dirRad - Math.PI / 2) + 1) / 2;\n    return {\n        x: x,\n        y: y\n    };\n}\nfunction $843aec23ddc05ff2$var$onMeasuredTemplateConfig(data, html) {\n    if (!$843aec23ddc05ff2$export$62085f0363fc8c9()) html[0].querySelector(\".file-picker\").dataset.type = \"imagevideo\";\n    function compare(a, b) {\n        if (a.name < b.name) return -1;\n        if (a.name > b.name) return 1;\n        return 0;\n    }\n    let tmTemplate = data.object;\n    if (isNewerVersion(game.version, \"0.8\")) tmTemplate = tmTemplate.object;\n    let opacity = tmTemplate.template.alpha;\n    let tint = \"\";\n    let currentPreset = (0, $2a8e669d7b55d798$export$680af52575be3523);\n    // getting custom data\n    let tmfxTemplateData = tmTemplate.document.getFlag(\"tokenmagic\", \"templateData\");\n    if (!(tmfxTemplateData == null) && tmfxTemplateData instanceof Object) {\n        opacity = tmTemplate.document.tmfxTextureAlpha = tmfxTemplateData.opacity;\n        tint = tmTemplate.document.tmfxTint = tmfxTemplateData.tint ? PIXI.utils.hex2string(tmfxTemplateData.tint) : \"\";\n        if (tmfxTemplateData.preset !== undefined) currentPreset = tmfxTemplateData.preset;\n    }\n    let filters = tmTemplate.document.getFlag(\"tokenmagic\", \"filters\");\n    let presets = $843aec23ddc05ff2$export$480e4c19201e4e74.getPresets((0, $855c97940ea7d48a$export$19612c32a2f7f4cd).TEMPLATE);\n    if (filters && filters instanceof Array && filters.length >= 1) currentPreset = filters[0].tmFilters.tmFilterId;\n    // forming our injected html\n    let tmfxValues = \"\";\n    let selected = \"\";\n    tmfxValues += `<option value=\"${0, $2a8e669d7b55d798$export$680af52575be3523}\"></option>`;\n    presets.sort(compare).forEach((preset)=>{\n        selected = preset.name === currentPreset ? \" selected\" : \"\";\n        tmfxValues += `<option value=\"${preset.name}\"${selected}>${preset.name}</option>`;\n    });\n    let divPreset = `\r\n    <div class=\"form-group\">\r\n        <label>${$843aec23ddc05ff2$var$i18n(\"TMFX.template.opacity\")}</label>\r\n        <div class=\"form-fields\">\r\n            <input type=\"range\" name=\"flags.tokenmagic.templateData.opacity\" value=\"${opacity}\" min=\"0.0\" max=\"1.0\" step=\"0.05\" data-dtype=\"Number\"/>\r\n            <span class=\"range-value\">${opacity}</span>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label>${$843aec23ddc05ff2$var$i18n(\"TMFX.template.fx\")}</label>\r\n        <select class=\"tmfx\" name=\"flags.tokenmagic.templateData.preset\" data-dtype=\"String\">\r\n        ${tmfxValues}\r\n        </select>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label>${$843aec23ddc05ff2$var$i18n(\"TMFX.template.tint\")}</label>\r\n        <div class=\"form-fields\">\r\n            <input class=\"color\" type=\"text\" name=\"flags.tokenmagic.templateData.tint\" value=\"${tint}\"/>\r\n            <input type=\"color\" value=\"${tint}\" data-edit=\"flags.tokenmagic.templateData.tint\"/>\r\n        </div>\r\n    </div>\r\n    `;\n    // injecting\n    const htmlForm = html.find(\".form-group\");\n    htmlForm.last().after(divPreset);\n    $(html).css({\n        \"min-height\": \"525px\"\n    });\n}\n/* -------------------------------------------- */ /*  Setup Management                            */ /* -------------------------------------------- */ Hooks.on(\"ready\", ()=>{\n    $843aec23ddc05ff2$export$bef1f36f5486a6a3(\"Hook -> ready\");\n    (0, $65a4ae23b1e0568d$export$182eb7a8e7220720)();\n    $843aec23ddc05ff2$var$initSocketListener();\n    window.TokenMagic = $843aec23ddc05ff2$export$480e4c19201e4e74;\n    if (!game.modules.get(\"lib-wrapper\")?.active && game.user.isGM) ui.notifications.warn(\"The 'Token Magic FX' module recommends to install and activate the 'libWrapper' module.\");\n    Hooks.on(\"renderMeasuredTemplateConfig\", $843aec23ddc05ff2$var$onMeasuredTemplateConfig);\n});\n/* -------------------------------------------- */ /*  Canvas Management                           */ /* -------------------------------------------- */ Hooks.once(\"canvasInit\", (canvas1)=>{\n    if (!$843aec23ddc05ff2$export$4d149f3fface3da5()) {\n        $843aec23ddc05ff2$export$bef1f36f5486a6a3(\"Init -> canvasInit -> caching shaders\");\n        $843aec23ddc05ff2$var$compilingShaders();\n    }\n});\n/* -------------------------------------------- */ Hooks.on(\"canvasInit\", (canvas1)=>{\n    $843aec23ddc05ff2$export$bef1f36f5486a6a3(\"Hook -> canvasInit\");\n    $843aec23ddc05ff2$export$2bf9d1af56f0b37d();\n    (0, $b144ce1eeabb28ed$export$b229f242afc35ae9).deactivateAnimation();\n    (0, $b144ce1eeabb28ed$export$b229f242afc35ae9).resetAnimation();\n});\n/* -------------------------------------------- */ Hooks.on(\"canvasReady\", (canvas1)=>{\n    $843aec23ddc05ff2$export$bef1f36f5486a6a3(\"Hook -> canvasReady\");\n    if (!window.hasOwnProperty(\"TokenMagic\")) window.TokenMagic = $843aec23ddc05ff2$export$480e4c19201e4e74;\n    if (canvas1 == null) return;\n    const tokens = canvas1.tokens.placeables;\n    $843aec23ddc05ff2$export$480e4c19201e4e74._loadFilters(tokens);\n    const tiles = canvas1.tiles.placeables;\n    $843aec23ddc05ff2$export$480e4c19201e4e74._loadFilters(tiles);\n    const drawings = canvas1.drawings.placeables;\n    $843aec23ddc05ff2$export$480e4c19201e4e74._loadFilters(drawings);\n    const templates = canvas1.templates.placeables;\n    $843aec23ddc05ff2$export$480e4c19201e4e74._loadFilters(templates);\n    (0, $b144ce1eeabb28ed$export$b229f242afc35ae9).activateAnimation();\n});\n/* -------------------------------------------- */ /*  Scenes Management                           */ /* -------------------------------------------- */ Hooks.on(\"deleteScene\", (document1)=>{\n    if (document1.id !== game.user.viewedScene) return;\n    (0, $b144ce1eeabb28ed$export$b229f242afc35ae9).deactivateAnimation();\n    (0, $b144ce1eeabb28ed$export$b229f242afc35ae9).resetAnimation();\n});\n/* -------------------------------------------- */ /*  Settings Management                         */ /* -------------------------------------------- */ Hooks.on(\"closeSettingsConfig\", ()=>{\n    $843aec23ddc05ff2$export$2bf9d1af56f0b37d();\n});\n/* -------------------------------------------- */ /*  Tokens Management                           */ /* -------------------------------------------- */ Hooks.on(\"createToken\", (document1)=>{\n    if (document1.parent.id !== game.user.viewedScene) return;\n    if (document1.flags?.tokenmagic?.filters) {\n        let placeable = $843aec23ddc05ff2$export$5008448b4c27fa2b(document1._id, $843aec23ddc05ff2$export$f2f6f02affe07ab5.TOKEN);\n        $843aec23ddc05ff2$var$requestLoadFilters(placeable, 250);\n    }\n});\n/* -------------------------------------------- */ Hooks.on(\"deleteToken\", (_, document1)=>{\n    if (!(document1 == null || !document1._id)) (0, $b144ce1eeabb28ed$export$b229f242afc35ae9).removeAnimation(document1._id);\n});\n/* -------------------------------------------- */ Hooks.on(\"updateToken\", (document1, options)=>{\n    if (document1.parent.id !== game.user.viewedScene) return;\n    if ([\n        \"img\",\n        \"tint\",\n        \"height\",\n        \"width\",\n        \"name\"\n    ].some((k)=>k in options)) {\n        let placeable = $843aec23ddc05ff2$export$5008448b4c27fa2b(document1._id, $843aec23ddc05ff2$export$f2f6f02affe07ab5.TOKEN);\n        (0, $b144ce1eeabb28ed$export$b229f242afc35ae9).removeAnimation(document1._id); // removing animations on this placeable\n        $843aec23ddc05ff2$export$480e4c19201e4e74._clearImgFiltersByPlaceable(placeable); // clearing the filters (owned by tokenmagic)\n        $843aec23ddc05ff2$var$requestLoadFilters(placeable, 250);\n    } else $843aec23ddc05ff2$export$480e4c19201e4e74._updateFilters(document1, options, $843aec23ddc05ff2$export$f2f6f02affe07ab5.TOKEN);\n});\n/* -------------------------------------------- */ /*  Tiles Management                            */ /* -------------------------------------------- */ Hooks.on(\"createTile\", (document1)=>{\n    if (document1.parent.id !== game.user.viewedScene) return;\n    if (document1.flags?.tokenmagic?.filters) {\n        const placeable = $843aec23ddc05ff2$export$5008448b4c27fa2b(document1._id, $843aec23ddc05ff2$export$f2f6f02affe07ab5.TILE);\n        $843aec23ddc05ff2$var$requestLoadFilters(placeable, 250);\n    }\n});\n/* -------------------------------------------- */ Hooks.on(\"deleteTile\", (_, document1)=>{\n    if (!(document1 == null || !document1._id)) (0, $b144ce1eeabb28ed$export$b229f242afc35ae9).removeAnimation(document1._id);\n});\n/* -------------------------------------------- */ Hooks.on(\"updateTile\", (document1, options)=>{\n    if (document1.parent.id !== game.user.viewedScene) return;\n    if (options.texture?.src || options.overhead) {\n        const placeable = $843aec23ddc05ff2$export$5008448b4c27fa2b(document1._id, $843aec23ddc05ff2$export$f2f6f02affe07ab5.TILE);\n        (0, $b144ce1eeabb28ed$export$b229f242afc35ae9).removeAnimation(document1._id); // removing animations on this placeable\n        $843aec23ddc05ff2$export$480e4c19201e4e74._clearImgFiltersByPlaceable(placeable); // clearing the filters (owned by tokenmagic)\n        $843aec23ddc05ff2$var$requestLoadFilters(placeable, 250);\n    } else $843aec23ddc05ff2$export$480e4c19201e4e74._updateFilters(document1, options, $843aec23ddc05ff2$export$f2f6f02affe07ab5.TILE);\n});\n/* -------------------------------------------- */ /*  Drawings Management                         */ /* -------------------------------------------- */ Hooks.on(\"createDrawing\", (document1)=>{\n    if (document1.parent.id !== game.user.viewedScene) return;\n    if (document1.flags?.tokenmagic?.filters) {\n        let placeable = $843aec23ddc05ff2$export$5008448b4c27fa2b(document1._id, $843aec23ddc05ff2$export$f2f6f02affe07ab5.DRAWING);\n        $843aec23ddc05ff2$var$requestLoadFilters(placeable, 250);\n    }\n});\n/* -------------------------------------------- */ Hooks.on(\"deleteDrawing\", (_, document1)=>{\n    if (!(document1 == null || !document1._id)) (0, $b144ce1eeabb28ed$export$b229f242afc35ae9).removeAnimation(document1._id);\n});\n/* -------------------------------------------- */ Hooks.on(\"updateDrawing\", (document1, options)=>{\n    if (document1.parent.id !== game.user.viewedScene) return;\n    if (!options.flags?.tokenmagic || options.x || options.y) {\n        let placeable = $843aec23ddc05ff2$export$5008448b4c27fa2b(document1._id, $843aec23ddc05ff2$export$f2f6f02affe07ab5.DRAWING);\n        (0, $b144ce1eeabb28ed$export$b229f242afc35ae9).removeAnimation(document1._id); // removing animations on this placeable\n        $843aec23ddc05ff2$export$480e4c19201e4e74._clearImgFiltersByPlaceable(placeable); // clearing the filters (owned by tokenmagic)\n        $843aec23ddc05ff2$var$requestLoadFilters(placeable, 250);\n    } else $843aec23ddc05ff2$export$480e4c19201e4e74._updateFilters(document1, options, $843aec23ddc05ff2$export$f2f6f02affe07ab5.DRAWING);\n});\n/* -------------------------------------------- */ /*  Measured Templates Management               */ /* -------------------------------------------- */ Hooks.on(\"createMeasuredTemplate\", (document1)=>{\n    const scene = document1.parent;\n    if (!(scene == null) && scene.id === game.user.viewedScene && document1.flags?.tokenmagic?.filters) {\n        let placeable = $843aec23ddc05ff2$export$5008448b4c27fa2b(document1._id, $843aec23ddc05ff2$export$f2f6f02affe07ab5.TEMPLATE);\n        $843aec23ddc05ff2$var$requestLoadFilters(placeable, 250); // request to load filters (when pixi containers are ready)\n    }\n});\n/* -------------------------------------------- */ Hooks.on(\"deleteMeasuredTemplate\", (_, document1)=>{\n    if (!(document1 == null || !document1._id)) (0, $b144ce1eeabb28ed$export$b229f242afc35ae9).removeAnimation(document1._id);\n});\n/* -------------------------------------------- */ Hooks.on(\"updateMeasuredTemplate\", (document1, options)=>{\n    if (document1.parent.id !== game.user.viewedScene) return;\n    let placeable = $843aec23ddc05ff2$export$5008448b4c27fa2b(document1._id, $843aec23ddc05ff2$export$f2f6f02affe07ab5.TEMPLATE);\n    if (!placeable) return;\n    if (options.texture) {\n        (0, $b144ce1eeabb28ed$export$b229f242afc35ae9).removeAnimation(document1._id); // removing animations on this placeable\n        $843aec23ddc05ff2$export$480e4c19201e4e74._clearImgFiltersByPlaceable(placeable); // clearing the filters (owned by tokenmagic)\n        $843aec23ddc05ff2$var$requestLoadFilters(placeable, 250); // querying filters reload (when pixi containers are ready)\n    } else if (!placeable.loadingRequest) {\n        $843aec23ddc05ff2$export$480e4c19201e4e74._updateFilters(document1, options, $843aec23ddc05ff2$export$f2f6f02affe07ab5.TEMPLATE);\n        $843aec23ddc05ff2$export$480e4c19201e4e74._updateTemplateData(document1, options, $843aec23ddc05ff2$export$f2f6f02affe07ab5.TEMPLATE);\n    }\n});\n/* -------------------------------------------- */ Hooks.on(\"preUpdateMeasuredTemplate\", async (document1, options)=>{\n    function getTint() {\n        if (options.flags?.tokenmagic?.templateData?.tint !== undefined) return options.flags.tokenmagic.templateData.tint;\n        else if (document1.flags?.tokenmagic?.tint !== undefined) return document1.flags.tokenmagic.tint;\n        else return \"\";\n    }\n    function getFX() {\n        if (options.flags?.tokenmagic?.templateData?.preset !== undefined) return options.flags.tokenmagic.templateData.preset;\n        else if (document1.flags?.tokenmagic?.templateData?.preset !== undefined) return document1.flags.tokenmagic.templateData.preset;\n        else if (document1.tmfxPreset !== undefined) return document1.tmfxPreset;\n        else return 0, $2a8e669d7b55d798$export$680af52575be3523;\n    }\n    function getDirection() {\n        if (options.direction) return options.direction;\n        else if (document1.direction) return document1.direction;\n        else return 0;\n    }\n    function getAngle() {\n        if (options.angle) return options.angle;\n        else if (document1.angle) return document1.angle;\n        else return 0;\n    }\n    function getShapeType() {\n        if (options.t) return options.t;\n        else if (document1.t) return document1.t;\n        else return \"ITSBAD\";\n    }\n    let measuredTemplateInstance = canvas.templates.get(document1._id);\n    let templateTint = getTint();\n    let presetUpdate = options.flags?.tokenmagic?.templateData?.preset !== undefined;\n    let tintUpdate = options.flags?.tokenmagic?.templateData?.tint !== undefined;\n    let directionUpdate = options.hasOwnProperty(\"direction\");\n    let angleUpdate = options.hasOwnProperty(\"angle\");\n    let typeUpdate = options.hasOwnProperty(\"t\");\n    if (tintUpdate) options.flags.tokenmagic.templateData.tint = templateTint !== \"\" ? Color.from(templateTint).valueOf() : null;\n    if (presetUpdate || tintUpdate || directionUpdate || typeUpdate || angleUpdate) {\n        let templateFX = getFX();\n        if (templateFX !== (0, $2a8e669d7b55d798$export$680af52575be3523)) {\n            let anchor = $843aec23ddc05ff2$var$getAnchor(getDirection(), getAngle(), getShapeType());\n            let presetOptions = {\n                name: templateFX,\n                library: (0, $855c97940ea7d48a$export$19612c32a2f7f4cd).TEMPLATE,\n                anchorX: anchor.x,\n                anchorY: anchor.y\n            };\n            if (templateTint && templateTint !== \"\") presetOptions.color = Color.from(templateTint).valueOf();\n            let preset = $843aec23ddc05ff2$export$480e4c19201e4e74.getPreset(presetOptions);\n            if (!(preset == null)) {\n                if (presetUpdate) await measuredTemplateInstance.TMFXaddFilters(preset, true);\n                else await measuredTemplateInstance.TMFXaddUpdateFilters(preset);\n            }\n        } else await measuredTemplateInstance.TMFXdeleteFilters();\n    }\n});\n/* -------------------------------------------- */ Hooks.on(\"preCreateMeasuredTemplate\", (document1)=>{\n    // Do nothing if we're on a 3D Canvas scene\n    if (game.Levels3DPreview?._active) return;\n    // Apply auto-preset if needed\n    const templates = (0, $3cb990d4b29536ce$export$804072f25096732f).getSystemTemplates();\n    if (templates?.enabled) templates.preCreateMeasuredTemplate?.(document1);\n    const hasFlags = document1.flags;\n    let hasPreset = false;\n    let hasTint = false;\n    let hasOpacity = false;\n    let hasFlagsNoOptions = false;\n    if (hasFlags && document1.flags.tokenmagic?.options) {\n        const opt = document1.flags.tokenmagic.options;\n        if (opt.tmfxPreset) {\n            document1.tmfxPreset = opt.tmfxPreset;\n            hasPreset = true;\n        }\n        if (opt.tmfxTint) {\n            document1.tmfxTint = opt.tmfxTint;\n            hasTint = true;\n        }\n        if (opt.tmfxTextureAlpha) {\n            document1.tmfxTextureAlpha = opt.tmfxTextureAlpha;\n            hasOpacity = true;\n        }\n        if (opt.tmfxTexture) {\n            document1.texture = opt.tmfxTexture;\n            document1.updateSource({\n                texture: opt.tmfxTexture\n            });\n        }\n    } else hasFlagsNoOptions = true;\n    let hasTexture = document1.texture && document1.texture !== \"\";\n    let newFilters = [];\n    let tmfxBaseFlags = {\n        tokenmagic: {\n            filters: null,\n            templateData: null,\n            options: null\n        }\n    };\n    if (hasFlags && hasFlagsNoOptions) {\n        // the measured template comes with tokenmagic flags ? It is a copy ! We do nothing.\n        if (document1.flags.tokenmagic) return;\n        document1.flags = mergeObject(document1.flags, tmfxBaseFlags, true, true);\n    }\n    // normalizing color to value if needed\n    if (hasTint && typeof document1.tmfxTint !== \"number\") document1.tmfxTint = Color.from(document1.tmfxTint).valueOf();\n    let tmfxFiltersData = null;\n    // FX to add ?\n    if (hasPreset) {\n        // Compute shader anchor point\n        let anchor = $843aec23ddc05ff2$var$getAnchor(document1.direction, document1.angle, document1.t);\n        // Constructing the preset search object\n        let pstSearch = {\n            name: document1.tmfxPreset,\n            library: (0, $855c97940ea7d48a$export$19612c32a2f7f4cd).TEMPLATE,\n            anchorX: anchor.x,\n            anchorY: anchor.y\n        };\n        // Adding tint if needed\n        if (hasTint) pstSearch.color = document1.tmfxTint;\n        // Retrieving the preset\n        let preset = $843aec23ddc05ff2$export$480e4c19201e4e74.getPreset(pstSearch);\n        if (!(preset == null) && preset instanceof Array) {\n            let defaultTex = $843aec23ddc05ff2$export$480e4c19201e4e74._getPresetTemplateDefaultTexture(pstSearch.name);\n            if (!(defaultTex == null) && !hasTexture) document1.updateSource({\n                texture: defaultTex\n            });\n            let persist = true;\n            // Constructing the filter flag parameters\n            for (const params1 of preset){\n                if (!params1.filterType || !$843aec23ddc05ff2$export$c67e46de1ec7dfa6.hasOwnProperty(params1.filterType)) {\n                    // one invalid ? all rejected.\n                    persist = false;\n                    break;\n                }\n                // getPreset MUST provide a filter id\n                if (!params1.filterId) {\n                    persist = false;\n                    break;\n                }\n                if (!params1.enabled || !(typeof params1.enabled === \"boolean\")) params1.enabled = true;\n                params1.placeableId = null;\n                params1.filterInternalId = randomID();\n                params1.filterOwner = game.data.userId;\n                params1.placeableType = $843aec23ddc05ff2$export$f2f6f02affe07ab5.TEMPLATE;\n                newFilters.push({\n                    tmFilters: {\n                        tmFilterId: params1.filterId,\n                        tmFilterInternalId: params1.filterInternalId,\n                        tmFilterType: params1.filterType,\n                        tmFilterOwner: params1.filterOwner,\n                        tmParams: params1\n                    }\n                });\n            }\n            if (persist) tmfxFiltersData = newFilters;\n        }\n    } else document1.tmfxPreset = (0, $2a8e669d7b55d798$export$680af52575be3523);\n    if (!hasOpacity) document1.tmfxTextureAlpha = 1;\n    if (!hasTint) document1.tmfxTint = null;\n    let tmfxFlags = {\n        templateData: {\n            opacity: document1.tmfxTextureAlpha,\n            tint: document1.tmfxTint\n        },\n        filters: tmfxFiltersData,\n        options: null\n    };\n    document1.updateSource({\n        flags: {\n            tokenmagic: tmfxFlags\n        }\n    });\n});\n\n\nexport {$843aec23ddc05ff2$export$c67e46de1ec7dfa6 as FilterType, $843aec23ddc05ff2$export$f2f6f02affe07ab5 as PlaceableType, $843aec23ddc05ff2$export$157d7b8c087faa7b as SocketAction, $843aec23ddc05ff2$export$24d33a6f4bffea69 as broadcast, $843aec23ddc05ff2$export$73ccc1811a23c47 as isActiveModule, $843aec23ddc05ff2$export$a3e1d0865041c250 as getMinPadding, $843aec23ddc05ff2$export$db02b1003f6b14db as isAdditivePaddingConfig, $843aec23ddc05ff2$export$4d149f3fface3da5 as isFilterCachingDisabled, $843aec23ddc05ff2$export$62085f0363fc8c9 as isVideoDisabled, $843aec23ddc05ff2$export$485113ed30b22bb8 as isTheOne, $843aec23ddc05ff2$export$ae4b89d79d01bd2b as mustBroadCast, $843aec23ddc05ff2$export$2bf9d1af56f0b37d as autosetPaddingMode, $843aec23ddc05ff2$export$222530a21fa4a417 as isZOrderConfig, $843aec23ddc05ff2$export$4876a704e2bf90fb as isAnimationDisabled, $843aec23ddc05ff2$export$bef1f36f5486a6a3 as log, $843aec23ddc05ff2$export$c106dd0671a0fc2d as warn, $843aec23ddc05ff2$export$a3bc9b8ed74fc as error, $843aec23ddc05ff2$export$3bebb302ab08af33 as fixPath, $843aec23ddc05ff2$export$674b9bd489502778 as getControlledPlaceables, $843aec23ddc05ff2$export$c0c03469ba031852 as getTargetedTokens, $843aec23ddc05ff2$export$5008448b4c27fa2b as getPlaceableById, $843aec23ddc05ff2$export$45dd0c4934db71d0 as objectAssign, $843aec23ddc05ff2$export$4367b12d875874d3 as TokenMagic, $843aec23ddc05ff2$export$480e4c19201e4e74 as Magic};\n//# sourceMappingURL=tokenmagicBundle.js.map\n","import { FilterAdjustment } from '../fx/filters/FilterAdjustment.js';\r\nimport { FilterAscii } from '../fx/filters/FilterAscii.js';\r\nimport { FilterXBloom } from '../fx/filters/FilterAdvancedBloom.js';\r\nimport { FilterDot } from '../fx/filters/FilterDot.js';\r\nimport { FilterDistortion } from '../fx/filters/FilterDistortion.js';\r\nimport { FilterOldFilm } from '../fx/filters/FilterOldFilm.js';\r\nimport { FilterGlow } from '../fx/filters/FilterGlow.js';\r\nimport { FilterOutline } from '../fx/filters/FilterOutline.js';\r\nimport { FilterBevel } from '../fx/filters/FilterBevel.js';\r\nimport { FilterDropShadow } from '../fx/filters/FilterDropShadow.js';\r\nimport { FilterTwist } from '../fx/filters/FilterTwist.js';\r\nimport { FilterZoomBlur } from '../fx/filters/FilterZoomBlur.js';\r\nimport { FilterBlur } from '../fx/filters/FilterBlur.js';\r\nimport { FilterShockwave } from '../fx/filters/FilterShockWave.js';\r\nimport { FilterBulgePinch } from '../fx/filters/FilterBulgePinch.js';\r\nimport { FilterRemoveShadow } from '../fx/filters/FilterRemoveShadow.js';\r\nimport { FilterRays } from '../fx/filters/FilterRays.js';\r\nimport { FilterFog } from '../fx/filters/FilterFog.js';\r\nimport { FilterXFog } from '../fx/filters/FilterXFog.js';\r\nimport { FilterElectric } from '../fx/filters/FilterElectric.js';\r\nimport { FilterWaves } from '../fx/filters/FilterWaves.js';\r\nimport { FilterFire } from '../fx/filters/FilterFire.js';\r\nimport { FilterFumes } from '../fx/filters/FilterFumes.js';\r\nimport { FilterFlood } from '../fx/filters/FilterFlood.js';\r\nimport { FilterSmoke } from '../fx/filters/FilterSmoke.js';\r\nimport { FilterForceField } from '../fx/filters/FilterForceField.js';\r\nimport { FilterMirrorImages } from '../fx/filters/FilterMirrorImages.js';\r\nimport { FilterXRays } from '../fx/filters/FilterXRays.js';\r\nimport { FilterLiquid } from '../fx/filters/FilterLiquid.js';\r\nimport { FilterGleamingGlow } from '../fx/filters/FilterGleamingGlow.js';\r\nimport { FilterPixelate } from '../fx/filters/FilterPixelate.js';\r\nimport { FilterSpiderWeb } from '../fx/filters/FilterSpiderWeb.js';\r\nimport { FilterSolarRipples } from '../fx/filters/FilterSolarRipples.js';\r\nimport { FilterGlobes } from '../fx/filters/FilterGlobes.js';\r\nimport { FilterTransform } from '../fx/filters/FilterTransform.js';\r\nimport { FilterSplash } from '../fx/filters/FilterSplash.js';\r\nimport { FilterPolymorph } from '../fx/filters/FilterPolymorph.js';\r\nimport { FilterXFire } from '../fx/filters/FilterXFire.js';\r\nimport { FilterSprite } from '../fx/filters/FilterSprite.js';\r\nimport { FilterSpriteMask } from '../fx/filters/FilterSpriteMask.js';\r\nimport { FilterReplaceColor } from '../fx/filters/FilterReplaceColor.js';\r\nimport { FilterDDTint } from '../fx/filters/FilterDDTint.js';\r\nimport { Anime } from '../fx/Anime.js';\r\nimport { allPresets, PresetsLibrary } from '../fx/presets/defaultpresets.js';\r\nimport { tmfxDataMigration } from '../migration/migration.js';\r\nimport { emptyPreset } from './constants.js';\r\nimport './proto/PlaceableObjectProto.js';\r\nimport { FilterCRT } from '../fx/filters/FilterCRT.js';\r\nimport { FilterRGBSplit } from '../fx/filters/FilterRGBSplit.js';\r\nimport { TokenMagicSettings } from './settings.js';\r\n\r\n/*\r\n\r\nIt's getting messy here !\r\nI will fix it in a future version\r\n(+ duplicated code to factorize and code to improve)\r\n\r\n*/\r\n\r\nconst moduleTM = 'module.tokenmagic';\r\n\r\n// Filters Class Keys\r\nexport const FilterType = {\r\n\tadjustment: FilterAdjustment,\r\n\tascii: FilterAscii,\r\n\tdot: FilterDot,\r\n\tdistortion: FilterDistortion,\r\n\tcrt: FilterCRT,\r\n\toldfilm: FilterOldFilm,\r\n\tglow: FilterGlow,\r\n\toutline: FilterOutline,\r\n\tbevel: FilterBevel,\r\n\txbloom: FilterXBloom,\r\n\tshadow: FilterDropShadow,\r\n\ttwist: FilterTwist,\r\n\tzoomblur: FilterZoomBlur,\r\n\tblur: FilterBlur,\r\n\tbulgepinch: FilterBulgePinch,\r\n\tzapshadow: FilterRemoveShadow,\r\n\tray: FilterRays,\r\n\tfog: FilterFog,\r\n\txfog: FilterXFog,\r\n\telectric: FilterElectric,\r\n\twave: FilterWaves,\r\n\tshockwave: FilterShockwave,\r\n\tfire: FilterFire,\r\n\tfumes: FilterFumes,\r\n\tsmoke: FilterSmoke,\r\n\tflood: FilterFlood,\r\n\timages: FilterMirrorImages,\r\n\tfield: FilterForceField,\r\n\txray: FilterXRays,\r\n\tliquid: FilterLiquid,\r\n\txglow: FilterGleamingGlow,\r\n\tpixel: FilterPixelate,\r\n\tweb: FilterSpiderWeb,\r\n\tripples: FilterSolarRipples,\r\n\tglobes: FilterGlobes,\r\n\ttransform: FilterTransform,\r\n\tsplash: FilterSplash,\r\n\tpolymorph: FilterPolymorph,\r\n\txfire: FilterXFire,\r\n\tsprite: FilterSprite,\r\n\tspriteMask: FilterSpriteMask,\r\n\treplaceColor: FilterReplaceColor,\r\n\tddTint: FilterDDTint,\r\n\trgbSplit: FilterRGBSplit,\r\n};\r\n\r\nexport const PlaceableType = {\r\n\tTOKEN: Token.embeddedName,\r\n\tTILE: Tile.embeddedName,\r\n\tTEMPLATE: MeasuredTemplate.embeddedName,\r\n\tDRAWING: Drawing.embeddedName,\r\n\tNOT_SUPPORTED: null,\r\n};\r\n\r\nfunction i18n(key) {\r\n\treturn game.i18n.localize(key);\r\n}\r\n\r\nasync function exportObjectAsJson(exportObj, exportName) {\r\n\tlet jsonStr = JSON.stringify(exportObj, null, 4);\r\n\r\n\tconst a = document.createElement('a');\r\n\tconst file = new Blob([jsonStr], { type: 'plain/text' });\r\n\r\n\ta.href = URL.createObjectURL(file);\r\n\ta.download = exportName + '.json';\r\n\ta.click();\r\n\r\n\tURL.revokeObjectURL(a.href);\r\n}\r\n\r\nexport const SocketAction = {\r\n\tSET_FLAG: 'TMFXSetFlag',\r\n\tSET_ANIME_FLAG: 'TMFXSetAnimeFlag',\r\n};\r\n\r\nexport function broadcast(placeable, flag, socketAction) {\r\n\tconst data = {\r\n\t\ttmAction: socketAction,\r\n\t\ttmPlaceableId: placeable.id,\r\n\t\ttmPlaceableType: placeable._TMFXgetPlaceableType(),\r\n\t\ttmFlag: flag,\r\n\t\ttmViewedScene: game.user.viewedScene,\r\n\t};\r\n\tgame.socket.emit(moduleTM, data, (resp) => {});\r\n}\r\n\r\nexport function isActiveModule(moduleName) {\r\n\treturn game.modules.has(moduleName) && game.modules.get(moduleName).active === true;\r\n}\r\n\r\nexport function getMinPadding() {\r\n\treturn game.settings.get('tokenmagic', 'minPadding');\r\n}\r\n\r\nexport function isAdditivePaddingConfig() {\r\n\treturn game.settings.get('tokenmagic', 'useAdditivePadding');\r\n}\r\n\r\nexport function isFilterCachingDisabled() {\r\n\treturn game.settings.get('tokenmagic', 'disableCaching');\r\n}\r\n\r\nexport function isVideoDisabled() {\r\n\treturn game.settings.get('tokenmagic', 'disableVideo');\r\n}\r\n\r\nexport function isTheOne() {\r\n\tconst theOne = game.users.find((user) => user.isGM && user.active);\r\n\treturn theOne && game.user === theOne;\r\n}\r\n\r\nexport function mustBroadCast() {\r\n\treturn game.settings.get('tokenmagic', 'fxPlayerPermission') && !isTheOne();\r\n}\r\n\r\nexport function autosetPaddingMode() {\r\n\tcanvas.app.renderer.filter.useMaxPadding = !isAdditivePaddingConfig();\r\n}\r\n\r\nexport function isZOrderConfig() {\r\n\treturn game.settings.get('tokenmagic', 'useZOrder');\r\n}\r\n\r\nexport function isAnimationDisabled() {\r\n\treturn game.settings.get('tokenmagic', 'disableAnimations');\r\n}\r\n\r\nexport function log(output) {\r\n\tlet logged = '%cTokenMagic %c| ' + output;\r\n\tconsole.log(logged, 'color:#4BC470', 'color:#B3B3B3');\r\n}\r\n\r\nexport function warn(output) {\r\n\tlet logged = 'TokenMagic | ' + output;\r\n\tconsole.warn(logged);\r\n}\r\n\r\nexport function error(output) {\r\n\tlet logged = 'TokenMagic | ' + output;\r\n\tconsole.error(logged);\r\n}\r\n\r\nexport function fixPath(path) {\r\n\t/*\r\n      /prefix/...               =>   ...\r\n      /modules/tokenmagic/...   =>   modules/tokenmagic/...\r\n  */\r\n\tif (path) {\r\n\t\tconst base = '/modules/tokenmagic';\r\n\t\tconst url = new URL(path, window.location.href);\r\n\r\n\t\tif (url.origin === window.location.origin) {\r\n\t\t\tlet prefix = '/';\r\n\r\n\t\t\ttry {\r\n\t\t\t\tif (ROUTE_PREFIX) {\r\n\t\t\t\t\tprefix = new URL(ROUTE_PREFIX, window.location.origin).pathname;\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {}\r\n\r\n\t\t\tpath = url.pathname;\r\n\r\n\t\t\tif (prefix === '/') {\r\n\t\t\t\tpath = path.slice(1);\r\n\t\t\t} else if (path.startsWith(prefix) && (path.length === prefix.length || path[prefix.length] === '/')) {\r\n\t\t\t\tpath = path.slice(prefix.length + 1);\r\n\t\t\t} else if (path.startsWith(base) && (path.length === base.length || path[base.length] === '/')) {\r\n\t\t\t\tpath = path.slice(1);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tpath = url.href;\r\n\t\t}\r\n\t}\r\n\r\n\treturn path;\r\n}\r\n\r\nexport function getControlledPlaceables() {\r\n\tconst authorizedLayers = [canvas.tokens, canvas.tiles, canvas.drawings];\r\n\tif (authorizedLayers.some((layer) => layer === canvas.activeLayer)) {\r\n\t\treturn canvas.activeLayer.placeables.filter((p) => p.controlled === true) || [];\r\n\t} else return [];\r\n}\r\n\r\nexport function getTargetedTokens() {\r\n\treturn canvas.tokens.placeables.filter((placeable) => placeable.isTargeted);\r\n}\r\n\r\nexport function getPlaceableById(id, type) {\r\n\tlet placeable = null;\r\n\r\n\tfunction findPlaceable(placeables, id) {\r\n\t\tlet rplaceable = null;\r\n\t\tif (!(placeables == null) && placeables.length > 0) {\r\n\t\t\trplaceable = placeables.find((n) => n.id === id);\r\n\t\t}\r\n\t\treturn rplaceable;\r\n\t}\r\n\r\n\tswitch (type) {\r\n\t\tcase PlaceableType.TOKEN:\r\n\t\t\tplaceable = findPlaceable(canvas.tokens.placeables, id);\r\n\t\t\tbreak;\r\n\t\tcase PlaceableType.TILE:\r\n\t\t\tplaceable = findPlaceable(canvas.tiles.placeables, id);\r\n\t\t\tbreak;\r\n\t\tcase PlaceableType.TEMPLATE:\r\n\t\t\tplaceable = findPlaceable(canvas.templates.placeables, id);\r\n\t\t\tbreak;\r\n\t\tcase PlaceableType.DRAWING:\r\n\t\t\tplaceable = findPlaceable(canvas.drawings.placeables, id);\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn placeable;\r\n}\r\n\r\n/**\r\n * Randomizes params using 'randomized' field.\r\n * 'randomized' is an object consisting of keys named after params to be randomized, which map either\r\n * to arrays or ranges which will be used to generate a random value.\r\n * e.g.\r\n * {\r\n *  param1: ['foo1', 'foo2', 'foo3'],\r\n *  param2: { list: ['foo1', 'foo2', 'foo3'], link: 'param5'},\r\n *  param3: { val1: 0, val2: 1, step: 0.1},\r\n *  param4: { val1: 0, val2: 10, step: 1, link: 'param6'},\r\n * }\r\n * 'link' will assign the same generated value to one other param.\r\n */\r\nfunction randomizeParams(params) {\r\n\tif (params.randomized.hasOwnProperty('active') && !params.randomized.active) return;\r\n\r\n\tfor (const [param, opts] of Object.entries(params.randomized)) {\r\n\t\tlet rVal;\r\n\t\tif (Array.isArray(opts) || opts.hasOwnProperty('list')) {\r\n\t\t\tconst list = opts.list ?? opts;\r\n\t\t\trVal = list[Math.floor(Math.random() * list.length)];\r\n\t\t} else {\r\n\t\t\tconst min = Math.min(opts.val1, opts.val2);\r\n\t\t\tconst max = Math.max(opts.val1, opts.val2);\r\n\t\t\tconst step = opts.step ?? 1;\r\n\t\t\tconst stepsInRange = (max - min + (Number.isInteger(step) ? 1 : 0)) / step;\r\n\t\t\trVal = Math.floor(Math.random() * stepsInRange) * step + min;\r\n\t\t}\r\n\t\tsetProperty(params, param, rVal);\r\n\t\tif (opts.hasOwnProperty('link')) setProperty(params, opts.link, rVal);\r\n\t}\r\n}\r\n\r\nexport function objectAssign(target, ...sources) {\r\n\tsources.forEach((source) => {\r\n\t\tObject.keys(source).forEach((key) => {\r\n\t\t\tconst s_val = source[key];\r\n\t\t\tconst t_val = target[key];\r\n\t\t\tif (s_val instanceof Array) target[key] = [...s_val];\r\n\t\t\telse\r\n\t\t\t\ttarget[key] =\r\n\t\t\t\t\tt_val && s_val && typeof t_val === 'object' && typeof s_val === 'object' ? objectAssign(t_val, s_val) : s_val;\r\n\t\t});\r\n\t});\r\n\treturn target;\r\n}\r\n\r\nexport function TokenMagic() {\r\n\tlet _cachedContainer = new PIXI.Container();\r\n\r\n\tasync function addFiltersOnSelected(paramsArray, replace = false) {\r\n\t\tif (!Array.isArray(paramsArray)) {\r\n\t\t\tparamsArray = getPreset(paramsArray);\r\n\t\t}\r\n\r\n\t\tconst controlled = getControlledPlaceables();\r\n\r\n\t\tif (!(controlled == null) && controlled.length > 0) {\r\n\t\t\tfor (const placeable of controlled) {\r\n\t\t\t\tawait addFilters(placeable, paramsArray, replace);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync function addUpdateFiltersOnSelected(paramsArray) {\r\n\t\tif (!Array.isArray(paramsArray)) {\r\n\t\t\tparamsArray = getPreset(paramsArray);\r\n\t\t}\r\n\r\n\t\tconst controlled = getControlledPlaceables();\r\n\r\n\t\tif (!(controlled == null) && controlled.length > 0) {\r\n\t\t\tfor (const placeable of controlled) {\r\n\t\t\t\tawait addUpdateFilters(placeable, paramsArray);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync function addUpdateFiltersOnTargeted(paramsArray) {\r\n\t\tif (!Array.isArray(paramsArray)) {\r\n\t\t\tparamsArray = getPreset(paramsArray);\r\n\t\t}\r\n\r\n\t\tconst targeted = getTargetedTokens();\r\n\r\n\t\tif (!(targeted == null) && targeted.length > 0) {\r\n\t\t\tfor (const token of targeted) {\r\n\t\t\t\tawait addUpdateFilters(token, paramsArray);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync function addFiltersOnTargeted(paramsArray, replace = false) {\r\n\t\tif (!Array.isArray(paramsArray)) {\r\n\t\t\tparamsArray = getPreset(paramsArray);\r\n\t\t}\r\n\r\n\t\tconst targeted = getTargetedTokens();\r\n\r\n\t\tif (!(targeted == null) && targeted.length > 0) {\r\n\t\t\tfor (const token of targeted) {\r\n\t\t\t\tawait addFilters(token, paramsArray, replace);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync function addFilters(placeable, paramsArray, replace = false) {\r\n\t\tif (!Array.isArray(paramsArray)) {\r\n\t\t\tparamsArray = getPreset(paramsArray);\r\n\t\t}\r\n\t\tif (!(paramsArray instanceof Array && paramsArray.length > 0) || placeable == null) return;\r\n\r\n\t\tlet actualFlags = replace ? null : placeable.document.getFlag('tokenmagic', 'filters');\r\n\t\tlet newFlags = [];\r\n\r\n\t\tfor (const params of paramsArray) {\r\n\t\t\tif (!params.hasOwnProperty('filterType') || !FilterType.hasOwnProperty(params.filterType)) {\r\n\t\t\t\t// one invalid ? all rejected.\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (!params.hasOwnProperty('rank')) {\r\n\t\t\t\tparams.rank = placeable._TMFXgetMaxFilterRank();\r\n\t\t\t}\r\n\r\n\t\t\tif (!params.hasOwnProperty('filterId') || params.filterId == null) {\r\n\t\t\t\tparams.filterId = randomID();\r\n\t\t\t}\r\n\r\n\t\t\tif (!params.hasOwnProperty('enabled') || !(typeof params.enabled === 'boolean')) {\r\n\t\t\t\tparams.enabled = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (params.hasOwnProperty('randomized')) {\r\n\t\t\t\trandomizeParams(params);\r\n\t\t\t}\r\n\r\n\t\t\tparams.placeableId = placeable.id;\r\n\t\t\tparams.filterInternalId = randomID();\r\n\t\t\tparams.filterOwner = game.data.userId;\r\n\t\t\tparams.placeableType = placeable._TMFXgetPlaceableType();\r\n\t\t\tparams.updateId = randomID();\r\n\r\n\t\t\tnewFlags.push({\r\n\t\t\t\ttmFilters: {\r\n\t\t\t\t\ttmFilterId: params.filterId,\r\n\t\t\t\t\ttmFilterInternalId: params.filterInternalId,\r\n\t\t\t\t\ttmFilterType: params.filterType,\r\n\t\t\t\t\ttmFilterOwner: params.filterOwner,\r\n\t\t\t\t\ttmParams: params,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (!(actualFlags == null)) {\r\n\t\t\tnewFlags = actualFlags.concat(newFlags);\r\n\t\t}\r\n\r\n\t\tawait placeable._TMFXsetFlag(newFlags);\r\n\t}\r\n\r\n\tasync function addUpdateFilters(placeable, paramsArray) {\r\n\t\tif (!paramsArray instanceof Array || paramsArray.length < 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet flags = placeable.document.getFlag('tokenmagic', 'filters');\r\n\t\tlet workingFlags = [];\r\n\t\tif (flags) {\r\n\t\t\tflags.forEach((flag) => {\r\n\t\t\t\tworkingFlags.push(duplicate(flag));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tlet newFlags = [];\r\n\t\tlet updateParams;\r\n\r\n\t\tfor (const params of paramsArray) {\r\n\t\t\tupdateParams = false;\r\n\t\t\tparams.updateId = randomID();\r\n\r\n\t\t\tif (params.hasOwnProperty('randomized')) {\r\n\t\t\t\trandomizeParams(params);\r\n\t\t\t}\r\n\r\n\t\t\tworkingFlags.forEach((flag) => {\r\n\t\t\t\tif (flag.tmFilters.tmFilterId === params.filterId && flag.tmFilters.tmFilterType === params.filterType) {\r\n\t\t\t\t\tif (flag.tmFilters.hasOwnProperty('tmParams')) {\r\n\t\t\t\t\t\tobjectAssign(flag.tmFilters.tmParams, params);\r\n\t\t\t\t\t\tupdateParams = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (!updateParams) {\r\n\t\t\t\tif (!params.hasOwnProperty('filterType') || !FilterType.hasOwnProperty(params.filterType)) {\r\n\t\t\t\t\t// one invalid ? all rejected (even the update)\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!params.hasOwnProperty('rank')) {\r\n\t\t\t\t\tparams.rank = placeable._TMFXgetMaxFilterRank();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!params.hasOwnProperty('filterId') || params.filterId == null) {\r\n\t\t\t\t\tparams.filterId = randomID();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!params.hasOwnProperty('enabled') || !(typeof params.enabled === 'boolean')) {\r\n\t\t\t\t\tparams.enabled = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparams.placeableId = placeable.id;\r\n\t\t\t\tparams.filterInternalId = randomID();\r\n\t\t\t\tparams.filterOwner = game.data.userId;\r\n\t\t\t\tparams.placeableType = placeable._TMFXgetPlaceableType();\r\n\r\n\t\t\t\tnewFlags.push({\r\n\t\t\t\t\ttmFilters: {\r\n\t\t\t\t\t\ttmFilterId: params.filterId,\r\n\t\t\t\t\t\ttmFilterInternalId: params.filterInternalId,\r\n\t\t\t\t\t\ttmFilterType: params.filterType,\r\n\t\t\t\t\t\ttmFilterOwner: params.filterOwner,\r\n\t\t\t\t\t\ttmParams: params,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (newFlags.length > 0) {\r\n\t\t\tworkingFlags = newFlags.concat(workingFlags);\r\n\t\t}\r\n\r\n\t\tawait placeable._TMFXsetFlag(workingFlags);\r\n\t}\r\n\r\n\tasync function updateFilters(paramsArray) {\r\n\t\tif (params == null || !params.hasOwnProperty('filterId')) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet placeableIdSet = new Set();\r\n\t\tlet animations = Anime.getAnimeMap();\r\n\t\tif (animations.size <= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tanimations.forEach((anime, id) => {\r\n\t\t\tlet filterIdMatch = (params) => params.filterId === anime.puppet.filterId;\r\n\t\t\tif (paramsArray.some(filterIdMatch)) {\r\n\t\t\t\tplaceableIdSet.add(anime.puppet.placeableId);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (placeableIdSet.size <= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor (const placeableId of placeableIdSet) {\r\n\t\t\t// we must browse the collection of placeables whatever their types\r\n\t\t\t// we have just a filterId.\r\n\t\t\tlet placeable = getPlaceableById(placeableId, PlaceableType.TOKEN);\r\n\t\t\tif (placeable == null) {\r\n\t\t\t\tplaceable = getPlaceableById(placeableId, PlaceableType.TEMPLATE);\r\n\t\t\t}\r\n\t\t\tif (placeable == null) {\r\n\t\t\t\tplaceable = getPlaceableById(placeableId, PlaceableType.TILE);\r\n\t\t\t}\r\n\t\t\tif (placeable == null) {\r\n\t\t\t\tplaceable = getPlaceableById(placeableId, PlaceableType.DRAWING);\r\n\t\t\t}\r\n\t\t\tif (!(placeable == null) && placeable instanceof PlaceableObject) {\r\n\t\t\t\tawait updateFiltersByPlaceable(placeable, paramsArray);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync function updateFiltersOnSelected(paramsArray) {\r\n\t\tlet placeables = getControlledPlaceables();\r\n\r\n\t\tif (placeables == null || placeables.length < 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (typeof paramsArray === 'string') {\r\n\t\t\tparamsArray = getPreset(paramsArray);\r\n\t\t}\r\n\t\tif (!(paramsArray instanceof Array) || paramsArray.length < 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor (const placeable of placeables) {\r\n\t\t\tawait updateFiltersByPlaceable(placeable, paramsArray);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function updateFiltersOnTargeted(paramsArray) {\r\n\t\tlet targeted = getTargetedTokens();\r\n\r\n\t\tif (targeted == null || targeted.length < 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (typeof paramsArray === 'string') {\r\n\t\t\tparamsArray = getPreset(paramsArray);\r\n\t\t}\r\n\r\n\t\tif (!(paramsArray instanceof Array) || paramsArray.length < 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor (const token of targeted) {\r\n\t\t\tawait updateFiltersByPlaceable(token, paramsArray);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function updateFiltersByPlaceable(placeable, paramsArray) {\r\n\t\tif (!(paramsArray instanceof Array) || paramsArray.length < 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet flags = placeable.document.getFlag('tokenmagic', 'filters');\r\n\t\tif (flags == null || !(flags instanceof Array) || flags.length < 1) {\r\n\t\t\treturn;\r\n\t\t} // nothing to update...\r\n\r\n\t\tlet workingFlags = [];\r\n\t\tflags.forEach((flag) => {\r\n\t\t\tworkingFlags.push(duplicate(flag));\r\n\t\t});\r\n\r\n\t\tfor (const params of paramsArray) {\r\n\t\t\tparams.updateId = randomID();\r\n\r\n\t\t\tif (params.hasOwnProperty('randomized')) {\r\n\t\t\t\trandomizeParams(params);\r\n\t\t\t}\r\n\r\n\t\t\tworkingFlags.forEach((flag) => {\r\n\t\t\t\tif (flag.tmFilters.tmFilterId === params.filterId && flag.tmFilters.tmFilterType === params.filterType) {\r\n\t\t\t\t\tif (flag.tmFilters.hasOwnProperty('tmParams')) {\r\n\t\t\t\t\t\tobjectAssign(flag.tmFilters.tmParams, params);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tawait placeable._TMFXsetFlag(workingFlags);\r\n\t}\r\n\r\n\t// Deleting filters on targeted tokens\r\n\tasync function deleteFiltersOnTargeted(filterId = null) {\r\n\t\tlet targeted = getTargetedTokens();\r\n\t\tif (!(targeted == null) && targeted.length > 0) {\r\n\t\t\tfor (const token of targeted) {\r\n\t\t\t\tawait deleteFilters(token, filterId);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Deleting filters on selected placeable(s)\r\n\tasync function deleteFiltersOnSelected(filterId = null) {\r\n\t\tlet placeables = getControlledPlaceables();\r\n\t\tif (!(placeables == null) && placeables.length > 0) {\r\n\t\t\tfor (const placeable of placeables) {\r\n\t\t\t\tawait deleteFilters(placeable, filterId);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Deleting all filters on a placeable in parameter\r\n\tasync function deleteFilters(placeable, filterId = null) {\r\n\t\tif (placeable == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (filterId == null) {\r\n\t\t\tawait placeable._TMFXunsetFlag();\r\n\t\t\tawait placeable._TMFXunsetAnimeFlag();\r\n\t\t} else if (typeof filterId === 'string') {\r\n\t\t\tlet flags = placeable.document.getFlag('tokenmagic', 'filters');\r\n\t\t\tif (flags == null || !(flags instanceof Array) || flags.length < 1) {\r\n\t\t\t\treturn;\r\n\t\t\t} // nothing to delete...\r\n\r\n\t\t\tlet workingFlags = [];\r\n\t\t\tflags.forEach((flag) => {\r\n\t\t\t\tif (flag.tmFilters.tmFilterId !== filterId) {\r\n\t\t\t\t\tworkingFlags.push(duplicate(flag));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (workingFlags.length > 0) await placeable._TMFXsetFlag(workingFlags);\r\n\t\t\telse await placeable._TMFXunsetFlag();\r\n\r\n\t\t\tflags = placeable.document.getFlag('tokenmagic', 'animeInfo');\r\n\t\t\tif (flags == null || !(flags instanceof Array) || flags.length < 1) {\r\n\t\t\t\treturn;\r\n\t\t\t} // nothing to delete...\r\n\r\n\t\t\tworkingFlags = [];\r\n\t\t\tflags.forEach((flag) => {\r\n\t\t\t\tif (flag.tmFilterId !== filterId) {\r\n\t\t\t\t\tworkingFlags.push(duplicate(flag));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (workingFlags.length > 0) await placeable._TMFXsetAnimeFlag(workingFlags);\r\n\t\t\telse await placeable._TMFXunsetAnimeFlag();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction hasFilterType(placeable, filterType) {\r\n\t\tif (placeable == null || filterType == null || !(placeable instanceof PlaceableObject)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet flags = placeable.document.getFlag('tokenmagic', 'filters');\r\n\t\tif (flags == null || !(flags instanceof Array) || flags.length < 1) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst found = flags.find((flag) => flag.tmFilters.tmFilterType === filterType);\r\n\t\tif (found === undefined) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction isApplicableUser(tmParams) {\r\n\t\tconst hasUser = (arr) => {\r\n\t\t\treturn arr.includes(game.user.name) || arr.includes(game.user.id);\r\n\t\t};\r\n\r\n\t\tif (\r\n\t\t\t(tmParams.users?.include?.length && !hasUser(tmParams.users.include)) ||\r\n\t\t\t(tmParams.users?.exclude?.length && hasUser(tmParams.users?.exclude))\r\n\t\t) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction hasFilterId(placeable, filterId) {\r\n\t\tif (placeable == null || !(placeable instanceof PlaceableObject)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet flags = placeable.document.getFlag('tokenmagic', 'filters');\r\n\t\treturn _checkFilterId(placeable, filterId, flags);\r\n\t}\r\n\r\n\tfunction _checkFilterId(placeable, filterId, flags) {\r\n\t\tif (placeable == null || filterId == null || !(placeable instanceof PlaceableObject)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif (flags == null || !(flags instanceof Array) || flags.length < 1) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst found = flags.find((flag) => flag.tmFilters.tmFilterId === filterId);\r\n\t\tif (found === undefined) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction setFilter(placeable, filter) {\r\n\t\tplaceable._TMFXsetRawFilters(filter);\r\n\t}\r\n\r\n\tfunction _loadPersistedValues(params, animeInfos) {\r\n\t\tif (!params.hasOwnProperty('animated')) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!animeInfos || animeInfos.length <= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor (const effect of Object.keys(params.animated)) {\r\n\t\t\tfor (const animeInfo of animeInfos.values()) {\r\n\t\t\t\tif (\r\n\t\t\t\t\tanimeInfo.tmFilterId === params.filterId &&\r\n\t\t\t\t\tanimeInfo.tmFilterInternalId === params.filterInternalId &&\r\n\t\t\t\t\tanimeInfo.tmFilterEffect === effect\r\n\t\t\t\t) {\r\n\t\t\t\t\tparams.animated[effect].active = false;\r\n\t\t\t\t\tparams[effect] = animeInfo.tmFilterEffectValue;\r\n\r\n\t\t\t\t\t// special case for halfCosOscillation\r\n\t\t\t\t\tif (params.animated[effect].animType === 'halfCosOscillation') {\r\n\t\t\t\t\t\tif (params.animated[effect].val1 !== animeInfo.tmFilterEffectValue) {\r\n\t\t\t\t\t\t\tparams.animated[effect].val2 = params.animated[effect].val1;\r\n\t\t\t\t\t\t\tparams.animated[effect].val1 = animeInfo.tmFilterEffectValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _assignFilters(placeable, filters, bulkLoading = false) {\r\n\t\tif (filters == null || placeable == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Assign all filters to the placeable\r\n\t\tlet animeInfos = placeable.document.getFlag('tokenmagic', 'animeInfo');\r\n\t\tfor (const filterInfo of filters) {\r\n\t\t\t// if bulkloading is on, we update with terminal value if it exists\r\n\t\t\tif (bulkLoading) {\r\n\t\t\t\tlet params = filterInfo.tmFilters.tmParams;\r\n\t\t\t\t_loadPersistedValues(params, animeInfos);\r\n\t\t\t}\r\n\t\t\t_assignFilter(placeable, filterInfo);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _assignFilter(placeable, filterInfo) {\r\n\t\tif (filterInfo == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Do not assign the filter if it has been explicitly set as not applicable to the current user\r\n\t\tif (!isApplicableUser(filterInfo.tmFilters.tmParams)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet workingFilterInfo = duplicate(filterInfo);\r\n\t\tworkingFilterInfo.tmFilters.tmParams.placeableId = placeable.id;\r\n\t\tworkingFilterInfo.tmFilters.tmParams.placeableType = placeable._TMFXgetPlaceableType();\r\n\t\tlet filter = new FilterType[workingFilterInfo.tmFilters.tmFilterType](workingFilterInfo.tmFilters.tmParams);\r\n\t\tsetFilter(placeable, filter);\r\n\t}\r\n\r\n\tfunction _loadFilters(placeables, bulkLoading = true) {\r\n\t\tif (!(placeables == null)) {\r\n\t\t\tplaceables\r\n\t\t\t\t.slice()\r\n\t\t\t\t.reverse()\r\n\t\t\t\t.forEach((placeable) => {\r\n\t\t\t\t\t_singleLoadFilters(placeable, bulkLoading);\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _singleLoadFilters(placeable, bulkLoading = false) {\r\n\t\tlet placeableType = placeable._TMFXgetPlaceableType();\r\n\t\tif (placeableType === PlaceableType.TEMPLATE) {\r\n\t\t\tlet updateData = placeable.document.getFlag('tokenmagic', 'templateData');\r\n\t\t\tif (!(updateData == null)) {\r\n\t\t\t\tplaceable.document.tmfxTextureAlpha = placeable._TMFXgetSprite().alpha = updateData.opacity;\r\n\t\t\t\tplaceable.document.tmfxTint = updateData.tint;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet filters = placeable.document.getFlag('tokenmagic', 'filters');\r\n\t\tif (!(filters == null)) {\r\n\t\t\tif (placeableType === PlaceableType.TEMPLATE) {\r\n\t\t\t\t// get the first filterId to assign tmfxPreset\r\n\t\t\t\tplaceable.document.tmfxPreset = filters[0].tmFilters.tmFilterId;\r\n\t\t\t}\r\n\t\t\t_assignFilters(placeable, filters, bulkLoading);\r\n\t\t}\r\n\t\tplaceable.loadingRequest = false;\r\n\t}\r\n\r\n\tfunction _fxPseudoEqual(flagObject, filterObject) {\r\n\t\tfunction isObject(object) {\r\n\t\t\treturn object != null && typeof object === 'object';\r\n\t\t}\r\n\r\n\t\tconst flagKeys = Object.keys(flagObject);\r\n\r\n\t\tfor (const flagKey of flagKeys) {\r\n\t\t\tlet flagValue = flagObject[flagKey];\r\n\t\t\tconst filterValue = filterObject[flagKey];\r\n\t\t\tconst areObjects = isObject(flagValue) && isObject(filterValue);\r\n\r\n\t\t\tif (areObjects && !_fxPseudoEqual(flagValue, filterValue)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// handling the Infinity exception with loops... thanks to JSON serialization...\r\n\t\t\tif (!areObjects && flagKey === 'loops' && flagValue === null) {\r\n\t\t\t\tflagValue = Infinity; // not nice, but works ! :-)=\r\n\t\t\t}\r\n\r\n\t\t\tif (!areObjects && flagValue !== filterValue) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction _updateTemplateData(data, options, placeableType) {\r\n\t\tif (!options.hasOwnProperty('flags') || !options.flags.hasOwnProperty('tokenmagic')) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (data == null || !data.hasOwnProperty('_id')) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet placeable = getPlaceableById(data._id, placeableType);\r\n\t\tif (placeable == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet updateData = placeable.document.getFlag('tokenmagic', 'templateData');\r\n\t\tif (!(updateData == null)) {\r\n\t\t\tplaceable._TMFXgetSprite().alpha = updateData.opacity;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _updateFilters(data, options, placeableType) {\r\n\t\tif (\r\n\t\t\t!(\r\n\t\t\t\toptions.hasOwnProperty('flags') &&\r\n\t\t\t\toptions.flags.hasOwnProperty('tokenmagic') &&\r\n\t\t\t\t(options.flags.tokenmagic.hasOwnProperty('filters') || options.flags.tokenmagic.hasOwnProperty('-=filters'))\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (data == null || !data.hasOwnProperty('_id')) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet placeable = getPlaceableById(data._id, placeableType);\r\n\t\tif (placeable == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Shortcut when all filters are deleted\r\n\t\tif (options.flags.tokenmagic.hasOwnProperty('-=filters')) {\r\n\t\t\tAnime.removeAnimation(data._id); // removing animations on this placeable\r\n\t\t\tthis._clearImgFiltersByPlaceable(placeable); // clearing the filters (owned by tokenmagic)\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet filters = placeable.document.getFlag('tokenmagic', 'filters');\r\n\t\tif (filters == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// CROSS-RESEARCH between the anime map and tokenmagic flags to add, delete or update filters on this placeable\r\n\r\n\t\t// we begin by detecting deleted filters\r\n\t\tfor (let anime of Anime.getAnimeMap().values()) {\r\n\t\t\t// we test all the animes that are supposed to be on the placeable\r\n\t\t\tif (anime.puppet.placeableId === placeable.id) {\r\n\t\t\t\t// is the animation present in the tokenmagic flags for this placeable ?\r\n\t\t\t\t// and is it applicable to the current user?\r\n\t\t\t\tlet foundFilter = false;\r\n\t\t\t\tfilters.forEach((filterFlag) => {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tanime.puppet.filterId === filterFlag.tmFilters.tmFilterId &&\r\n\t\t\t\t\t\tanime.puppet.filterInternalId === filterFlag.tmFilters.tmFilterInternalId &&\r\n\t\t\t\t\t\tanime.puppet.placeableId === filterFlag.tmFilters.tmParams.placeableId &&\r\n\t\t\t\t\t\tisApplicableUser(filterFlag.tmFilters.tmParams)\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\t// we find it !\r\n\t\t\t\t\t\tfoundFilter = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Not found, the animation is removed from the AnimeMap as well as the filter on the placeable\r\n\t\t\t\tif (!foundFilter) {\r\n\t\t\t\t\tAnime.removeAnimationByFilterId(data._id, anime.puppet.filterId);\r\n\t\t\t\t\tthis._clearImgFiltersByPlaceable(placeable, anime.puppet.filterId);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// we test each tokenmagic filter flag in the placeable\r\n\t\tfilters.forEach((filterFlag) => {\r\n\t\t\tif (filterFlag.tmFilters.hasOwnProperty('tmParams')) {\r\n\t\t\t\t// we get the puppets in anime corresponding to this placeable\r\n\t\t\t\tlet puppets = Anime.getPuppetsByParams(filterFlag.tmFilters.tmParams);\r\n\t\t\t\tif (puppets.length > 0) {\r\n\t\t\t\t\t// we found corresponding filters\r\n\t\t\t\t\tfor (const puppet of puppets) {\r\n\t\t\t\t\t\t// we update if needed\r\n\t\t\t\t\t\tif (!_fxPseudoEqual(filterFlag.tmFilters.tmParams, puppet)) {\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t!puppet.hasOwnProperty('updateId') ||\r\n\t\t\t\t\t\t\t\t(puppet.hasOwnProperty('updateId') && puppet.updateId !== filterFlag.tmFilters.tmParams.updateId)\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tpuppet.setTMParams(duplicate(filterFlag.tmFilters.tmParams));\r\n\t\t\t\t\t\t\t\tpuppet.normalizeTMParams();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// this is a new filter, we assign it to the placeable\r\n\t\t\t\t\t_assignFilter(placeable, filterFlag);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfunction _clearImgFiltersByPlaceable(placeable, filterId = null) {\r\n\t\tif (placeable == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet filterById = filterId != null && typeof filterId === 'string';\r\n\r\n\t\tfunction destroyClearedFilters(theFilters) {\r\n\t\t\tif (theFilters instanceof Array) {\r\n\t\t\t\tlet tmFilters = theFilters.filter((filter) =>\r\n\t\t\t\t\tfilterById\r\n\t\t\t\t\t\t? filter.hasOwnProperty('filterId') && filter.filterId === filterId\r\n\t\t\t\t\t\t: filter.hasOwnProperty('filterId')\r\n\t\t\t\t);\r\n\r\n\t\t\t\tfor (const filter of tmFilters) {\r\n\t\t\t\t\tfilter.enabled = false;\r\n\t\t\t\t\tfilter.destroy();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction filterTheFiltering(theFilters) {\r\n\t\t\tif (theFilters instanceof Array) {\r\n\t\t\t\tlet tmFilters = theFilters.filter((filter) =>\r\n\t\t\t\t\tfilterById\r\n\t\t\t\t\t\t? !(filter.hasOwnProperty('filterId') && filter.filterId === filterId)\r\n\t\t\t\t\t\t: !filter.hasOwnProperty('filterId')\r\n\t\t\t\t);\r\n\t\t\t\treturn tmFilters.length === 0 ? null : tmFilters;\r\n\t\t\t}\r\n\t\t\treturn theFilters;\r\n\t\t}\r\n\r\n\t\tlet sprite = placeable._TMFXgetSprite();\r\n\t\tif (sprite != null) {\r\n\t\t\tdestroyClearedFilters(sprite.filters);\r\n\t\t\tsprite.filters = filterTheFiltering(sprite.filters);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function _importPresetContent(content, options = {}) {\r\n\t\t// In internal, we can force overwrite\r\n\t\tif (!options.hasOwnProperty('overwrite')) {\r\n\t\t\toptions.overwrite = game.settings.get('tokenmagic', 'importOverwrite');\r\n\t\t}\r\n\r\n\t\t///////////////////////////////////////////////\r\n\t\t// Checking the imported object format\r\n\r\n\t\tlog('import -> checking import file format...');\r\n\t\tif (!(content instanceof Array) || content.length < 1) {\r\n\t\t\terror('import -> file format check KO !');\r\n\t\t\terror(i18n('TMFX.preset.import.format.failure'));\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tlog('import -> file format check OK !');\r\n\t\t// check object format end\r\n\t\t/////////////////////////////////////////////////\r\n\r\n\t\tlet check = true;\r\n\r\n\t\t///////////////////////////////////////////////\r\n\t\t// Checking the imported content\r\n\t\tlog('import -> checking import file content...');\r\n\t\tfor (const element of content) {\r\n\t\t\tif (\r\n\t\t\t\telement.hasOwnProperty('name') &&\r\n\t\t\t\ttypeof element.name === 'string' &&\r\n\t\t\t\telement.hasOwnProperty('params') &&\r\n\t\t\t\telement.params instanceof Array\r\n\t\t\t) {\r\n\t\t\t\tfor (const effect of element.params) {\r\n\t\t\t\t\tif (!(effect.hasOwnProperty('filterType') && FilterType.hasOwnProperty(effect.filterType))) {\r\n\t\t\t\t\t\tcheck = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!check) break;\r\n\t\t\t} else {\r\n\t\t\t\tcheck = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!check) {\r\n\t\t\terror('import -> file content check KO !');\r\n\t\t\terror(i18n('TMFX.preset.import.format.failure'));\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tlog('import -> file content check OK !');\r\n\r\n\t\t// check content end\r\n\t\t/////////////////////////////////////////////////\r\n\r\n\t\t// The preset libray must be replaced ?\r\n\t\tif (options.hasOwnProperty('replaceLibrary') && options.replaceLibrary) {\r\n\t\t\tawait game.settings.set('tokenmagic', 'presets', content);\r\n\t\t\tlog('import -> preset library replaced');\r\n\t\t\tlog(i18n('TMFX.preset.import.success'));\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tlet pst = game.settings.get('tokenmagic', 'presets');\r\n\t\tlet it = 0;\r\n\t\tfor (const element of content) {\r\n\t\t\tconst preset = pst.find((el) => el.name === element.name);\r\n\t\t\tif (preset == null) {\r\n\t\t\t\tlog('import -> add: ' + element.name);\r\n\t\t\t\tpst.push(element);\r\n\t\t\t\tit++;\r\n\t\t\t} else {\r\n\t\t\t\tif (options.hasOwnProperty('overwrite') && options.overwrite) {\r\n\t\t\t\t\tconst index = pst.indexOf(preset);\r\n\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\tlog('import -> overwrite: ' + element.name);\r\n\t\t\t\t\t\tpst[index] = element;\r\n\t\t\t\t\t\tit++;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twarn('import -> ignored: ' + element.name + ' -> already exists');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tawait game.settings.set('tokenmagic', 'presets', pst);\r\n\t\tlog('import -> ' + it + ' preset(s) added to the library');\r\n\t\tlog(i18n('TMFX.preset.import.success'));\r\n\t\treturn true;\r\n\t}\r\n\r\n\tasync function _importTemplateSettingsContent(content, options = {}) {\r\n\t\t///////////////////////////////////////////////\r\n\t\t// Checking the imported object format\r\n\r\n\t\tlog('import -> checking import file format...');\r\n\t\tif (!(content instanceof Object)) {\r\n\t\t\terror('import -> file format check KO !');\r\n\t\t\terror(i18n('TMFX.preset.import.format.failure'));\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tlog('import -> file format check OK !');\r\n\r\n\t\t// check object format end\r\n\t\t/////////////////////////////////////////////////\r\n\r\n\t\tawait game.settings.set('tokenmagic', 'autoTemplateSettings', content);\r\n\t\tlog('import -> automatic template settings replaced');\r\n\t\tlog(i18n('TMFX.preset.import.success'));\r\n\t\treturn true;\r\n\t}\r\n\r\n\tasync function resetPresetLibrary() {\r\n\t\tif (!game.user.isGM) return;\r\n\r\n\t\tif (confirm(i18n('TMFX.preset.reset.message'))) {\r\n\t\t\ttry {\r\n\t\t\t\tawait game.settings.set('tokenmagic', 'presets', allPresets);\r\n\t\t\t\tui.notifications.info(i18n('TMFX.preset.reset.success'));\r\n\t\t\t} catch (e) {\r\n\t\t\t\terror(e.message);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync function importPresetLibraryFromURL(url, options = {}) {\r\n\t\ttry {\r\n\t\t\t$.getJSON(url, async function (content) {\r\n\t\t\t\treturn await _importPresetContent(content, options);\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\terror(e.message);\r\n\t\t\terror(i18n('TMFX.preset.import.failure'));\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tasync function importPresetLibraryFromPath(path, options = {}) {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(path);\r\n\t\t\tconst content = await response.json();\r\n\r\n\t\t\treturn await _importPresetContent(content, options);\r\n\t\t} catch (e) {\r\n\t\t\terror(e.message);\r\n\t\t\terror(i18n('TMFX.preset.import.failure'));\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tasync function importTemplateSettingsFromPath(path, options = {}) {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(path);\r\n\t\t\tconst content = await response.json();\r\n\r\n\t\t\treturn await _importTemplateSettingsContent(content, options);\r\n\t\t} catch (e) {\r\n\t\t\terror(e.message);\r\n\t\t\terror(i18n('TMFX.preset.import.failure'));\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tasync function importPresetLibrary() {\r\n\t\tconst path = 'modules/tokenmagic/import';\r\n\t\tnew FilePicker({\r\n\t\t\ttype: 'json',\r\n\t\t\tcurrent: path,\r\n\t\t\tcallback: importPresetLibraryFromPath,\r\n\t\t}).browse();\r\n\t}\r\n\r\n\tfunction exportPresetLibrary(exportName = 'tmfx-presets') {\r\n\t\tlet pst = game.settings.get('tokenmagic', 'presets');\r\n\t\tif (pst == null || typeof pst !== 'object') return false;\r\n\t\texportObjectAsJson(pst, exportName);\r\n\t}\r\n\r\n\tasync function importTemplateSettings() {\r\n\t\tconst path = 'modules/tokenmagic/import';\r\n\t\tnew FilePicker({\r\n\t\t\ttype: 'json',\r\n\t\t\tcurrent: path,\r\n\t\t\tcallback: importTemplateSettingsFromPath,\r\n\t\t}).browse();\r\n\t}\r\n\r\n\tfunction exportTemplateSettings(exportName = 'tmfx-template-settings') {\r\n\t\tlet pst = game.settings.get('tokenmagic', 'autoTemplateSettings');\r\n\t\tif (pst == null || typeof pst !== 'object') return false;\r\n\t\texportObjectAsJson(pst, exportName);\r\n\t}\r\n\r\n\tfunction getPresets(libraryName = PresetsLibrary.MAIN) {\r\n\t\tlet pst = game.settings.get('tokenmagic', 'presets');\r\n\t\tif (pst == null || typeof pst !== 'object') return [];\r\n\t\treturn pst.filter((preset) => preset.library === libraryName);\r\n\t}\r\n\r\n\tfunction _getPresetTemplateDefaultTexture(presetName, presetLibrary = PresetsLibrary.TEMPLATE) {\r\n\t\tlet pst = game.settings.get('tokenmagic', 'presets');\r\n\t\tconst preset = pst.find((el) => el['name'] === presetName && el['library'] === presetLibrary);\r\n\t\tif (!(preset == null) && preset.hasOwnProperty('defaultTexture')) return fixPath(preset.defaultTexture);\r\n\t\telse return null;\r\n\t}\r\n\r\n\tfunction getPreset(presetName) {\r\n\t\tlet pName = null,\r\n\t\t\tpLibrary = null;\r\n\t\tlet argIsObj = presetName instanceof Object;\r\n\t\tconst { name, library, ...adjustmentProp } = argIsObj ? presetName : {};\r\n\t\tif (argIsObj) {\r\n\t\t\tif (presetName.hasOwnProperty('name')) {\r\n\t\t\t\tpName = presetName.name;\r\n\t\t\t}\r\n\t\t\tif (presetName.hasOwnProperty('library')) {\r\n\t\t\t\tpLibrary = presetName.library;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tpName = presetName;\r\n\t\t}\r\n\r\n\t\tif (pLibrary == null || typeof pLibrary !== 'string') {\r\n\t\t\tpLibrary = PresetsLibrary.MAIN;\r\n\t\t}\r\n\r\n\t\tif (typeof pName !== 'string') return undefined;\r\n\r\n\t\tlet pst = game.settings.get('tokenmagic', 'presets');\r\n\t\tif (pst == null || typeof pst !== 'object') return undefined;\r\n\r\n\t\tconst preset = pst.find((el) => el['name'] === pName && el['library'] === pLibrary);\r\n\t\tif (!(preset == null) && preset.hasOwnProperty('params') && preset.params instanceof Array) {\r\n\t\t\tfor (const [filterProp, filterPropVal] of Object.entries(adjustmentProp)) {\r\n\t\t\t\t//log(`getPreset ${filterProp}: ${filterPropVal}`);\r\n\t\t\t\tfor (const param of preset.params) {\r\n\t\t\t\t\tif (param.hasOwnProperty(filterProp)) {\r\n\t\t\t\t\t\tparam[filterProp] = filterPropVal;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn deepClone(preset.params);\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tasync function deletePreset(presetName, silent = false) {\r\n\t\tif (!game.user.isGM) {\r\n\t\t\tif (!silent) ui.notifications.warn(i18n('TMFX.preset.delete.permission.failure'));\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet pName = null,\r\n\t\t\tpLibrary = null;\r\n\r\n\t\tif (presetName instanceof Object) {\r\n\t\t\tif (presetName.hasOwnProperty('name')) {\r\n\t\t\t\tpName = presetName.name;\r\n\t\t\t}\r\n\t\t\tif (presetName.hasOwnProperty('library')) {\r\n\t\t\t\tpLibrary = presetName.library;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tpName = presetName;\r\n\t\t}\r\n\r\n\t\tif (pLibrary == null || typeof pLibrary !== 'string') {\r\n\t\t\tpLibrary = PresetsLibrary.MAIN;\r\n\t\t}\r\n\r\n\t\tif (typeof pName !== 'string') {\r\n\t\t\tif (!silent) ui.notifications.error(i18n('TMFX.preset.delete.params.failure'));\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet pst = game.settings.get('tokenmagic', 'presets');\r\n\t\tif (pst == null) {\r\n\t\t\tif (!silent) ui.notifications.warn(i18n('TMFX.preset.delete.empty.failure'));\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet state = true;\r\n\t\tconst preset = pst.find((el) => el['name'] === pName && el['library'] === pLibrary);\r\n\r\n\t\tif (preset == null) {\r\n\t\t\tif (!silent) ui.notifications.warn(i18n('TMFX.preset.delete.notfound.failure'));\r\n\t\t\tstate = false;\r\n\t\t} else {\r\n\t\t\tconst index = pst.indexOf(preset);\r\n\t\t\tif (index > -1) {\r\n\t\t\t\tpst.splice(index, 1);\r\n\t\t\t\ttry {\r\n\t\t\t\t\tawait game.settings.set('tokenmagic', 'presets', pst);\r\n\t\t\t\t\tif (!silent) ui.notifications.info(i18n('TMFX.preset.delete.success'));\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tif (!silent) ui.notifications.error(e.message);\r\n\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\tstate = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn state;\r\n\t}\r\n\r\n\tasync function addPreset(presetName, params, silent = false) {\r\n\t\tif (!game.user.isGM) {\r\n\t\t\tif (!silent) ui.notifications.warn(i18n('TMFX.preset.add.permission.failure'));\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet pName = null,\r\n\t\t\tpLibrary = null,\r\n\t\t\tpDefaultTexture = null;\r\n\t\tif (presetName instanceof Object) {\r\n\t\t\tif (presetName.hasOwnProperty('name')) {\r\n\t\t\t\tpName = presetName.name;\r\n\t\t\t}\r\n\t\t\tif (presetName.hasOwnProperty('library')) {\r\n\t\t\t\tpLibrary = presetName.library;\r\n\t\t\t}\r\n\t\t\tif (presetName.hasOwnProperty('defaultTexture')) {\r\n\t\t\t\tpDefaultTexture = fixPath(presetName.defaultTexture);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tpName = presetName;\r\n\t\t}\r\n\r\n\t\tif (pLibrary == null || typeof pLibrary !== 'string') {\r\n\t\t\tpLibrary = PresetsLibrary.MAIN;\r\n\t\t}\r\n\r\n\t\tif (typeof pDefaultTexture !== 'string') {\r\n\t\t\tpDefaultTexture = null;\r\n\t\t}\r\n\r\n\t\tif (typeof pName !== 'string' && !(params instanceof Array)) {\r\n\t\t\tif (!silent) ui.notifications.error(i18n('TMFX.preset.add.params.failure'));\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfor (const param of params) {\r\n\t\t\tparam.filterId = pName;\r\n\t\t}\r\n\r\n\t\tlet pst = game.settings.get('tokenmagic', 'presets');\r\n\t\tlet presetObject = {};\r\n\t\tpresetObject.name = pName;\r\n\t\tpresetObject.library = pLibrary;\r\n\t\tpresetObject.params = params;\r\n\t\tif (pDefaultTexture != null) {\r\n\t\t\tpresetObject.defaultTexture = pDefaultTexture;\r\n\t\t}\r\n\r\n\t\tlet state = true;\r\n\t\tif (pst == null) {\r\n\t\t\tpst = [presetObject];\r\n\t\t} else {\r\n\t\t\tconst preset = pst.find((el) => el['name'] === pName && el['library'] === pLibrary);\r\n\t\t\tif (preset == null) pst.push(presetObject);\r\n\t\t\telse {\r\n\t\t\t\tif (!silent) ui.notifications.warn(i18n('TMFX.preset.add.duplicate.failure'));\r\n\t\t\t\tstate = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (state) {\r\n\t\t\ttry {\r\n\t\t\t\tawait game.settings.set('tokenmagic', 'presets', pst);\r\n\t\t\t\tif (!silent) ui.notifications.info(i18n('TMFX.preset.add.success'));\r\n\t\t\t} catch (e) {\r\n\t\t\t\tif (!silent) ui.notifications.error(e.message);\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t\tstate = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn state;\r\n\t}\r\n\r\n\treturn {\r\n\t\taddFilters: addFilters,\r\n\t\taddFiltersOnSelected: addFiltersOnSelected,\r\n\t\taddFiltersOnTargeted: addFiltersOnTargeted,\r\n\t\taddUpdateFilters: addUpdateFilters,\r\n\t\taddUpdateFiltersOnSelected: addUpdateFiltersOnSelected,\r\n\t\taddUpdateFiltersOnTargeted: addUpdateFiltersOnTargeted,\r\n\t\tdeleteFilters: deleteFilters,\r\n\t\tdeleteFiltersOnSelected: deleteFiltersOnSelected,\r\n\t\tdeleteFiltersOnTargeted: deleteFiltersOnTargeted,\r\n\t\tupdateFilters: updateFilters,\r\n\t\tupdateFiltersOnSelected: updateFiltersOnSelected,\r\n\t\tupdateFiltersOnTargeted: updateFiltersOnTargeted,\r\n\t\tupdateFiltersByPlaceable: updateFiltersByPlaceable,\r\n\t\thasFilterType: hasFilterType,\r\n\t\thasFilterId: hasFilterId,\r\n\t\timportTemplateSettings: importTemplateSettings,\r\n\t\timportTemplateSettingsFromPath: importTemplateSettingsFromPath,\r\n\t\texportTemplateSettings: exportTemplateSettings,\r\n\t\texportPresetLibrary: exportPresetLibrary,\r\n\t\timportPresetLibrary: importPresetLibrary,\r\n\t\timportPresetLibraryFromURL: importPresetLibraryFromURL,\r\n\t\timportPresetLibraryFromPath: importPresetLibraryFromPath,\r\n\t\tresetPresetLibrary: resetPresetLibrary,\r\n\t\tgetPresets: getPresets,\r\n\t\tgetPreset: getPreset,\r\n\t\taddPreset: addPreset,\r\n\t\tdeletePreset: deletePreset,\r\n\t\tgetControlledPlaceables: getControlledPlaceables,\r\n\t\tgetTargetedTokens: getTargetedTokens,\r\n\t\tgetPlaceableById: getPlaceableById,\r\n\t\t_assignFilters: _assignFilters,\r\n\t\t_loadFilters: _loadFilters,\r\n\t\t_clearImgFiltersByPlaceable: _clearImgFiltersByPlaceable,\r\n\t\t_getAnimeMap: Anime.getAnimeMap,\r\n\t\t_updateFilters: _updateFilters,\r\n\t\t_updateTemplateData: _updateTemplateData,\r\n\t\t_singleLoadFilters: _singleLoadFilters,\r\n\t\t_cachedContainer: _cachedContainer,\r\n\t\t_checkFilterId: _checkFilterId,\r\n\t\t_getPresetTemplateDefaultTexture: _getPresetTemplateDefaultTexture,\r\n\t};\r\n}\r\n\r\nexport const Magic = TokenMagic();\r\n\r\nasync function compilingShaders() {\r\n\t// Caching filters to prevent freezing on first-time loading (shader compilation time)\r\n\t// https://www.html5gamedevs.com/topic/43652-shader-compile-performance/\r\n\r\n\tlet params = { enabled: true, dummy: true };\r\n\r\n\tMagic._cachedContainer.filters = [];\r\n\tconst filterTypes = Object.keys(FilterType);\r\n\tfor (const filterType of filterTypes) {\r\n\t\tparams.filterType = filterType;\r\n\t\tlog(`Caching ${filterType}`);\r\n\t\tMagic._cachedContainer.filters.push(new FilterType[filterType](params));\r\n\t}\r\n\r\n\tlog('Compiling shaders...');\r\n\tlet tmpRenderTexture = new PIXI.RenderTexture.create({ width: 4, height: 4 });\r\n\t// A call to render triggers the compilation of all the shaders bound to the filters.\r\n\tcanvas.app.renderer.render(Magic._cachedContainer, { renderTexture: tmpRenderTexture });\r\n\tlog('Shaders compiled for the GPU and ready!');\r\n}\r\n\r\nfunction initSocketListener() {\r\n\t// Activate the listener only for the One\r\n\tconst theOne = game.users.find((user) => user.isGM && user.active);\r\n\tif (theOne && game.user !== theOne) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Listener the listening\r\n\tgame.socket.on(moduleTM, async (data) => {\r\n\t\tif (data == null || !data.hasOwnProperty('tmAction')) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tasync function updateFlags(targetFlag) {\r\n\t\t\t// getting the scene coming from the socket\r\n\t\t\tlet scene = game.scenes.get(data.tmViewedScene);\r\n\t\t\tif (scene == null) return;\r\n\r\n\t\t\t// preparing flag data (with -= if the data is null)\r\n\t\t\tlet updateData;\r\n\t\t\tif (data.tmFlag == null) updateData = { [`flags.tokenmagic.-=${targetFlag}`]: null };\r\n\t\t\telse updateData = { [`flags.tokenmagic.${targetFlag}`]: data.tmFlag };\r\n\t\t\tupdateData['_id'] = data.tmPlaceableId;\r\n\r\n\t\t\t// updating the placeable in the scene\r\n\t\t\tawait scene.updateEmbeddedDocuments(data.tmPlaceableType, [updateData]);\r\n\t\t}\r\n\r\n\t\tswitch (data.tmAction) {\r\n\t\t\tcase SocketAction.SET_FLAG:\r\n\t\t\t\tawait updateFlags(`filters`);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase SocketAction.SET_ANIME_FLAG:\r\n\t\t\t\tawait updateFlags(`animeInfo`);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n}\r\n\r\nasync function requestLoadFilters(placeable, startTimeout = 0) {\r\n\tlet reqTimer;\r\n\tplaceable.loadingRequest = true;\r\n\r\n\tfunction launchRequest(placeable) {\r\n\t\treqTimer = setTimeout(() => {\r\n\t\t\tif (placeable == null) return;\r\n\t\t\tlet check = placeable._TMFXcheckSprite();\r\n\t\t\tif (check == null) {\r\n\t\t\t\tplaceable.loadingRequest = false;\r\n\t\t\t\treturn;\r\n\t\t\t} else if (check) Magic._singleLoadFilters(placeable);\r\n\t\t\telse launchRequest(placeable);\r\n\t\t}, 35);\r\n\t}\r\n\r\n\tfunction setRequestTimeOut() {\r\n\t\tsetTimeout(() => {\r\n\t\t\tclearTimeout(reqTimer);\r\n\t\t}, 2000);\r\n\t}\r\n\r\n\tsetTimeout(() => {\r\n\t\tsetRequestTimeOut();\r\n\t\tlaunchRequest(placeable);\r\n\t}, startTimeout);\r\n}\r\n\r\nfunction getAnchor(direction, angle, shapeType) {\r\n\tif (shapeType === 'circle' || shapeType === 'rect') return { x: 0.5, y: 0.5 };\r\n\r\n\t// Compute emanation anchor point from the orthonormal bounding rect containing the polygon.\r\n\t// Not complete (to rework later), but ok with cardinal and half-cardinal directions\r\n\tlet dirRad = (direction * Math.PI) / 180;\r\n\tlet angleRad = (angle * Math.PI) / 180;\r\n\r\n\tlet cosRa1 = Math.cos(dirRad - angleRad / 2);\r\n\tlet rsinRa1 = -Math.sin(dirRad - angleRad / 2);\r\n\tlet cosRa2 = Math.cos(dirRad + angleRad / 2);\r\n\tlet rsinRa2 = -Math.sin(dirRad + angleRad / 2);\r\n\r\n\tlet x = 0,\r\n\t\ty = 1;\r\n\r\n\tif (cosRa1 < 0 && cosRa2 < 0) {\r\n\t\tx = 1;\r\n\t} else if (cosRa1 < 0 || cosRa2 < 0) {\r\n\t\tx = (Math.sin(-dirRad - Math.PI / 2) + 1) / 2;\r\n\t}\r\n\r\n\tif (rsinRa1 < 0 && rsinRa2 < 0) {\r\n\t\ty = 0;\r\n\t} else if (rsinRa1 < 0 || rsinRa2 < 0) {\r\n\t\ty = (Math.cos(-dirRad - Math.PI / 2) + 1) / 2;\r\n\t}\r\n\r\n\treturn { x: x, y: y };\r\n}\r\n\r\nfunction onMeasuredTemplateConfig(data, html) {\r\n\tif (!isVideoDisabled()) {\r\n\t\thtml[0].querySelector('.file-picker').dataset.type = 'imagevideo';\r\n\t}\r\n\r\n\tfunction compare(a, b) {\r\n\t\tif (a.name < b.name) return -1;\r\n\t\tif (a.name > b.name) return 1;\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tlet tmTemplate = data.object;\r\n\r\n\tif (isNewerVersion(game.version, '0.8')) {\r\n\t\ttmTemplate = tmTemplate.object;\r\n\t}\r\n\r\n\tlet opacity = tmTemplate.template.alpha;\r\n\tlet tint = '';\r\n\tlet currentPreset = emptyPreset;\r\n\r\n\t// getting custom data\r\n\tlet tmfxTemplateData = tmTemplate.document.getFlag('tokenmagic', 'templateData');\r\n\tif (!(tmfxTemplateData == null) && tmfxTemplateData instanceof Object) {\r\n\t\topacity = tmTemplate.document.tmfxTextureAlpha = tmfxTemplateData.opacity;\r\n\t\ttint = tmTemplate.document.tmfxTint = tmfxTemplateData.tint ? PIXI.utils.hex2string(tmfxTemplateData.tint) : '';\r\n\r\n\t\tif (tmfxTemplateData.preset !== undefined) currentPreset = tmfxTemplateData.preset;\r\n\t}\r\n\tlet filters = tmTemplate.document.getFlag('tokenmagic', 'filters');\r\n\tlet presets = Magic.getPresets(PresetsLibrary.TEMPLATE);\r\n\r\n\tif (filters && filters instanceof Array && filters.length >= 1) currentPreset = filters[0].tmFilters.tmFilterId;\r\n\r\n\t// forming our injected html\r\n\tlet tmfxValues = '';\r\n\tlet selected = '';\r\n\ttmfxValues += `<option value=\"${emptyPreset}\"></option>`;\r\n\tpresets.sort(compare).forEach((preset) => {\r\n\t\tselected = preset.name === currentPreset ? ' selected' : '';\r\n\t\ttmfxValues += `<option value=\"${preset.name}\"${selected}>${preset.name}</option>`;\r\n\t});\r\n\r\n\tlet divPreset = `\r\n    <div class=\"form-group\">\r\n        <label>${i18n('TMFX.template.opacity')}</label>\r\n        <div class=\"form-fields\">\r\n            <input type=\"range\" name=\"flags.tokenmagic.templateData.opacity\" value=\"${opacity}\" min=\"0.0\" max=\"1.0\" step=\"0.05\" data-dtype=\"Number\"/>\r\n            <span class=\"range-value\">${opacity}</span>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label>${i18n('TMFX.template.fx')}</label>\r\n        <select class=\"tmfx\" name=\"flags.tokenmagic.templateData.preset\" data-dtype=\"String\">\r\n        ${tmfxValues}\r\n        </select>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label>${i18n('TMFX.template.tint')}</label>\r\n        <div class=\"form-fields\">\r\n            <input class=\"color\" type=\"text\" name=\"flags.tokenmagic.templateData.tint\" value=\"${tint}\"/>\r\n            <input type=\"color\" value=\"${tint}\" data-edit=\"flags.tokenmagic.templateData.tint\"/>\r\n        </div>\r\n    </div>\r\n    `;\r\n\r\n\t// injecting\r\n\tconst htmlForm = html.find('.form-group');\r\n\thtmlForm.last().after(divPreset);\r\n\r\n\t$(html).css({ 'min-height': '525px' });\r\n}\r\n\r\n/* -------------------------------------------- */\r\n/*  Setup Management                            */\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('ready', () => {\r\n\tlog('Hook -> ready');\r\n\ttmfxDataMigration();\r\n\tinitSocketListener();\r\n\twindow.TokenMagic = Magic;\r\n\r\n\tif (!game.modules.get('lib-wrapper')?.active && game.user.isGM)\r\n\t\tui.notifications.warn(\"The 'Token Magic FX' module recommends to install and activate the 'libWrapper' module.\");\r\n\r\n\tHooks.on('renderMeasuredTemplateConfig', onMeasuredTemplateConfig);\r\n});\r\n\r\n/* -------------------------------------------- */\r\n/*  Canvas Management                           */\r\n/* -------------------------------------------- */\r\n\r\nHooks.once('canvasInit', (canvas) => {\r\n\tif (!isFilterCachingDisabled()) {\r\n\t\tlog('Init -> canvasInit -> caching shaders');\r\n\t\tcompilingShaders();\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('canvasInit', (canvas) => {\r\n\tlog('Hook -> canvasInit');\r\n\tautosetPaddingMode();\r\n\tAnime.deactivateAnimation();\r\n\tAnime.resetAnimation();\r\n});\r\n\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('canvasReady', (canvas) => {\r\n\tlog('Hook -> canvasReady');\r\n\tif (!window.hasOwnProperty('TokenMagic')) {\r\n\t\twindow.TokenMagic = Magic;\r\n\t}\r\n\tif (canvas == null) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst tokens = canvas.tokens.placeables;\r\n\tMagic._loadFilters(tokens);\r\n\tconst tiles = canvas.tiles.placeables;\r\n\tMagic._loadFilters(tiles);\r\n\tconst drawings = canvas.drawings.placeables;\r\n\tMagic._loadFilters(drawings);\r\n\tconst templates = canvas.templates.placeables;\r\n\tMagic._loadFilters(templates);\r\n\r\n\tAnime.activateAnimation();\r\n});\r\n\r\n/* -------------------------------------------- */\r\n/*  Scenes Management                           */\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('deleteScene', (document) => {\r\n\tif (document.id !== game.user.viewedScene) return;\r\n\tAnime.deactivateAnimation();\r\n\tAnime.resetAnimation();\r\n});\r\n\r\n/* -------------------------------------------- */\r\n/*  Settings Management                         */\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('closeSettingsConfig', () => {\r\n\tautosetPaddingMode();\r\n});\r\n\r\n/* -------------------------------------------- */\r\n/*  Tokens Management                           */\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('createToken', (document) => {\r\n\tif (document.parent.id !== game.user.viewedScene) return;\r\n\r\n\tif (document.flags?.tokenmagic?.filters) {\r\n\t\tlet placeable = getPlaceableById(document._id, PlaceableType.TOKEN);\r\n\t\trequestLoadFilters(placeable, 250);\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('deleteToken', (_, document) => {\r\n\tif (!(document == null || !document._id)) {\r\n\t\tAnime.removeAnimation(document._id);\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('updateToken', (document, options) => {\r\n\tif (document.parent.id !== game.user.viewedScene) return;\r\n\r\n\tif (['img', 'tint', 'height', 'width', 'name'].some((k) => k in options)) {\r\n\t\tlet placeable = getPlaceableById(document._id, PlaceableType.TOKEN);\r\n\t\tAnime.removeAnimation(document._id); // removing animations on this placeable\r\n\t\tMagic._clearImgFiltersByPlaceable(placeable); // clearing the filters (owned by tokenmagic)\r\n\t\trequestLoadFilters(placeable, 250);\r\n\t} else {\r\n\t\tMagic._updateFilters(document, options, PlaceableType.TOKEN);\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n/*  Tiles Management                            */\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('createTile', (document) => {\r\n\tif (document.parent.id !== game.user.viewedScene) return;\r\n\r\n\tif (document.flags?.tokenmagic?.filters) {\r\n\t\tconst placeable = getPlaceableById(document._id, PlaceableType.TILE);\r\n\t\trequestLoadFilters(placeable, 250);\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('deleteTile', (_, document) => {\r\n\tif (!(document == null || !document._id)) {\r\n\t\tAnime.removeAnimation(document._id);\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('updateTile', (document, options) => {\r\n\tif (document.parent.id !== game.user.viewedScene) return;\r\n\r\n\tif (options.texture?.src || options.overhead) {\r\n\t\tconst placeable = getPlaceableById(document._id, PlaceableType.TILE);\r\n\t\tAnime.removeAnimation(document._id); // removing animations on this placeable\r\n\t\tMagic._clearImgFiltersByPlaceable(placeable); // clearing the filters (owned by tokenmagic)\r\n\t\trequestLoadFilters(placeable, 250);\r\n\t} else {\r\n\t\tMagic._updateFilters(document, options, PlaceableType.TILE);\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n/*  Drawings Management                         */\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('createDrawing', (document) => {\r\n\tif (document.parent.id !== game.user.viewedScene) return;\r\n\r\n\tif (document.flags?.tokenmagic?.filters) {\r\n\t\tlet placeable = getPlaceableById(document._id, PlaceableType.DRAWING);\r\n\t\trequestLoadFilters(placeable, 250);\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('deleteDrawing', (_, document) => {\r\n\tif (!(document == null || !document._id)) {\r\n\t\tAnime.removeAnimation(document._id);\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('updateDrawing', (document, options) => {\r\n\tif (document.parent.id !== game.user.viewedScene) return;\r\n\r\n\tif (!options.flags?.tokenmagic || options.x || options.y) {\r\n\t\tlet placeable = getPlaceableById(document._id, PlaceableType.DRAWING);\r\n\t\tAnime.removeAnimation(document._id); // removing animations on this placeable\r\n\t\tMagic._clearImgFiltersByPlaceable(placeable); // clearing the filters (owned by tokenmagic)\r\n\t\trequestLoadFilters(placeable, 250);\r\n\t} else {\r\n\t\tMagic._updateFilters(document, options, PlaceableType.DRAWING);\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n/*  Measured Templates Management               */\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('createMeasuredTemplate', (document) => {\r\n\tconst scene = document.parent;\r\n\tif (!(scene == null) && scene.id === game.user.viewedScene && document.flags?.tokenmagic?.filters) {\r\n\t\tlet placeable = getPlaceableById(document._id, PlaceableType.TEMPLATE);\r\n\t\trequestLoadFilters(placeable, 250); // request to load filters (when pixi containers are ready)\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('deleteMeasuredTemplate', (_, document) => {\r\n\tif (!(document == null || !document._id)) {\r\n\t\tAnime.removeAnimation(document._id);\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('updateMeasuredTemplate', (document, options) => {\r\n\tif (document.parent.id !== game.user.viewedScene) return;\r\n\tlet placeable = getPlaceableById(document._id, PlaceableType.TEMPLATE);\r\n\tif (!placeable) return;\r\n\r\n\tif (options.texture) {\r\n\t\tAnime.removeAnimation(document._id); // removing animations on this placeable\r\n\t\tMagic._clearImgFiltersByPlaceable(placeable); // clearing the filters (owned by tokenmagic)\r\n\t\trequestLoadFilters(placeable, 250); // querying filters reload (when pixi containers are ready)\r\n\t} else {\r\n\t\tif (!placeable.loadingRequest) {\r\n\t\t\tMagic._updateFilters(document, options, PlaceableType.TEMPLATE);\r\n\t\t\tMagic._updateTemplateData(document, options, PlaceableType.TEMPLATE);\r\n\t\t}\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('preUpdateMeasuredTemplate', async (document, options) => {\r\n\tfunction getTint() {\r\n\t\tif (options.flags?.tokenmagic?.templateData?.tint !== undefined) {\r\n\t\t\treturn options.flags.tokenmagic.templateData.tint;\r\n\t\t} else if (document.flags?.tokenmagic?.tint !== undefined) {\r\n\t\t\treturn document.flags.tokenmagic.tint;\r\n\t\t} else return '';\r\n\t}\r\n\r\n\tfunction getFX() {\r\n\t\tif (options.flags?.tokenmagic?.templateData?.preset !== undefined) {\r\n\t\t\treturn options.flags.tokenmagic.templateData.preset;\r\n\t\t} else if (document.flags?.tokenmagic?.templateData?.preset !== undefined) {\r\n\t\t\treturn document.flags.tokenmagic.templateData.preset;\r\n\t\t} else if (document.tmfxPreset !== undefined) {\r\n\t\t\treturn document.tmfxPreset;\r\n\t\t} else return emptyPreset;\r\n\t}\r\n\r\n\tfunction getDirection() {\r\n\t\tif (options.direction) {\r\n\t\t\treturn options.direction;\r\n\t\t} else if (document.direction) {\r\n\t\t\treturn document.direction;\r\n\t\t} else return 0;\r\n\t}\r\n\r\n\tfunction getAngle() {\r\n\t\tif (options.angle) {\r\n\t\t\treturn options.angle;\r\n\t\t} else if (document.angle) {\r\n\t\t\treturn document.angle;\r\n\t\t} else return 0;\r\n\t}\r\n\r\n\tfunction getShapeType() {\r\n\t\tif (options.t) {\r\n\t\t\treturn options.t;\r\n\t\t} else if (document.t) {\r\n\t\t\treturn document.t;\r\n\t\t} else return 'ITSBAD';\r\n\t}\r\n\r\n\tlet measuredTemplateInstance = canvas.templates.get(document._id);\r\n\tlet templateTint = getTint();\r\n\tlet presetUpdate = options.flags?.tokenmagic?.templateData?.preset !== undefined;\r\n\tlet tintUpdate = options.flags?.tokenmagic?.templateData?.tint !== undefined;\r\n\tlet directionUpdate = options.hasOwnProperty('direction');\r\n\tlet angleUpdate = options.hasOwnProperty('angle');\r\n\tlet typeUpdate = options.hasOwnProperty('t');\r\n\r\n\tif (tintUpdate)\r\n\t\toptions.flags.tokenmagic.templateData.tint = templateTint !== '' ? Color.from(templateTint).valueOf() : null;\r\n\r\n\tif (presetUpdate || tintUpdate || directionUpdate || typeUpdate || angleUpdate) {\r\n\t\tlet templateFX = getFX();\r\n\t\tif (templateFX !== emptyPreset) {\r\n\t\t\tlet anchor = getAnchor(getDirection(), getAngle(), getShapeType());\r\n\t\t\tlet presetOptions = {\r\n\t\t\t\tname: templateFX,\r\n\t\t\t\tlibrary: PresetsLibrary.TEMPLATE,\r\n\t\t\t\tanchorX: anchor.x,\r\n\t\t\t\tanchorY: anchor.y,\r\n\t\t\t};\r\n\t\t\tif (templateTint && templateTint !== '') {\r\n\t\t\t\tpresetOptions.color = Color.from(templateTint).valueOf();\r\n\t\t\t}\r\n\t\t\tlet preset = Magic.getPreset(presetOptions);\r\n\t\t\tif (!(preset == null)) {\r\n\t\t\t\tif (presetUpdate) await measuredTemplateInstance.TMFXaddFilters(preset, true);\r\n\t\t\t\telse await measuredTemplateInstance.TMFXaddUpdateFilters(preset);\r\n\t\t\t}\r\n\t\t} else await measuredTemplateInstance.TMFXdeleteFilters();\r\n\t}\r\n});\r\n\r\n/* -------------------------------------------- */\r\n\r\nHooks.on('preCreateMeasuredTemplate', (document) => {\r\n\t// Do nothing if we're on a 3D Canvas scene\r\n\tif (game.Levels3DPreview?._active) return;\r\n\r\n\t// Apply auto-preset if needed\r\n\tconst templates = TokenMagicSettings.getSystemTemplates();\r\n\tif (templates?.enabled) {\r\n\t\ttemplates.preCreateMeasuredTemplate?.(document);\r\n\t}\r\n\r\n\tconst hasFlags = document.flags;\r\n\tlet hasPreset = false;\r\n\tlet hasTint = false;\r\n\tlet hasOpacity = false;\r\n\tlet hasFlagsNoOptions = false;\r\n\r\n\tif (hasFlags && document.flags.tokenmagic?.options) {\r\n\t\tconst opt = document.flags.tokenmagic.options;\r\n\t\tif (opt.tmfxPreset) {\r\n\t\t\tdocument.tmfxPreset = opt.tmfxPreset;\r\n\t\t\thasPreset = true;\r\n\t\t}\r\n\t\tif (opt.tmfxTint) {\r\n\t\t\tdocument.tmfxTint = opt.tmfxTint;\r\n\t\t\thasTint = true;\r\n\t\t}\r\n\t\tif (opt.tmfxTextureAlpha) {\r\n\t\t\tdocument.tmfxTextureAlpha = opt.tmfxTextureAlpha;\r\n\t\t\thasOpacity = true;\r\n\t\t}\r\n\t\tif (opt.tmfxTexture) {\r\n\t\t\tdocument.texture = opt.tmfxTexture;\r\n\t\t\tdocument.updateSource({ texture: opt.tmfxTexture });\r\n\t\t}\r\n\t} else hasFlagsNoOptions = true;\r\n\r\n\tlet hasTexture = document.texture && document.texture !== '';\r\n\tlet newFilters = [];\r\n\r\n\tlet tmfxBaseFlags = { tokenmagic: { filters: null, templateData: null, options: null } };\r\n\tif (hasFlags && hasFlagsNoOptions) {\r\n\t\t// the measured template comes with tokenmagic flags ? It is a copy ! We do nothing.\r\n\t\tif (document.flags.tokenmagic) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdocument.flags = mergeObject(document.flags, tmfxBaseFlags, true, true);\r\n\t}\r\n\r\n\t// normalizing color to value if needed\r\n\tif (hasTint && typeof document.tmfxTint !== 'number') {\r\n\t\tdocument.tmfxTint = Color.from(document.tmfxTint).valueOf();\r\n\t}\r\n\r\n\tlet tmfxFiltersData = null;\r\n\r\n\t// FX to add ?\r\n\tif (hasPreset) {\r\n\t\t// Compute shader anchor point\r\n\t\tlet anchor = getAnchor(document.direction, document.angle, document.t);\r\n\r\n\t\t// Constructing the preset search object\r\n\t\tlet pstSearch = {\r\n\t\t\tname: document.tmfxPreset,\r\n\t\t\tlibrary: PresetsLibrary.TEMPLATE,\r\n\t\t\tanchorX: anchor.x,\r\n\t\t\tanchorY: anchor.y,\r\n\t\t};\r\n\r\n\t\t// Adding tint if needed\r\n\t\tif (hasTint) pstSearch.color = document.tmfxTint;\r\n\r\n\t\t// Retrieving the preset\r\n\t\tlet preset = Magic.getPreset(pstSearch);\r\n\r\n\t\tif (!(preset == null) && preset instanceof Array) {\r\n\t\t\tlet defaultTex = Magic._getPresetTemplateDefaultTexture(pstSearch.name);\r\n\t\t\tif (!(defaultTex == null) && !hasTexture) {\r\n\t\t\t\tdocument.updateSource({ texture: defaultTex });\r\n\t\t\t}\r\n\r\n\t\t\tlet persist = true;\r\n\r\n\t\t\t// Constructing the filter flag parameters\r\n\t\t\tfor (const params of preset) {\r\n\t\t\t\tif (!params.filterType || !FilterType.hasOwnProperty(params.filterType)) {\r\n\t\t\t\t\t// one invalid ? all rejected.\r\n\t\t\t\t\tpersist = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// getPreset MUST provide a filter id\r\n\t\t\t\tif (!params.filterId) {\r\n\t\t\t\t\tpersist = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!params.enabled || !(typeof params.enabled === 'boolean')) {\r\n\t\t\t\t\tparams.enabled = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparams.placeableId = null;\r\n\t\t\t\tparams.filterInternalId = randomID();\r\n\t\t\t\tparams.filterOwner = game.data.userId;\r\n\t\t\t\tparams.placeableType = PlaceableType.TEMPLATE;\r\n\r\n\t\t\t\tnewFilters.push({\r\n\t\t\t\t\ttmFilters: {\r\n\t\t\t\t\t\ttmFilterId: params.filterId,\r\n\t\t\t\t\t\ttmFilterInternalId: params.filterInternalId,\r\n\t\t\t\t\t\ttmFilterType: params.filterType,\r\n\t\t\t\t\t\ttmFilterOwner: params.filterOwner,\r\n\t\t\t\t\t\ttmParams: params,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (persist) tmfxFiltersData = newFilters;\r\n\t\t}\r\n\t} else {\r\n\t\tdocument.tmfxPreset = emptyPreset;\r\n\t}\r\n\r\n\tif (!hasOpacity) document.tmfxTextureAlpha = 1;\r\n\tif (!hasTint) document.tmfxTint = null;\r\n\r\n\tlet tmfxFlags = {\r\n\t\ttemplateData: {\r\n\t\t\topacity: document.tmfxTextureAlpha,\r\n\t\t\ttint: document.tmfxTint,\r\n\t\t},\r\n\t\tfilters: tmfxFiltersData,\r\n\t\toptions: null,\r\n\t};\r\n\tdocument.updateSource({ flags: { tokenmagic: tmfxFlags } });\r\n});\r\n","import { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterAdjustment extends PIXI.filters.AdjustmentFilter {\r\n\tconstructor(params) {\r\n\t\tsuper();\r\n\t\tthis.enabled = false;\r\n\t\tthis.gamma = 1;\r\n\t\tthis.saturation = 1;\r\n\t\tthis.contrast = 1;\r\n\t\tthis.brightness = 1;\r\n\t\tthis.red = 1;\r\n\t\tthis.green = 1;\r\n\t\tthis.blue = 1;\r\n\t\tthis.alpha = 1;\r\n\t\tthis.zOrder = 30;\r\n\t\tthis.animating = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n}\r\n","import { isAnimationDisabled } from '../module/tokenmagic.js';\r\n\r\nexport class Anime {\r\n\tconstructor(puppet) {\r\n\t\tconst self = this;\r\n\t\tthis.puppet = puppet;\r\n\t\tthis.animated = null;\r\n\t\tthis.animeId = randomID();\r\n\r\n\t\t// Time/synchronization related variables\r\n\t\tthis.frameTime = {};\r\n\t\tthis.elapsedTime = {};\r\n\t\tthis.loopElapsedTime = {};\r\n\t\tthis.loops = {};\r\n\t\tthis.internalLoops = {};\r\n\t\tthis.ping = {};\r\n\t\tthis.pauseBetweenElapsedTime = {};\r\n\t\tthis.pauseBetween = {};\r\n\t\tthis.shutdown = {};\r\n\r\n\t\tif (!(this.puppet == null)) {\r\n\t\t\tif (\r\n\t\t\t\tthis.puppet.hasOwnProperty('animated') &&\r\n\t\t\t\t!(this.puppet.animated == null) &&\r\n\t\t\t\ttypeof this.puppet.animated === 'object' &&\r\n\t\t\t\tObject.keys(this.puppet.animated).length > 0\r\n\t\t\t) {\r\n\t\t\t\tthis.initAnimatedInternals(this.puppet.animated);\r\n\t\t\t\tthis.animated = this.puppet.animated; // easy access to the puppet's animodes\r\n\t\t\t}\r\n\t\t\tAnime.addAnimation(self); // ready to tick\r\n\t\t}\r\n\t}\r\n\r\n\tstatic rgbToValue(r, g, b) {\r\n\t\treturn (r << 16) | (g << 8) | b;\r\n\t}\r\n\r\n\tstatic valueToRgb(bin) {\r\n\t\tconst r = bin >> 16;\r\n\t\tconst g = (bin >> 8) & 0xff;\r\n\t\tconst b = bin & 0xff;\r\n\t\treturn [r, g, b];\r\n\t}\r\n\r\n\tstatic oscillation(elapsed, loopDuration, syncShift, val1, val2, func, isSync, xpi = Anime.twoPi) {\r\n\t\treturn (\r\n\t\t\t((val1 - val2) *\r\n\t\t\t\t(func(\r\n\t\t\t\t\txpi * (isSync ? Anime.getSynchronizedTime(loopDuration, syncShift) : elapsed / loopDuration + syncShift)\r\n\t\t\t\t) +\r\n\t\t\t\t\t1)) /\r\n\t\t\t\t2 +\r\n\t\t\tval2\r\n\t\t);\r\n\t}\r\n\r\n\tstatic colOscillation(elapsed, loopDuration, syncShift, val1, val2, isSync, xpi = Anime.twoPi) {\r\n\t\tconst rgbValue1 = Anime.valueToRgb(val1);\r\n\t\tconst rgbValue2 = Anime.valueToRgb(val2);\r\n\r\n\t\treturn Anime.rgbToValue(\r\n\t\t\tMath.floor(\r\n\t\t\t\tAnime.oscillation(elapsed, loopDuration, syncShift, rgbValue1[0], rgbValue2[0], Math.cos, isSync, xpi)\r\n\t\t\t),\r\n\t\t\tMath.floor(\r\n\t\t\t\tAnime.oscillation(elapsed, loopDuration, syncShift, rgbValue1[1], rgbValue2[1], Math.cos, isSync, xpi)\r\n\t\t\t),\r\n\t\t\tMath.floor(Anime.oscillation(elapsed, loopDuration, syncShift, rgbValue1[2], rgbValue2[2], Math.cos, isSync, xpi))\r\n\t\t);\r\n\t}\r\n\r\n\tstatic getSynchronizedTime(loopDuration, syncShift) {\r\n\t\treturn Anime._lastTime / loopDuration + syncShift;\r\n\t}\r\n\r\n\tstatic getSynchronizedRotation(loopDuration, syncShift) {\r\n\t\treturn (360 * ((Anime._lastTime + syncShift) % loopDuration)) / loopDuration;\r\n\t}\r\n\r\n\tstatic getPuppetsByParams(params) {\r\n\t\tlet puppetArray = [];\r\n\t\tAnime._animeMap.forEach((anime, id) => {\r\n\t\t\tif (\r\n\t\t\t\tanime.puppet.placeableId === params.placeableId &&\r\n\t\t\t\tanime.puppet.filterId === params.filterId &&\r\n\t\t\t\t(!anime.puppet.hasOwnProperty('filterInternalId') || anime.puppet.filterInternalId === params.filterInternalId)\r\n\t\t\t) {\r\n\t\t\t\tpuppetArray.push(anime.puppet);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn puppetArray;\r\n\t}\r\n\r\n\tstatic addAnimation(anime) {\r\n\t\tAnime._animeMap.set(anime.animeId, anime);\r\n\t\tAnime._resumeAnimation();\r\n\t}\r\n\r\n\tstatic removeAnimation(placeableId) {\r\n\t\tAnime._animeMap.forEach((anime, id) => {\r\n\t\t\tif (anime.puppet.placeableId === placeableId) {\r\n\t\t\t\tAnime._animeMap.delete(id);\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (Anime._animeMap.size === 0) {\r\n\t\t\tAnime._suspendAnimation();\r\n\t\t}\r\n\t}\r\n\r\n\tstatic removeAnimationByFilterId(placeableId, filterId) {\r\n\t\tAnime._animeMap.forEach((anime, id) => {\r\n\t\t\tif (anime.puppet.placeableId === placeableId && anime.puppet.filterId === filterId) {\r\n\t\t\t\tAnime._animeMap.delete(id);\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (Anime._animeMap.size === 0) {\r\n\t\t\tAnime._suspendAnimation();\r\n\t\t}\r\n\t}\r\n\r\n\tstatic resetAnimation() {\r\n\t\tAnime._animeMap = new Map();\r\n\t\tAnime._suspended = true;\r\n\t}\r\n\r\n\tstatic tick() {\r\n\t\tAnime._lastTime = canvas.app.ticker.lastTime;\r\n\t\tAnime._frameTime = Anime._lastTime - Anime._prevTime;\r\n\r\n\t\tfor (const [id, anime] of Anime._animeMap) {\r\n\t\t\tif (anime.puppet.enabled) {\r\n\t\t\t\tif (anime.puppet.hasOwnProperty('preComputation') && anime.puppet.placeableImg != null) {\r\n\t\t\t\t\tanime.puppet.preComputation();\r\n\t\t\t\t}\r\n\t\t\t\tif (anime.puppet.hasOwnProperty('animated') && !(anime.puppet.animated == null)) {\r\n\t\t\t\t\tanime.animate(Anime._frameTime);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tAnime._prevTime = Anime._lastTime;\r\n\t}\r\n\r\n\tstatic _suspendAnimation() {\r\n\t\tif (Anime._activated && !Anime._suspended && !isAnimationDisabled()) {\r\n\t\t\tAnime._detachFromTicker();\r\n\t\t}\r\n\t\tAnime._suspended = true;\r\n\t}\r\n\r\n\tstatic _resumeAnimation() {\r\n\t\tif (Anime._activated && Anime._suspended && !isAnimationDisabled()) {\r\n\t\t\tAnime._attachToTicker();\r\n\t\t}\r\n\t\tAnime._suspended = false;\r\n\t}\r\n\r\n\tstatic activateAnimation() {\r\n\t\tif (!Anime._activated && !Anime._suspended && !isAnimationDisabled()) {\r\n\t\t\tAnime._attachToTicker();\r\n\t\t}\r\n\t\tAnime._activated = true;\r\n\t}\r\n\r\n\tstatic deactivateAnimation() {\r\n\t\tif (Anime._activated && !Anime._suspended && !isAnimationDisabled()) {\r\n\t\t\tAnime._detachFromTicker();\r\n\t\t}\r\n\t\tAnime._activated = false;\r\n\t}\r\n\r\n\tstatic _attachToTicker() {\r\n\t\tcanvas.app.ticker.add(Anime.tick, this, PIXI.UPDATE_PRIORITY.LOW + 1);\r\n\t\tAnime._lastTime = canvas.app.ticker.lastTime;\r\n\t\tAnime._prevTime = Anime._lastTime;\r\n\t}\r\n\r\n\tstatic _detachFromTicker() {\r\n\t\tcanvas.app.ticker.remove(Anime.tick, this);\r\n\t\tAnime._lastTime = 0;\r\n\t\tAnime._prevTime = 0;\r\n\t}\r\n\r\n\tstatic getAnimeMap() {\r\n\t\treturn Anime._animeMap;\r\n\t}\r\n\r\n\tinitAnimatedInternals(animated) {\r\n\t\tObject.keys(animated).forEach((effect) => {\r\n\t\t\t// Internals init\r\n\t\t\tthis.initInternals(effect);\r\n\t\t});\r\n\t}\r\n\r\n\tinitInternals(effect) {\r\n\t\tthis.elapsedTime[effect] = 0;\r\n\t\tthis.loopElapsedTime[effect] = 0;\r\n\t\tthis.pauseBetweenElapsedTime[effect] = 0;\r\n\t\tthis.loops[effect] = 0;\r\n\t\tthis.internalLoops[effect] = 0;\r\n\t\tthis.frameTime[effect] = 0;\r\n\t\tthis.pauseBetween[effect] = false;\r\n\t\tthis.ping[effect] = false;\r\n\t\tthis.shutdown[effect] = false;\r\n\t}\r\n\r\n\thasInternals(effect) {\r\n\t\treturn this.elapsedTime.hasOwnProperty(effect);\r\n\t}\r\n\r\n\tanimate(frameTime) {\r\n\t\tfor (const effect of Object.keys(this.puppet.animated)) {\r\n\t\t\tif (this.animated[effect].active && this.cycleCheck(effect, frameTime)) {\r\n\t\t\t\tif (this[this.animated[effect].animType] != null) {\r\n\t\t\t\t\tthis[this.animated[effect].animType](effect);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.shutdown[effect]) {\r\n\t\t\t\t\tthis.animated[effect].active = false;\r\n\t\t\t\t\tthis.shutdown[effect] = false;\r\n\r\n\t\t\t\t\t// persists the value of an effect which is terminated.\r\n\t\t\t\t\tthis.persistTerminatedEffect(effect);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.loopElapsedTime[effect] += frameTime;\r\n\t\t\t\t\tthis.elapsedTime[effect] += frameTime;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.autoDisableCheck();\r\n\t}\r\n\r\n\tcycleCheck(effect, frameTime) {\r\n\t\tthis.frameTime[effect] = frameTime;\r\n\r\n\t\tif (this.isPauseBetweenLoop(effect, frameTime)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (this.loopElapsedTime[effect] > this.animated[effect].loopDuration) {\r\n\t\t\tthis.loopElapsedTime[effect] -= this.animated[effect].loopDuration;\r\n\t\t\tthis.ping[effect] = true;\r\n\r\n\t\t\tif (this.animated[effect].loops !== Infinity) {\r\n\t\t\t\tthis.loops[effect]++;\r\n\t\t\t\tthis.internalLoops[effect]++;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.loops[effect] >= this.animated[effect].loops) {\r\n\t\t\t\t// correction to stop exactly on the target value when the last loop end.\r\n\t\t\t\tthis.elapsedTime[effect] = this.internalLoops[effect] * this.animated[effect].loopDuration;\r\n\t\t\t\tthis.loops[effect] = 0;\r\n\t\t\t\tthis.loopElapsedTime[effect] = 0;\r\n\t\t\t\tthis.shutdown[effect] = true;\r\n\t\t\t} else if (this.animated[effect].pauseBetweenDuration > 0) {\r\n\t\t\t\tthis.elapsedTime[effect] = this.animated[effect].loopDuration;\r\n\t\t\t\tthis.pauseBetween[effect] = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tasync persistTerminatedEffect(effect) {\r\n\t\tif (!(this.puppet.filterOwner === game.data.userId)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet animeInfo;\r\n\t\tlet doInit = true;\r\n\t\tlet flag = this.puppet.targetPlaceable.document.getFlag('tokenmagic', 'animeInfo');\r\n\r\n\t\tif (flag) {\r\n\t\t\t// fastest than array.find\r\n\t\t\tfor (const animeinfo of flag.values()) {\r\n\t\t\t\tif (\r\n\t\t\t\t\tanimeinfo.tmFilterId === this.puppet.filterId &&\r\n\t\t\t\t\tanimeinfo.tmFilterInternalId === this.puppet.filterInternalId &&\r\n\t\t\t\t\tanimeinfo.tmFilterEffect === effect\r\n\t\t\t\t) {\r\n\t\t\t\t\tif (animeinfo && animeinfo instanceof Object) {\r\n\t\t\t\t\t\tanimeinfo.tmFilterEffectValue = this.puppet[effect];\r\n\t\t\t\t\t\tdoInit = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (doInit) {\r\n\t\t\tanimeInfo = [\r\n\t\t\t\t{\r\n\t\t\t\t\ttmFilterId: this.puppet.filterId,\r\n\t\t\t\t\ttmFilterInternalId: this.puppet.filterInternalId,\r\n\t\t\t\t\ttmFilterEffect: effect,\r\n\t\t\t\t\ttmFilterEffectValue: this.puppet[effect],\r\n\t\t\t\t},\r\n\t\t\t];\r\n\r\n\t\t\tif (flag) flag = flag.concat(animeInfo);\r\n\t\t\telse flag = animeInfo;\r\n\t\t}\r\n\r\n\t\tflag = duplicate(flag);\r\n\t\tawait this.puppet.targetPlaceable._TMFXsetAnimeFlag(flag);\r\n\t}\r\n\r\n\tautoDisableCheck() {\r\n\t\tif (!(this.puppet.autoDisable || this.puppet.autoDestroy)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!(this.puppet.filterOwner === game.data.userId)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.puppet.enabled === false && !this.puppet.autoDestroy) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (Object.values(this.animated).every((animeEffect) => animeEffect.active === false)) {\r\n\t\t\tthis.disableOrDestroy();\r\n\t\t}\r\n\t}\r\n\r\n\tasync disableOrDestroy() {\r\n\t\tif (this.puppet == null) return;\r\n\t\tconst placeable = this.puppet.targetPlaceable;\r\n\t\tif (placeable == null) return;\r\n\r\n\t\tif (this.puppet.autoDestroy) {\r\n\t\t\tawait window.TokenMagic.deleteFilters(placeable, this.puppet.filterId);\r\n\t\t} else {\r\n\t\t\tlet params = {};\r\n\t\t\tparams.filterType = this.puppet.filterType;\r\n\t\t\tparams.filterId = this.puppet.filterId;\r\n\t\t\tparams.enabled = false;\r\n\t\t\tawait window.TokenMagic.updateFiltersByPlaceable(placeable, [params]);\r\n\t\t}\r\n\t}\r\n\r\n\tisPauseBetweenLoop(effect, frametime) {\r\n\t\tif (this.pauseBetween[effect] && this.animated[effect].pauseBetweenDuration > 0) {\r\n\t\t\tthis.pauseBetweenElapsedTime[effect] += frametime;\r\n\t\t\tif (this.pauseBetweenElapsedTime[effect] < this.animated[effect].pauseBetweenDuration) {\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.pauseBetweenElapsedTime[effect] = 0;\r\n\t\t\t\treturn (this.pauseBetween[effect] = false);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpauseBetweenCheck(effect, frametime) {\r\n\t\tif (this.pauseStart[effect] && this.animated[effect].pauseStartDuration > 0) {\r\n\t\t\tthis.pauseStartElapsedTime[effect] += frametime;\r\n\t\t\tif (this.pauseStartElapsedTime[effect] < this.animated[effect].pauseStartDuration) {\r\n\t\t\t\treturn false;\r\n\t\t\t} else {\r\n\t\t\t\tthis.pauseStart[effect] = false;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tmoveToward(effect) {\r\n\t\tthis.puppet[effect] =\r\n\t\t\t((this.animated[effect].val1 - this.animated[effect].val2) / this.animated[effect].loopDuration) *\r\n\t\t\tthis.elapsedTime[effect];\r\n\t}\r\n\r\n\tcolorOscillation(effect) {\r\n\t\tthis.puppet[effect] = Anime.colOscillation(\r\n\t\t\tthis.elapsedTime[effect],\r\n\t\t\tthis.animated[effect].loopDuration,\r\n\t\t\tthis.animated[effect].syncShift,\r\n\t\t\tthis.animated[effect].val1,\r\n\t\t\tthis.animated[effect].val2,\r\n\t\t\tfalse\r\n\t\t);\r\n\t}\r\n\r\n\thalfColorOscillation(effect) {\r\n\t\tthis.puppet[effect] = Anime.colOscillation(\r\n\t\t\tthis.elapsedTime[effect],\r\n\t\t\tthis.animated[effect].loopDuration,\r\n\t\t\tthis.animated[effect].syncShift,\r\n\t\t\tthis.animated[effect].val1,\r\n\t\t\tthis.animated[effect].val2,\r\n\t\t\tfalse,\r\n\t\t\tMath.PI\r\n\t\t);\r\n\t}\r\n\r\n\tsyncColorOscillation(effect) {\r\n\t\tthis.puppet[effect] = Anime.colOscillation(\r\n\t\t\tthis.elapsedTime[effect],\r\n\t\t\tthis.animated[effect].loopDuration,\r\n\t\t\tthis.animated[effect].syncShift,\r\n\t\t\tthis.animated[effect].val1,\r\n\t\t\tthis.animated[effect].val2,\r\n\t\t\ttrue\r\n\t\t);\r\n\t}\r\n\r\n\tcosOscillation(effect) {\r\n\t\tthis.puppet[effect] = Anime.oscillation(\r\n\t\t\tthis.elapsedTime[effect],\r\n\t\t\tthis.animated[effect].loopDuration,\r\n\t\t\tthis.animated[effect].syncShift,\r\n\t\t\tthis.animated[effect].val1,\r\n\t\t\tthis.animated[effect].val2,\r\n\t\t\tMath.cos,\r\n\t\t\tfalse\r\n\t\t);\r\n\t}\r\n\r\n\thalfCosOscillation(effect) {\r\n\t\tthis.puppet[effect] = Anime.oscillation(\r\n\t\t\tthis.elapsedTime[effect],\r\n\t\t\tthis.animated[effect].loopDuration,\r\n\t\t\tthis.animated[effect].syncShift,\r\n\t\t\tthis.animated[effect].val1,\r\n\t\t\tthis.animated[effect].val2,\r\n\t\t\tMath.cos,\r\n\t\t\tfalse,\r\n\t\t\tMath.PI\r\n\t\t);\r\n\t}\r\n\r\n\tsinOscillation(effect) {\r\n\t\tthis.puppet[effect] = Anime.oscillation(\r\n\t\t\tthis.elapsedTime[effect],\r\n\t\t\tthis.animated[effect].loopDuration,\r\n\t\t\tthis.animated[effect].syncShift,\r\n\t\t\tthis.animated[effect].val1,\r\n\t\t\tthis.animated[effect].val2,\r\n\t\t\tMath.sin,\r\n\t\t\tfalse\r\n\t\t);\r\n\t}\r\n\r\n\thalfSinOscillation(effect) {\r\n\t\tthis.puppet[effect] = Anime.oscillation(\r\n\t\t\tthis.elapsedTime[effect],\r\n\t\t\tthis.animated[effect].loopDuration,\r\n\t\t\tthis.animated[effect].syncShift,\r\n\t\t\tthis.animated[effect].val1,\r\n\t\t\tthis.animated[effect].val2,\r\n\t\t\tMath.sin,\r\n\t\t\tfalse,\r\n\t\t\tMath.PI\r\n\t\t);\r\n\t}\r\n\r\n\tchaoticOscillation(effect) {\r\n\t\tthis.puppet[effect] = Anime.oscillation(\r\n\t\t\tthis.elapsedTime[effect],\r\n\t\t\tthis.animated[effect].loopDuration,\r\n\t\t\tthis.animated[effect].syncShift + Math.random() * this.animated[effect].chaosFactor,\r\n\t\t\tthis.animated[effect].val1,\r\n\t\t\tthis.animated[effect].val2,\r\n\t\t\tMath.cos,\r\n\t\t\tfalse\r\n\t\t);\r\n\t}\r\n\r\n\tsyncCosOscillation(effect) {\r\n\t\tthis.puppet[effect] = Anime.oscillation(\r\n\t\t\tthis.elapsedTime[effect],\r\n\t\t\tthis.animated[effect].loopDuration,\r\n\t\t\tthis.animated[effect].syncShift,\r\n\t\t\tthis.animated[effect].val1,\r\n\t\t\tthis.animated[effect].val2,\r\n\t\t\tMath.cos,\r\n\t\t\ttrue\r\n\t\t);\r\n\t}\r\n\r\n\tsyncSinOscillation(effect) {\r\n\t\tthis.puppet[effect] = Anime.oscillation(\r\n\t\t\tthis.elapsedTime[effect],\r\n\t\t\tthis.animated[effect].loopDuration,\r\n\t\t\tthis.animated[effect].syncShift,\r\n\t\t\tthis.animated[effect].val1,\r\n\t\t\tthis.animated[effect].val2,\r\n\t\t\tMath.sin,\r\n\t\t\ttrue\r\n\t\t);\r\n\t}\r\n\r\n\tsyncChaoticOscillation(effect) {\r\n\t\tthis.puppet[effect] = Anime.oscillation(\r\n\t\t\tthis.elapsedTime[effect],\r\n\t\t\tthis.animated[effect].loopDuration,\r\n\t\t\tthis.animated[effect].syncShift + Math.random() * this.animated[effect].chaosFactor,\r\n\t\t\tthis.animated[effect].val1,\r\n\t\t\tthis.animated[effect].val2,\r\n\t\t\tMath.cos,\r\n\t\t\ttrue\r\n\t\t);\r\n\t}\r\n\r\n\trotation(effect) {\r\n\t\tconst computedRotation = (360 * this.elapsedTime[effect]) / this.animated[effect].loopDuration;\r\n\t\tthis.puppet[effect] = this.animated[effect].clockWise ? computedRotation : 360 - computedRotation;\r\n\t}\r\n\r\n\tsyncRotation(effect) {\r\n\t\tconst computedRotation = Anime.getSynchronizedRotation(\r\n\t\t\tthis.animated[effect].loopDuration,\r\n\t\t\tthis.animated[effect].syncShift\r\n\t\t);\r\n\t\tthis.puppet[effect] = this.animated[effect].clockWise ? computedRotation : 360 - computedRotation;\r\n\t}\r\n\r\n\trandomNumber(effect) {\r\n\t\tconst randomNumber =\r\n\t\t\tMath.random() * (this.animated[effect].val2 - this.animated[effect].val1) + this.animated[effect].val1;\r\n\t\tif (this.animated[effect].wantInteger) {\r\n\t\t\tthis.puppet[effect] = Math.floor(randomNumber);\r\n\t\t} else {\r\n\t\t\tthis.puppet[effect] = randomNumber;\r\n\t\t}\r\n\t}\r\n\r\n\trandomNumberPerLoop(effect) {\r\n\t\tif (this._ringing(effect)) {\r\n\t\t\tthis.randomNumber(effect);\r\n\t\t}\r\n\t}\r\n\r\n\trandomColor(effect) {\r\n\t\tthis.puppet[effect] = Math.floor(Math.random() * 16777215);\r\n\t}\r\n\r\n\trandomColorPerLoop(effect) {\r\n\t\tif (this._ringing(effect)) {\r\n\t\t\tthis.randomColor(effect);\r\n\t\t}\r\n\t}\r\n\r\n\tmove(effect) {\r\n\t\tthis.puppet[effect] += this.animated[effect].speed * this.frameTime[effect];\r\n\t}\r\n\r\n\t_ringing(effect) {\r\n\t\tif (this.ping[effect]) {\r\n\t\t\tthis.ping[effect] = false;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nAnime._lastTime = 0;\r\nAnime._prevTime = 0;\r\nAnime._frameTime = 0;\r\nAnime._animeMap = new Map();\r\nAnime.twoPi = Math.PI * 2;\r\nAnime._activated = false;\r\nAnime._suspended = true;\r\n","import { getPlaceableById, getMinPadding, PlaceableType } from '../../../module/tokenmagic.js';\r\nimport '../../../module/proto/PlaceableObjectProto.js';\r\n\r\nPIXI.Filter.prototype.setTMParams = function (params) {\r\n\tthis.autoDisable = false;\r\n\tthis.autoDestroy = false;\r\n\tthis.gridPadding = 0;\r\n\tthis.boundsPadding = new PIXI.Point(0, 0);\r\n\tthis.currentPadding = 0;\r\n\tthis.recalculatePadding = true;\r\n\tthis.dummy = false;\r\n\tfoundry.utils.mergeObject(this, params);\r\n\tif (!this.dummy) {\r\n\t\tthis.rawPadding = this.rawPadding ?? this.padding ?? 0;\r\n\t\tthis.originalPadding = Math.max(this.rawPadding, getMinPadding());\r\n\t\tthis.assignPlaceable();\r\n\t\tthis.activateTransform();\r\n\t\tObject.defineProperty(this, 'padding', {\r\n\t\t\tget: function () {\r\n\t\t\t\tif (this.recalculatePadding) this.calculatePadding();\r\n\t\t\t\treturn this.currentPadding;\r\n\t\t\t},\r\n\t\t\tset: function (padding) {\r\n\t\t\t\tthis.rawPadding = padding;\r\n\t\t\t\tthis.originalPadding = Math.max(padding, getMinPadding());\r\n\t\t\t},\r\n\t\t});\r\n\t} else {\r\n\t\tthis.apply = function (filterManager, input, output, clear) {\r\n\t\t\tfilterManager.applyFilter(this, input, output, clear);\r\n\t\t};\r\n\t}\r\n};\r\n\r\nPIXI.Filter.prototype.getPlaceable = function () {\r\n\treturn getPlaceableById(this.placeableId, this.placeableType);\r\n};\r\n\r\nPIXI.Filter.prototype.getPlaceableType = function () {\r\n\treturn this.placeableType;\r\n};\r\n\r\nPIXI.Filter.prototype.calculatePadding = function () {\r\n\tconst target = this.placeableImg;\r\n\tlet width;\r\n\tlet height;\r\n\r\n\t{\r\n\t\tconst ang = !this.sticky && this.placeableType !== PlaceableType.TOKEN ? target.rotation : 0;\r\n\t\tconst sin = Math.sin(ang);\r\n\t\tconst cos = Math.cos(ang);\r\n\t\twidth = Math.abs(target.width * cos) + Math.abs(target.height * sin);\r\n\t\theight = Math.abs(target.width * sin) + Math.abs(target.height * cos);\r\n\t}\r\n\r\n\tif (this.gridPadding > 0) {\r\n\t\tconst gridSize = canvas.dimensions.size;\r\n\t\tthis.boundsPadding.x = this.boundsPadding.y = (this.gridPadding - 1) * gridSize;\r\n\t\tthis.boundsPadding.x += (gridSize - 1 - ((width + gridSize - 1) % gridSize)) / 2;\r\n\t\tthis.boundsPadding.y += (gridSize - 1 - ((height + gridSize - 1) % gridSize)) / 2;\r\n\t} else {\r\n\t\tthis.boundsPadding.x = this.boundsPadding.y = this.rawPadding;\r\n\t}\r\n\r\n\t{\r\n\t\tconst ang = this.sticky ? target.rotation : 0;\r\n\t\tconst sin = Math.sin(ang);\r\n\t\tconst cos = Math.cos(ang);\r\n\t\tthis.currentPadding =\r\n\t\t\tMath.max(\r\n\t\t\t\tMath.abs(this.boundsPadding.x * cos) + Math.abs(this.boundsPadding.y * sin),\r\n\t\t\t\tMath.abs(this.boundsPadding.x * sin) + Math.abs(this.boundsPadding.y * cos)\r\n\t\t\t) +\r\n\t\t\t(this.originalPadding - this.rawPadding);\r\n\t}\r\n\r\n\tthis.boundsPadding.x += (width - target.width) / 2;\r\n\tthis.boundsPadding.y += (height - target.height) / 2;\r\n\r\n\tconst scale = this.targetPlaceable.worldTransform.a;\r\n\r\n\tthis.boundsPadding.x *= scale;\r\n\tthis.boundsPadding.y *= scale;\r\n\tthis.currentPadding *= scale;\r\n};\r\n\r\nPIXI.Filter.prototype.assignPlaceable = function () {\r\n\tthis.targetPlaceable = this.getPlaceable();\r\n\tthis.targetPlaceable != null\r\n\t\t? (this.placeableImg = this.targetPlaceable._TMFXgetSprite())\r\n\t\t: (this.placeableImg = null);\r\n};\r\n\r\nPIXI.Filter.prototype.activateTransform = function () {\r\n\tthis.preComputation = this.filterTransform;\r\n\tthis.filterTransform();\r\n\r\n\tconst apply = this.apply;\r\n\tthis.apply = function (filterManager, input, output, clear, state) {\r\n\t\tif ('handleTransform' in this) {\r\n\t\t\tthis.handleTransform(state);\r\n\t\t}\r\n\t\treturn apply.apply(this, arguments);\r\n\t};\r\n};\r\n\r\nPIXI.Filter.prototype.filterTransform = function () {\r\n\tif (this.hasOwnProperty('zIndex')) {\r\n\t\tthis.targetPlaceable.zIndex = this.zIndex;\r\n\t}\r\n};\r\n\r\nPIXI.Filter.prototype.normalizeTMParams = function () {\r\n\tif (this.hasOwnProperty('animated') && !(this.animated == null)) {\r\n\t\t// Normalize animations properties\r\n\t\tObject.keys(this.animated).forEach((effect) => {\r\n\t\t\tif (this.animated[effect].active == null || typeof this.animated[effect].active != 'boolean') {\r\n\t\t\t\tthis.animated[effect].active = true;\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\tthis.animated[effect].loops == null ||\r\n\t\t\t\ttypeof this.animated[effect].loops != 'number' ||\r\n\t\t\t\tthis.animated[effect].loops <= 0\r\n\t\t\t) {\r\n\t\t\t\tthis.animated[effect].loops = Infinity;\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\tthis.animated[effect].loopDuration == null ||\r\n\t\t\t\ttypeof this.animated[effect].loopDuration != 'number' ||\r\n\t\t\t\tthis.animated[effect].loopDuration <= 0\r\n\t\t\t) {\r\n\t\t\t\tthis.animated[effect].loopDuration = 3000;\r\n\t\t\t}\r\n\t\t\tif (this.animated[effect].clockWise == null || typeof this.animated[effect].clockWise != 'boolean') {\r\n\t\t\t\tthis.animated[effect].clockWise = true;\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\tthis.animated[effect].pauseBetweenDuration == null ||\r\n\t\t\t\ttypeof this.animated[effect].pauseBetweenDuration != 'number' ||\r\n\t\t\t\tthis.animated[effect].pauseBetweenDuration <= 0\r\n\t\t\t) {\r\n\t\t\t\tthis.animated[effect].pauseBetweenDuration = 0;\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\tthis.animated[effect].syncShift == null ||\r\n\t\t\t\ttypeof this.animated[effect].syncShift != 'number' ||\r\n\t\t\t\tthis.animated[effect].syncShift < 0\r\n\t\t\t) {\r\n\t\t\t\tthis.animated[effect].syncShift = 0;\r\n\t\t\t}\r\n\t\t\tif (this.animated[effect].val1 == null || typeof this.animated[effect].val1 != 'number') {\r\n\t\t\t\tthis.animated[effect].val1 = 0;\r\n\t\t\t}\r\n\t\t\tif (this.animated[effect].val2 == null || typeof this.animated[effect].val2 != 'number') {\r\n\t\t\t\tthis.animated[effect].val2 = 0;\r\n\t\t\t}\r\n\t\t\tif (this.anime[this.animated[effect].animType] === undefined) {\r\n\t\t\t\tthis.animated[effect].animType = null;\r\n\t\t\t}\r\n\t\t\tif (this.animated[effect].speed == null || typeof this.animated[effect].speed != 'number') {\r\n\t\t\t\tthis.animated[effect].speed = 0;\r\n\t\t\t}\r\n\t\t\tif (this.animated[effect].chaosFactor == null || typeof this.animated[effect].chaosFactor != 'number') {\r\n\t\t\t\tthis.animated[effect].chaosFactor = 0.25;\r\n\t\t\t}\r\n\t\t\tif (this.animated[effect].wantInteger == null || typeof this.animated[effect].wantInteger != 'boolean') {\r\n\t\t\t\tthis.animated[effect].wantInteger = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.anime.hasInternals(effect)) {\r\n\t\t\t\tthis.anime.initInternals(effect);\r\n\t\t\t}\r\n\r\n\t\t\tthis.anime.animated = this.animated;\r\n\t\t});\r\n\t}\r\n};\r\n","import { PlaceableType, Magic, broadcast, SocketAction, mustBroadCast, isZOrderConfig } from '../tokenmagic.js';\r\nimport { emptyPreset, autoMinRank } from '../constants.js';\r\n\r\nexport var gMaxRank = autoMinRank;\r\n\r\nPlaceableObject.prototype.TMFXaddFilters = async function (paramsArray, replace = false) {\r\n\tawait Magic.addFilters(this, paramsArray, replace);\r\n};\r\n\r\nPlaceableObject.prototype.TMFXupdateFilters = async function (paramsArray) {\r\n\tawait Magic.updateFiltersByPlaceable(this, paramsArray);\r\n};\r\n\r\nPlaceableObject.prototype.TMFXaddUpdateFilters = async function (paramsArray) {\r\n\tawait Magic.addUpdateFilters(this, paramsArray);\r\n};\r\n\r\nPlaceableObject.prototype.TMFXdeleteFilters = async function (filterId = null) {\r\n\tawait Magic.deleteFilters(this, filterId);\r\n};\r\n\r\nPlaceableObject.prototype.TMFXhasFilterType = function (filterType) {\r\n\treturn Magic.hasFilterType(this, filterType);\r\n};\r\n\r\nPlaceableObject.prototype.TMFXhasFilterId = function (filterId) {\r\n\treturn Magic.hasFilterId(this, filterId);\r\n};\r\n\r\nPlaceableObject.prototype._TMFXsetFlag = async function (flag) {\r\n\tif (mustBroadCast()) broadcast(this, flag, SocketAction.SET_FLAG);\r\n\telse await this.document.setFlag('tokenmagic', 'filters', flag);\r\n};\r\n\r\nPlaceableObject.prototype._TMFXsetAnimeFlag = async function (flag) {\r\n\tif (mustBroadCast()) broadcast(this, flag, SocketAction.SET_ANIME_FLAG);\r\n\telse await this.document.setFlag('tokenmagic', 'animeInfo', flag);\r\n};\r\n\r\nPlaceableObject.prototype._TMFXunsetFlag = async function () {\r\n\tif (mustBroadCast()) broadcast(this, null, SocketAction.SET_FLAG);\r\n\telse await this.document.unsetFlag('tokenmagic', 'filters');\r\n};\r\n\r\nPlaceableObject.prototype._TMFXunsetAnimeFlag = async function () {\r\n\tif (mustBroadCast()) broadcast(this, null, SocketAction.SET_ANIME_FLAG);\r\n\telse await this.document.unsetFlag('tokenmagic', 'animeInfo');\r\n};\r\n\r\nPlaceableObject.prototype._TMFXgetSprite = function () {\r\n\tconst type = this._TMFXgetPlaceableType();\r\n\tswitch (type) {\r\n\t\tcase PlaceableType.TOKEN:\r\n\t\t\treturn this.mesh;\r\n\t\tcase PlaceableType.TILE:\r\n\t\t\treturn this.mesh ?? this.bg;\r\n\t\tcase PlaceableType.TEMPLATE:\r\n\t\t\treturn this.template;\r\n\t\tcase PlaceableType.DRAWING:\r\n\t\t\treturn this.hasText ? this.text : this.shape;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n};\r\n\r\nPlaceableObject.prototype._TMFXgetPlaceablePadding = function () {\r\n\t// get the placeable padding, by taking into account all filters and options\r\n\tlet accPadding = 0;\r\n\tconst filters = this._TMFXgetSprite().filters;\r\n\tif (filters instanceof Array) {\r\n\t\tfor (const filter of filters) {\r\n\t\t\tif (!filter.enabled) continue;\r\n\t\t\tif (canvas.app.renderer.filter.useMaxPadding) {\r\n\t\t\t\taccPadding = Math.max(accPadding, filter.padding);\r\n\t\t\t} else {\r\n\t\t\t\taccPadding += filter.padding;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn accPadding;\r\n};\r\n\r\nPlaceableObject.prototype._TMFXcheckSprite = function () {\r\n\tconst type = this._TMFXgetPlaceableType();\r\n\tswitch (type) {\r\n\t\tcase PlaceableType.TOKEN:\r\n\t\tcase PlaceableType.TILE:\r\n\t\t\treturn !(this.mesh == null);\r\n\t\tcase PlaceableType.TEMPLATE:\r\n\t\t\treturn !(this.template == null);\r\n\t\tcase PlaceableType.DRAWING:\r\n\t\t\treturn !(this.shape == null);\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n};\r\n\r\nPlaceableObject.prototype._TMFXgetMaxFilterRank = function () {\r\n\tconst sprite = this._TMFXgetSprite();\r\n\tif (sprite == null) {\r\n\t\treturn gMaxRank++;\r\n\t}\r\n\tif (sprite.filters == null) {\r\n\t\treturn gMaxRank++;\r\n\t} else {\r\n\t\tlet maxRank = Math.max(...sprite.filters.map((f) => f.rank), autoMinRank);\r\n\t\tgMaxRank = Math.max(maxRank, gMaxRank) + 1;\r\n\t\treturn gMaxRank;\r\n\t}\r\n};\r\n\r\nPlaceableObject.prototype._TMFXsetRawFilters = function (filters) {\r\n\tfunction insertFilter(filters) {\r\n\t\tfunction filterZOrderCompare(a, b) {\r\n\t\t\tif (a.zOrder < b.zOrder) return -1;\r\n\t\t\tif (a.zOrder > b.zOrder) return 1;\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tfunction filterRankCompare(a, b) {\r\n\t\t\tif (a.rank < b.rank) return -1;\r\n\t\t\tif (a.rank > b.rank) return 1;\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tif (!isZOrder) {\r\n\t\t\tif (!filters.hasOwnProperty('rank')) {\r\n\t\t\t\tlet maxRank = Math.max(...sprite.filters.map((f) => f.rank), autoMinRank);\r\n\t\t\t\tfilters.rank = maxRank + 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsprite.filters.push(filters);\r\n\t\tisZOrder ? sprite.filters.sort(filterZOrderCompare) : sprite.filters.sort(filterRankCompare);\r\n\t}\r\n\r\n\tfunction addFilter(filters) {\r\n\t\tif (!isZOrder && !filters.hasOwnProperty('rank')) {\r\n\t\t\tfilters.rank = autoMinRank;\r\n\t\t}\r\n\t\tsprite.filters = [filters];\r\n\t}\r\n\r\n\tconst isZOrder = isZOrderConfig();\r\n\tconst sprite = this._TMFXgetSprite();\r\n\tif (sprite == null) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif (filters == null) {\r\n\t\tsprite.filters = null;\r\n\t} else {\r\n\t\tsprite.filters == null ? addFilter(filters) : insertFilter(filters);\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\nPlaceableObject.prototype._TMFXunsetRawFilters = function () {\r\n\treturn this._TMFXsetRawFilters(null);\r\n};\r\n\r\nPlaceableObject.prototype._TMFXgetPlaceableType = function () {\r\n\tif (\r\n\t\t[PlaceableType.TOKEN, PlaceableType.TEMPLATE, PlaceableType.TILE, PlaceableType.DRAWING].includes(\r\n\t\t\tthis.constructor.embeddedName\r\n\t\t)\r\n\t)\r\n\t\treturn this.constructor.embeddedName;\r\n\treturn PlaceableType.NOT_SUPPORTED;\r\n};\r\n","export const defaultOpacity = 0.5;\r\nexport const emptyPreset = 'NOFX';\r\nexport const autoMinRank = 10000;\r\n","import { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterAscii extends PIXI.filters.AsciiFilter {\r\n\tconstructor(params) {\r\n\t\tsuper();\r\n\t\tthis.size = 8;\r\n\t\tthis.zOrder = 310;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n}\r\n","import { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterXBloom extends PIXI.filters.AdvancedBloomFilter {\r\n\tconstructor(params) {\r\n\t\tsuper();\r\n\r\n\t\tthis.enabled = false;\r\n\t\tthis.threshold = 0.5;\r\n\t\tthis.bloomScale = 1.0;\r\n\t\tthis.brightness = 1.0;\r\n\t\tthis.blur = 4.0;\r\n\t\tthis.quality = 4.0;\r\n\t\tthis.zOrder = 40;\r\n\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n}\r\n","import { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterDot extends PIXI.filters.DotFilter {\r\n\tconstructor(params) {\r\n\t\tsuper();\r\n\t\tthis.scale = 1;\r\n\t\tthis.angle = 5;\r\n\t\tthis.grayscale = true;\r\n\t\tthis.zOrder = 330;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n}\r\n","import { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\nimport { fixPath } from '../../module/tokenmagic.js';\r\n\r\nexport class FilterDistortion extends PIXI.filters.DisplacementFilter {\r\n\tconstructor(params) {\r\n\t\t// Loading distortion sprite\r\n\t\tvar displacementSpriteMask;\r\n\t\tvar spriteMaskPath;\r\n\t\tspriteMaskPath = params.hasOwnProperty('maskPath')\r\n\t\t\t? fixPath(params.maskPath)\r\n\t\t\t: 'modules/tokenmagic/fx/assets/distortion-1.png';\r\n\t\tdisplacementSpriteMask = PIXI.Sprite.from(spriteMaskPath);\r\n\t\tsuper(displacementSpriteMask);\r\n\r\n\t\t// Configuring distortion sprite\r\n\t\tthis.sprite = displacementSpriteMask;\r\n\t\tthis.wrapMode = PIXI.WRAP_MODES.REPEAT;\r\n\t\tthis.position = new PIXI.Point();\r\n\t\tthis.skew = new PIXI.Point();\r\n\t\tthis.pivot = new PIXI.Point();\r\n\t\tthis.anchorSet = 0.5;\r\n\t\tthis.transition = null;\r\n\t\tthis.padding = 15; // conf\r\n\t\tthis.enabled = false;\r\n\t\tthis.maskSpriteX = 0;\r\n\t\tthis.maskSpriteY = 0;\r\n\t\tthis.maskSpriteScaleX = 4;\r\n\t\tthis.maskSpriteScaleY = 4;\r\n\t\tthis.maskSpriteSkewX = 0;\r\n\t\tthis.maskSpriteSkewY = 0;\r\n\t\tthis.maskSpriteRotation = 0;\r\n\t\tthis.zOrder = 4000;\r\n\t\tthis.sticky = true;\r\n\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tthis.maskPath = spriteMaskPath;\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t\tthis.sprite.anchor.set(this.anchorSet);\r\n\t\t\tthis.sprite.texture.baseTexture.wrapMode = this.wrapMode;\r\n\t\t}\r\n\t}\r\n\r\n\tset maskSpriteX(value) {\r\n\t\tthis.position.x = value;\r\n\t}\r\n\r\n\tset maskSpriteY(value) {\r\n\t\tthis.position.y = value;\r\n\t}\r\n\r\n\tget maskSpriteX() {\r\n\t\treturn this.position.x;\r\n\t}\r\n\r\n\tget maskSpriteY() {\r\n\t\treturn this.position.y;\r\n\t}\r\n\r\n\tset maskSpriteScaleX(value) {\r\n\t\tthis.scale.x = value;\r\n\t}\r\n\r\n\tset maskSpriteScaleY(value) {\r\n\t\tthis.scale.y = value;\r\n\t}\r\n\r\n\tget maskSpriteScaleX() {\r\n\t\treturn this.scale.x;\r\n\t}\r\n\r\n\tget maskSpriteScaleY() {\r\n\t\treturn this.scale.y;\r\n\t}\r\n\r\n\tset maskSpriteRotation(value) {\r\n\t\tthis.rotation = value;\r\n\t}\r\n\r\n\tget maskSpriteRotation() {\r\n\t\treturn this.rotation;\r\n\t}\r\n\r\n\tset maskSpriteSkewX(value) {\r\n\t\tthis.skew.x = value;\r\n\t}\r\n\r\n\tget maskSpriteSkewX() {\r\n\t\treturn this.skew.x;\r\n\t}\r\n\r\n\tset maskSpriteSkewY(value) {\r\n\t\tthis.skew.y = value;\r\n\t}\r\n\r\n\tget maskSpriteSkewY() {\r\n\t\treturn this.skew.y;\r\n\t}\r\n\r\n\tset maskSpritePivotX(value) {\r\n\t\tthis.pivot.x = value;\r\n\t}\r\n\r\n\tget maskSpritePivotX() {\r\n\t\treturn this.pivot.x;\r\n\t}\r\n\r\n\tset maskSpritePivotY(value) {\r\n\t\tthis.pivot.y = value;\r\n\t}\r\n\r\n\tget maskSpritePivotY() {\r\n\t\treturn this.pivot.y;\r\n\t}\r\n\r\n\thandleTransform() {\r\n\t\tthis.sprite.position.x = this.targetPlaceable.x + this.placeableImg.x + this.position.x;\r\n\t\tthis.sprite.position.y = this.targetPlaceable.y + this.placeableImg.y + this.position.y;\r\n\t\tthis.sprite.skew.x = this.skew.x;\r\n\t\tthis.sprite.skew.x = this.skew.y;\r\n\t\tthis.sprite.rotation = this.rotation;\r\n\t\tthis.sprite.pivot.x = this.pivot.x;\r\n\t\tthis.sprite.pivot.y = this.pivot.y;\r\n\r\n\t\tif (this.sticky) this.sprite.rotation += this.placeableImg.rotation;\r\n\r\n\t\tthis.sprite.transform.updateTransform(canvas.stage.transform);\r\n\t}\r\n\r\n\tapply(filterManager, input, output, clear) {\r\n\t\tthis.uniforms.filterMatrix = filterManager.calculateSpriteMatrix(this.maskMatrix, this.maskSprite);\r\n\t\tthis.uniforms.scale.x = this.scale.x;\r\n\t\tthis.uniforms.scale.y = this.scale.y;\r\n\r\n\t\tconst wt = this.maskSprite.worldTransform;\r\n\t\tthis.uniforms.rotation[0] = wt.a;\r\n\t\tthis.uniforms.rotation[1] = wt.b;\r\n\t\tthis.uniforms.rotation[2] = wt.c;\r\n\t\tthis.uniforms.rotation[3] = wt.d;\r\n\r\n\t\tfilterManager.applyFilter(this, input, output, clear);\r\n\t}\r\n}\r\n","import { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterOldFilm extends PIXI.filters.OldFilmFilter {\r\n\tconstructor(params) {\r\n\t\tsuper();\r\n\t\tthis.enabled = false;\r\n\t\tthis.vignetting = 0;\r\n\t\tthis.noise = 0.08;\r\n\t\tthis.scratch = 0.1;\r\n\t\tthis.scratchDensity = 0.1;\r\n\t\tthis.seed = 0;\r\n\t\tthis.zOrder = 60;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n}\r\n","import { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterGlow extends PIXI.filters.GlowFilter {\r\n\tconstructor(params) {\r\n\t\tsuper();\r\n\t\tthis.padding = 15;\r\n\t\tthis.enabled = false;\r\n\t\tthis.innerStrength = 0;\r\n\t\tthis.outerStrength = 6.5;\r\n\t\tthis.color = 0x0020ff;\r\n\t\tthis.quality = 1;\r\n\t\tthis.alpha = 1;\r\n\t\tthis.zOrder = 70;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\t// Imposed value. Should not be a shader uniform\r\n\t\tthis.distance = 10;\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n}\r\n","import { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterOutline extends PIXI.filters.OutlineFilter {\r\n\tconstructor(params) {\r\n\t\tsuper();\r\n\t\tthis.blendMode = PIXI.BLEND_MODES.NORMAL;\r\n\t\tthis.padding = 5;\r\n\t\tthis.enabled = false;\r\n\t\tthis.thickness = 3;\r\n\t\tthis.color = 0x000000;\r\n\t\tthis.quality = 1;\r\n\t\tthis.zOrder = 50;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n}\r\n","import { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterBevel extends PIXI.filters.BevelFilter {\r\n\tconstructor(params) {\r\n\t\tsuper();\r\n\t\tthis.blendMode = PIXI.BLEND_MODES.NORMAL;\r\n\t\tthis.padding = 10;\r\n\t\tthis.enabled = false;\r\n\t\tthis.rotation = 0;\r\n\t\tthis.thickness = 5;\r\n\t\tthis.lightColor = 0xffffff;\r\n\t\tthis.lightAlpha = 0.95;\r\n\t\tthis.shadowColor = 0x000000;\r\n\t\tthis.shadowAlpha = 0.95;\r\n\t\tthis.zOrder = 90;\r\n\t\tthis.quality = 1;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n}\r\n","import { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\nimport { FilterDropShadowEx } from './FilterDropShadowEx.js';\r\n\r\nexport class FilterDropShadow extends FilterDropShadowEx {\r\n\tconstructor(params) {\r\n\t\tsuper();\r\n\t\tthis.enabled = false;\r\n\t\tthis.rotation = 45;\r\n\t\tthis.distance = 5;\r\n\t\tthis.color = 0x000000;\r\n\t\tthis.alpha = 0.5;\r\n\t\tthis.shadowOnly = false;\r\n\t\tthis.blur = 2;\r\n\t\tthis.quality = 3;\r\n\t\tthis.padding = 10;\r\n\t\tthis.zOrder = 110;\r\n\t\tthis.animated = {};\r\n\t\tthis.resolution = game.settings.get('core', 'pixelRatioResolutionScaling')\r\n\t\t\t? window.devicePixelRatio\r\n\t\t\t: PIXI.settings.FILTER_RESOLUTION;\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t\tthis.autoFit = false;\r\n\t}\r\n}\r\n","import { CustomFilter } from './CustomFilter.js';\r\nimport { dropShadow } from '../glsl/fragmentshaders/dropshadow.js';\r\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterDropShadowEx extends CustomFilter {\r\n\tshadowOnly;\r\n\tangle = 45;\r\n\r\n\t_distance = 5;\r\n\t_resolution = PIXI.settings.FILTER_RESOLUTION;\r\n\t_tintFilter;\r\n\t_blurFilter;\r\n\r\n\tconstructor(options = {}) {\r\n\t\tsuper();\r\n\r\n\t\tconst opt = options ? { ...FilterDropShadowEx.defaults, ...options } : FilterDropShadowEx.defaults;\r\n\r\n\t\tconst { kernels, blur, quality, resolution } = opt;\r\n\r\n\t\tthis._tintFilter = new PIXI.Filter(customVertex2D, dropShadow);\r\n\t\tthis._tintFilter.uniforms.color = new Float32Array(4);\r\n\t\tthis._tintFilter.uniforms.shift = new PIXI.Point();\r\n\t\tthis._tintFilter.resolution = resolution;\r\n\t\tthis._blurFilter = kernels\r\n\t\t\t? new PIXI.filters.KawaseBlurFilter(kernels)\r\n\t\t\t: new PIXI.filters.KawaseBlurFilter(blur, quality);\r\n\r\n\t\tthis._pixelSize = 1.0;\r\n\t\tthis.resolution = resolution;\r\n\r\n\t\tconst { shadowOnly, rotation, distance, alpha, color } = opt;\r\n\r\n\t\tthis.shadowOnly = shadowOnly;\r\n\t\tthis.rotation = rotation;\r\n\t\tthis.distance = distance;\r\n\t\tthis.alpha = alpha;\r\n\t\tthis.color = color;\r\n\t}\r\n\r\n\tapply(filterManager, input, output, clear) {\r\n\t\tthis._updateShiftAndScale();\r\n\t\tconst target = filterManager.getFilterTexture();\r\n\r\n\t\tthis._tintFilter.apply(filterManager, input, target, 1);\r\n\t\tthis._blurFilter.apply(filterManager, target, output, clear);\r\n\r\n\t\tif (this.shadowOnly !== true) {\r\n\t\t\tfilterManager.applyFilter(this, input, output, 0);\r\n\t\t}\r\n\r\n\t\tfilterManager.returnFilterTexture(target);\r\n\t}\r\n\r\n\t_updateShiftAndScale() {\r\n\t\tconst scale = this.targetPlaceable?.worldTransform.a ?? 1.0;\r\n\t\tthis._tintFilter.uniforms.shift.set(\r\n\t\t\tthis.distance * Math.cos(this.angle) * scale,\r\n\t\t\tthis.distance * Math.sin(this.angle) * scale\r\n\t\t);\r\n\t\tthis._pixelSize = Math.max(1.0, 1.0 * scale);\r\n\t}\r\n\r\n\tget resolution() {\r\n\t\treturn this._resolution;\r\n\t}\r\n\tset resolution(value) {\r\n\t\tthis._resolution = value;\r\n\r\n\t\tif (this._tintFilter) {\r\n\t\t\tthis._tintFilter.resolution = value;\r\n\t\t}\r\n\t\tif (this._blurFilter) {\r\n\t\t\tthis._blurFilter.resolution = value;\r\n\t\t}\r\n\t}\r\n\r\n\tget distance() {\r\n\t\treturn this._distance;\r\n\t}\r\n\tset distance(value) {\r\n\t\tthis._distance = value;\r\n\t}\r\n\r\n\tget rotation() {\r\n\t\treturn this.angle / PIXI.DEG_TO_RAD;\r\n\t}\r\n\tset rotation(value) {\r\n\t\tthis.angle = value * PIXI.DEG_TO_RAD;\r\n\t}\r\n\r\n\tget alpha() {\r\n\t\treturn this._tintFilter.uniforms.alpha;\r\n\t}\r\n\tset alpha(value) {\r\n\t\tthis._tintFilter.uniforms.alpha = value;\r\n\t}\r\n\r\n\tget color() {\r\n\t\treturn PIXI.utils.rgb2hex(this._tintFilter.uniforms.color);\r\n\t}\r\n\tset color(value) {\r\n\t\tnew PIXI.Color(value).toRgbArray(this._tintFilter.uniforms.color);\r\n\t}\r\n\r\n\tget kernels() {\r\n\t\treturn this._blurFilter.kernels;\r\n\t}\r\n\tset kernels(value) {\r\n\t\tthis._blurFilter.kernels = value;\r\n\t}\r\n\r\n\tget blur() {\r\n\t\treturn this._blurFilter.blur;\r\n\t}\r\n\tset blur(value) {\r\n\t\tthis._blurFilter.blur = value;\r\n\t}\r\n\r\n\tget quality() {\r\n\t\treturn this._blurFilter.quality;\r\n\t}\r\n\tset quality(value) {\r\n\t\tthis._blurFilter.quality = value;\r\n\t}\r\n\r\n\tget _pixelSize() {\r\n\t\treturn this._blurFilter.pixelSize;\r\n\t}\r\n\tset _pixelSize(value) {\r\n\t\tthis._blurFilter.pixelSize = value;\r\n\t}\r\n}\r\n\r\nFilterDropShadowEx.defaults = {\r\n\trotation: 45,\r\n\tdistance: 5,\r\n\tcolor: 0x000000,\r\n\talpha: 0.5,\r\n\tshadowOnly: false,\r\n\tkernels: null,\r\n\tblur: 2,\r\n\tquality: 3,\r\n\tresolution: PIXI.settings.FILTER_RESOLUTION,\r\n};\r\n","const _tempRect = new PIXI.Rectangle();\r\n\r\nexport class CustomFilter extends PIXI.Filter {\r\n\tconstructor(...args) {\r\n\t\tsuper(...args);\r\n\r\n\t\tif (!this.uniforms.filterMatrix || !this.uniforms.filterMatrixInverse)\r\n\t\t\tthis.uniforms.filterMatrix = new PIXI.Matrix();\r\n\r\n\t\tif (!this.uniforms.filterMatrixInverse) this.uniforms.filterMatrixInverse = new PIXI.Matrix();\r\n\t}\r\n\r\n\tapply(filterManager, input, output, clear) {\r\n\t\tconst filterMatrix = this.uniforms.filterMatrix;\r\n\r\n\t\tif (filterMatrix) {\r\n\t\t\tconst { sourceFrame, destinationFrame, target } = filterManager.activeState;\r\n\r\n\t\t\tfilterMatrix.set(destinationFrame.width, 0, 0, destinationFrame.height, sourceFrame.x, sourceFrame.y);\r\n\r\n\t\t\tconst worldTransform = PIXI.Matrix.TEMP_MATRIX;\r\n\r\n\t\t\tconst localBounds = target.getLocalBounds(_tempRect);\r\n\r\n\t\t\tif (this.sticky) {\r\n\t\t\t\tworldTransform.copyFrom(target.transform.worldTransform);\r\n\t\t\t\tworldTransform.invert();\r\n\r\n\t\t\t\tconst rotation = target.transform.rotation;\r\n\t\t\t\tconst sin = Math.sin(rotation);\r\n\t\t\t\tconst cos = Math.cos(rotation);\r\n\t\t\t\tconst scaleX = Math.hypot(\r\n\t\t\t\t\tcos * worldTransform.a + sin * worldTransform.c,\r\n\t\t\t\t\tcos * worldTransform.b + sin * worldTransform.d\r\n\t\t\t\t);\r\n\t\t\t\tconst scaleY = Math.hypot(\r\n\t\t\t\t\t-sin * worldTransform.a + cos * worldTransform.c,\r\n\t\t\t\t\t-sin * worldTransform.b + cos * worldTransform.d\r\n\t\t\t\t);\r\n\r\n\t\t\t\tlocalBounds.pad(scaleX * this.boundsPadding.x, scaleY * this.boundsPadding.y);\r\n\t\t\t} else {\r\n\t\t\t\tconst transform = target.transform;\r\n\t\t\t\tworldTransform.a = transform.scale.x;\r\n\t\t\t\tworldTransform.b = 0;\r\n\t\t\t\tworldTransform.c = 0;\r\n\t\t\t\tworldTransform.d = transform.scale.y;\r\n\t\t\t\tworldTransform.tx = transform.position.x - transform.pivot.x * transform.scale.x;\r\n\t\t\t\tworldTransform.ty = transform.position.y - transform.pivot.y * transform.scale.y;\r\n\t\t\t\tworldTransform.prepend(target.parent.transform.worldTransform);\r\n\t\t\t\tworldTransform.invert();\r\n\r\n\t\t\t\tconst scaleX = Math.hypot(worldTransform.a, worldTransform.b);\r\n\t\t\t\tconst scaleY = Math.hypot(worldTransform.c, worldTransform.d);\r\n\r\n\t\t\t\tlocalBounds.pad(scaleX * this.boundsPadding.x, scaleY * this.boundsPadding.y);\r\n\t\t\t}\r\n\r\n\t\t\tfilterMatrix.prepend(worldTransform);\r\n\t\t\tfilterMatrix.translate(-localBounds.x, -localBounds.y);\r\n\t\t\tfilterMatrix.scale(1.0 / localBounds.width, 1.0 / localBounds.height);\r\n\r\n\t\t\tconst filterMatrixInverse = this.uniforms.filterMatrixInverse;\r\n\r\n\t\t\tif (filterMatrixInverse) {\r\n\t\t\t\tfilterMatrixInverse.copyFrom(filterMatrix);\r\n\t\t\t\tfilterMatrixInverse.invert();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfilterManager.applyFilter(this, input, output, clear);\r\n\t}\r\n}\r\n","export const dropShadow = `\r\nvarying vec2 vTextureCoord;\r\nuniform sampler2D uSampler;\r\nuniform float alpha;\r\nuniform vec3 color;\r\n\r\nuniform vec2 shift;\r\nuniform vec4 inputSize;\r\n\r\nvoid main(void){\r\n    vec4 sample = texture2D(uSampler, vTextureCoord - shift * inputSize.zw);\r\n\r\n    // Premultiply alpha\r\n    sample.rgb = color.rgb * sample.a;\r\n\r\n    // alpha user alpha\r\n    sample *= alpha;\r\n\r\n    gl_FragColor = sample;\r\n}\r\n`;\r\n","// Custom vertex shader with filterLocalCoord()\r\n\r\nexport const customVertex2D = `\r\nprecision mediump float;\r\n\r\nattribute vec2 aVertexPosition;\r\n\r\nuniform mat3 projectionMatrix;\r\nuniform mat3 filterMatrix;\r\nuniform vec4 inputSize;\r\nuniform vec4 outputFrame;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\nvec4 filterVertexPosition( void )\r\n{\r\n    vec2 position = aVertexPosition * max(outputFrame.zw, vec2(0.)) + outputFrame.xy;\r\n\r\n    return vec4((projectionMatrix * vec3(position, 1.0)).xy, 0., 1.);\r\n}\r\n\r\nvec2 filterTextureCoord( void )\r\n{\r\n    return aVertexPosition * (outputFrame.zw * inputSize.zw);\r\n}\r\n\r\nvoid main(void)\r\n{\r\n    gl_Position = filterVertexPosition();\r\n    vTextureCoord = filterTextureCoord();\r\n    vFilterCoord = (filterMatrix * vec3(vTextureCoord, 1.0)).xy;\r\n}\r\n`;\r\n","import { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterTwist extends PIXI.filters.TwistFilter {\r\n\tconstructor(params) {\r\n\t\tsuper();\r\n\t\tthis.enabled = false;\r\n\t\tthis.radiusPercent = 50;\r\n\t\tthis.angle = 4;\r\n\t\tthis.zOrder = 240;\r\n\t\tthis.animated = {};\r\n\t\tthis.offset = [0, 0];\r\n\t\tthis.autoFit = false;\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\thandleTransform() {\r\n\t\tthis.offset[0] = this.placeableImg.worldTransform.tx;\r\n\t\tthis.offset[1] = this.placeableImg.worldTransform.ty;\r\n\t\tthis.radius =\r\n\t\t\t(Math.max(this.placeableImg.width, this.placeableImg.height) *\r\n\t\t\t\tthis.targetPlaceable.worldTransform.a *\r\n\t\t\t\tthis.radiusPercent) /\r\n\t\t\t200;\r\n\t}\r\n}\r\n","import { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterZoomBlur extends PIXI.filters.ZoomBlurFilter {\r\n\tconstructor(params) {\r\n\t\tsuper();\r\n\t\tthis.enabled = false;\r\n\t\tthis.strength = 0.1;\r\n\t\tthis.radiusPercent = 50;\r\n\t\tthis.innerRadiusPercent = 10;\r\n\t\tthis.zOrder = 300;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\thandleTransform(state) {\r\n\t\tthis.center[0] = 0.5 * state.sourceFrame.width;\r\n\t\tthis.center[1] = 0.5 * state.sourceFrame.height;\r\n\t\tthis.radius =\r\n\t\t\t(Math.max(this.placeableImg.width, this.placeableImg.height) *\r\n\t\t\t\tthis.targetPlaceable.worldTransform.a *\r\n\t\t\t\tthis.radiusPercent) /\r\n\t\t\t200;\r\n\t\tthis.innerRadius =\r\n\t\t\t(Math.max(this.placeableImg.width, this.placeableImg.height) *\r\n\t\t\t\tthis.targetPlaceable.worldTransform.a *\r\n\t\t\t\tthis.innerRadiusPercent) /\r\n\t\t\t200;\r\n\t}\r\n}\r\n","import { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\nimport { FilterBlurEx } from './FilterBlurEx.js';\r\n\r\nexport class FilterBlur extends FilterBlurEx {\r\n\tconstructor(params) {\r\n\t\tsuper();\r\n\t\tthis.enabled = false;\r\n\t\tthis.blur = 2;\r\n\t\tthis.quality = 4;\r\n\t\tthis.zOrder = 290;\r\n\t\tthis.repeatEdgePixels = false;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\tget blur() {\r\n\t\treturn this.strengthX;\r\n\t}\r\n\r\n\tset blur(value) {\r\n\t\tthis.strengthX = this.strengthY = value;\r\n\t}\r\n\r\n\tget blurX() {\r\n\t\treturn this.strengthX;\r\n\t}\r\n\r\n\tset blurX(value) {\r\n\t\tthis.strengthX = value;\r\n\t}\r\n\r\n\tget blurY() {\r\n\t\treturn this.strengthY;\r\n\t}\r\n\r\n\tset blurY(value) {\r\n\t\tthis.strengthY = value;\r\n\t}\r\n\r\n\tcalculatePadding() {\r\n\t\tconst scale = this.targetPlaceable.worldTransform.a;\r\n\t\tthis.blurXFilter.blur = scale * this.strengthX;\r\n\t\tthis.blurYFilter.blur = scale * this.strengthY;\r\n\t\tthis.updatePadding();\r\n\t\tsuper.calculatePadding();\r\n\t}\r\n}\r\n","import { CustomFilter } from './CustomFilter.js';\r\n\r\nexport class FilterBlurEx extends CustomFilter {\r\n\tblurXFilter;\r\n\tblurYFilter;\r\n\r\n\t_repeatEdgePixels;\r\n\r\n\tconstructor(strength = 8, quality = 4, resolution = PIXI.settings.FILTER_RESOLUTION, kernelSize = 5) {\r\n\t\tsuper();\r\n\r\n\t\tthis.blurXFilter = new BlurFilterPassEx(true, strength, quality, resolution, kernelSize);\r\n\t\tthis.blurYFilter = new BlurFilterPassEx(false, strength, quality, resolution, kernelSize);\r\n\r\n\t\tthis.resolution = resolution;\r\n\t\tthis.quality = quality;\r\n\t\tthis.blur = strength;\r\n\r\n\t\tthis.repeatEdgePixels = false;\r\n\t}\r\n\r\n\tapply(filterManager, input, output, clearMode) {\r\n\t\tconst xStrength = Math.abs(this.blurXFilter.strength);\r\n\t\tconst yStrength = Math.abs(this.blurYFilter.strength);\r\n\r\n\t\tif (xStrength && yStrength) {\r\n\t\t\tconst renderTarget = filterManager.getFilterTexture();\r\n\r\n\t\t\tthis.blurXFilter.apply(filterManager, input, renderTarget, PIXI.CLEAR_MODES.CLEAR);\r\n\t\t\tthis.blurYFilter.apply(filterManager, renderTarget, output, clearMode);\r\n\r\n\t\t\tfilterManager.returnFilterTexture(renderTarget);\r\n\t\t} else if (yStrength) {\r\n\t\t\tthis.blurYFilter.apply(filterManager, input, output, clearMode);\r\n\t\t} else {\r\n\t\t\tthis.blurXFilter.apply(filterManager, input, output, clearMode);\r\n\t\t}\r\n\t}\r\n\r\n\tupdatePadding() {\r\n\t\tif (this._repeatEdgePixels) {\r\n\t\t\tthis.padding = 0;\r\n\t\t} else {\r\n\t\t\tthis.padding = Math.max(Math.abs(this.blurXFilter.strength), Math.abs(this.blurYFilter.strength)) * 2;\r\n\t\t}\r\n\t}\r\n\r\n\tget blur() {\r\n\t\treturn this.blurXFilter.blur;\r\n\t}\r\n\r\n\tset blur(value) {\r\n\t\tthis.blurXFilter.blur = this.blurYFilter.blur = value;\r\n\t\tthis.updatePadding();\r\n\t}\r\n\r\n\tget quality() {\r\n\t\treturn this.blurXFilter.quality;\r\n\t}\r\n\r\n\tset quality(value) {\r\n\t\tthis.blurXFilter.quality = this.blurYFilter.quality = value;\r\n\t}\r\n\r\n\tget blurX() {\r\n\t\treturn this.blurXFilter.blur;\r\n\t}\r\n\r\n\tset blurX(value) {\r\n\t\tthis.blurXFilter.blur = value;\r\n\t\tthis.updatePadding();\r\n\t}\r\n\r\n\tget blurY() {\r\n\t\treturn this.blurYFilter.blur;\r\n\t}\r\n\r\n\tset blurY(value) {\r\n\t\tthis.blurYFilter.blur = value;\r\n\t\tthis.updatePadding();\r\n\t}\r\n\r\n\tget blendMode() {\r\n\t\treturn this.blurYFilter.blendMode;\r\n\t}\r\n\r\n\tset blendMode(value) {\r\n\t\tthis.blurYFilter.blendMode = value;\r\n\t}\r\n\r\n\tget repeatEdgePixels() {\r\n\t\treturn this._repeatEdgePixels;\r\n\t}\r\n\r\n\tset repeatEdgePixels(value) {\r\n\t\tthis._repeatEdgePixels = value;\r\n\t\tthis.updatePadding();\r\n\t}\r\n}\r\n\r\nexport class BlurFilterPassEx extends CustomFilter {\r\n\thorizontal;\r\n\tstrength;\r\n\tpasses;\r\n\t_quality;\r\n\r\n\tconstructor(horizontal, strength = 8, quality = 4, resolution = PIXI.settings.FILTER_RESOLUTION, kernelSize = 5) {\r\n\t\tconst vertSrc = generateBlurVertSource(kernelSize, horizontal);\r\n\t\tconst fragSrc = generateBlurFragSource(kernelSize);\r\n\r\n\t\tsuper(\r\n\t\t\t// vertex shader\r\n\t\t\tvertSrc,\r\n\t\t\t// fragment shader\r\n\t\t\tfragSrc\r\n\t\t);\r\n\r\n\t\tthis.horizontal = horizontal;\r\n\r\n\t\tthis.resolution = resolution;\r\n\r\n\t\tthis._quality = 0;\r\n\r\n\t\tthis.quality = quality;\r\n\r\n\t\tthis.blur = strength;\r\n\t}\r\n\r\n\tapply(filterManager, input, output, clearMode) {\r\n\t\tif (output) {\r\n\t\t\tif (this.horizontal) {\r\n\t\t\t\tthis.uniforms.strength = (1 / output.width) * (output.width / input.width);\r\n\t\t\t} else {\r\n\t\t\t\tthis.uniforms.strength = (1 / output.height) * (output.height / input.height);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.horizontal) {\r\n\t\t\t\tthis.uniforms.strength = (1 / filterManager.renderer.width) * (filterManager.renderer.width / input.width);\r\n\t\t\t} else {\r\n\t\t\t\tthis.uniforms.strength = (1 / filterManager.renderer.height) * (filterManager.renderer.height / input.height);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// screen space!\r\n\t\tthis.uniforms.strength *= this.strength;\r\n\t\tthis.uniforms.strength /= this.passes;\r\n\r\n\t\tif (this.passes === 1) {\r\n\t\t\tfilterManager.applyFilter(this, input, output, clearMode);\r\n\t\t} else {\r\n\t\t\tconst renderTarget = filterManager.getFilterTexture();\r\n\t\t\tconst renderer = filterManager.renderer;\r\n\r\n\t\t\tlet flip = input;\r\n\t\t\tlet flop = renderTarget;\r\n\r\n\t\t\tthis.state.blend = false;\r\n\t\t\tfilterManager.applyFilter(this, flip, flop, PIXI.CLEAR_MODES.CLEAR);\r\n\r\n\t\t\tfor (let i = 1; i < this.passes - 1; i++) {\r\n\t\t\t\tfilterManager.bindAndClear(flip, PIXI.CLEAR_MODES.BLIT);\r\n\r\n\t\t\t\tthis.uniforms.uSampler = flop;\r\n\r\n\t\t\t\tconst temp = flop;\r\n\r\n\t\t\t\tflop = flip;\r\n\t\t\t\tflip = temp;\r\n\r\n\t\t\t\trenderer.shader.bind(this);\r\n\t\t\t\trenderer.geometry.draw(5);\r\n\t\t\t}\r\n\r\n\t\t\tthis.state.blend = true;\r\n\t\t\tfilterManager.applyFilter(this, flop, output, clearMode);\r\n\t\t\tfilterManager.returnFilterTexture(renderTarget);\r\n\t\t}\r\n\t}\r\n\r\n\tget blur() {\r\n\t\treturn this.strength;\r\n\t}\r\n\r\n\tset blur(value) {\r\n\t\tthis.padding = 1 + Math.abs(value) * 2;\r\n\t\tthis.strength = value;\r\n\t}\r\n\r\n\tget quality() {\r\n\t\treturn this._quality;\r\n\t}\r\n\r\n\tset quality(value) {\r\n\t\tthis._quality = value;\r\n\t\tthis.passes = value;\r\n\t}\r\n}\r\n\r\nconst GAUSSIAN_VALUES = {\r\n\t5: [0.153388, 0.221461, 0.250301],\r\n\t7: [0.071303, 0.131514, 0.189879, 0.214607],\r\n\t9: [0.028532, 0.067234, 0.124009, 0.179044, 0.20236],\r\n\t11: [0.0093, 0.028002, 0.065984, 0.121703, 0.175713, 0.198596],\r\n\t13: [0.002406, 0.009255, 0.027867, 0.065666, 0.121117, 0.174868, 0.197641],\r\n\t15: [0.000489, 0.002403, 0.009246, 0.02784, 0.065602, 0.120999, 0.174697, 0.197448],\r\n};\r\n\r\nconst fragTemplate = [\r\n\t'varying vec2 vBlurTexCoords[%size%];',\r\n\t'uniform sampler2D uSampler;',\r\n\r\n\t'void main(void)',\r\n\t'{',\r\n\t'    gl_FragColor = vec4(0.0);',\r\n\t'    %blur%',\r\n\t'}',\r\n].join('\\n');\r\n\r\nexport function generateBlurFragSource(kernelSize) {\r\n\tconst kernel = GAUSSIAN_VALUES[kernelSize];\r\n\tconst halfLength = kernel.length;\r\n\r\n\tlet fragSource = fragTemplate;\r\n\r\n\tlet blurLoop = '';\r\n\tconst template = 'gl_FragColor += texture2D(uSampler, vBlurTexCoords[%index%]) * %value%;';\r\n\tlet value;\r\n\r\n\tfor (let i = 0; i < kernelSize; i++) {\r\n\t\tlet blur = template.replace('%index%', i.toString());\r\n\r\n\t\tvalue = i;\r\n\r\n\t\tif (i >= halfLength) {\r\n\t\t\tvalue = kernelSize - i - 1;\r\n\t\t}\r\n\r\n\t\tblur = blur.replace('%value%', kernel[value].toString());\r\n\r\n\t\tblurLoop += blur;\r\n\t\tblurLoop += '\\n';\r\n\t}\r\n\r\n\tfragSource = fragSource.replace('%blur%', blurLoop);\r\n\tfragSource = fragSource.replace('%size%', kernelSize.toString());\r\n\r\n\treturn fragSource;\r\n}\r\n\r\nconst vertTemplate = `\r\n    attribute vec2 aVertexPosition;\r\n    uniform mat3 projectionMatrix;\r\n    uniform float strength;\r\n    varying vec2 vBlurTexCoords[%size%];\r\n    uniform vec4 inputSize;\r\n    uniform vec4 outputFrame;\r\n    vec4 filterVertexPosition( void )\r\n    {\r\n        vec2 position = aVertexPosition * max(outputFrame.zw, vec2(0.)) + outputFrame.xy;\r\n        return vec4((projectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);\r\n    }\r\n    vec2 filterTextureCoord( void )\r\n    {\r\n        return aVertexPosition * (outputFrame.zw * inputSize.zw);\r\n    }\r\n    void main(void)\r\n    {\r\n        gl_Position = filterVertexPosition();\r\n        vec2 textureCoord = filterTextureCoord();\r\n        %blur%\r\n    }`;\r\n\r\nexport function generateBlurVertSource(kernelSize, x) {\r\n\tconst halfLength = Math.ceil(kernelSize / 2);\r\n\r\n\tlet vertSource = vertTemplate;\r\n\r\n\tlet blurLoop = '';\r\n\tlet template;\r\n\r\n\tif (x) {\r\n\t\ttemplate = 'vBlurTexCoords[%index%] =  textureCoord + vec2(%sampleIndex% * strength, 0.0);';\r\n\t} else {\r\n\t\ttemplate = 'vBlurTexCoords[%index%] =  textureCoord + vec2(0.0, %sampleIndex% * strength);';\r\n\t}\r\n\r\n\tfor (let i = 0; i < kernelSize; i++) {\r\n\t\tlet blur = template.replace('%index%', i.toString());\r\n\r\n\t\tblur = blur.replace('%sampleIndex%', `${i - (halfLength - 1)}.0`);\r\n\r\n\t\tblurLoop += blur;\r\n\t\tblurLoop += '\\n';\r\n\t}\r\n\r\n\tvertSource = vertSource.replace('%blur%', blurLoop);\r\n\tvertSource = vertSource.replace('%size%', kernelSize.toString());\r\n\r\n\treturn vertSource;\r\n}\r\n\r\nexport function getMaxKernelSize(gl) {\r\n\tconst maxVaryings = PIXI.gl.getParameter(PIXI.gl.MAX_VARYING_VECTORS);\r\n\tlet kernelSize = 15;\r\n\r\n\twhile (kernelSize > maxVaryings) {\r\n\t\tkernelSize -= 2;\r\n\t}\r\n\r\n\treturn kernelSize;\r\n}\r\n","import { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterShockwave extends PIXI.filters.ShockwaveFilter {\r\n\tconstructor(params) {\r\n\t\tsuper();\r\n\t\tthis.enabled = false;\r\n\r\n\t\tthis.time = 0;\r\n\t\tthis.amplitude = 5;\r\n\t\tthis.wavelength = 100;\r\n\t\tthis.speed = 50.0;\r\n\t\tthis.brightness = 1.5;\r\n\t\tthis.radius = 200;\r\n\r\n\t\tthis.zOrder = 220;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\thandleTransform(state) {\r\n\t\tthis.center[0] = 0.5 * state.sourceFrame.width;\r\n\t\tthis.center[1] = 0.5 * state.sourceFrame.height;\r\n\t}\r\n}\r\n","import { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterBulgePinch extends PIXI.filters.BulgePinchFilter {\r\n\tconstructor(params) {\r\n\t\tsuper();\r\n\r\n\t\tthis.strength = 0;\r\n\t\tthis.radiusPercent = 100;\r\n\t\tthis.zOrder = 140;\r\n\t\tthis.autoFit = false;\r\n\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\r\n\t\t// Anchor point\r\n\t\tthis.center = [0.5, 0.5];\r\n\t}\r\n\r\n\thandleTransform() {\r\n\t\tthis.radius =\r\n\t\t\t(Math.max(this.placeableImg.width, this.placeableImg.height) *\r\n\t\t\t\tthis.targetPlaceable.worldTransform.a *\r\n\t\t\t\tthis.radiusPercent) /\r\n\t\t\t200;\r\n\t}\r\n}\r\n","import { removeShadowFrag } from '../glsl/fragmentshaders/removeshadow.js';\r\nimport { CustomFilter } from './CustomFilter.js';\r\nimport { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterRemoveShadow extends CustomFilter {\r\n\tconstructor(params) {\r\n\t\tlet { alphaTolerance } = Object.assign({}, FilterRemoveShadow.defaults, params);\r\n\r\n\t\t// using the default vertex shader and the specific fragment shader\r\n\t\tsuper(undefined, removeShadowFrag);\r\n\r\n\t\tObject.assign(this, {\r\n\t\t\talphaTolerance,\r\n\t\t});\r\n\r\n\t\tthis.zOrder = 10;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\tget alphaTolerance() {\r\n\t\treturn this.uniforms.alphaTolerance;\r\n\t}\r\n\tset alphaTolerance(value) {\r\n\t\tthis.uniforms.alphaTolerance = value;\r\n\t}\r\n}\r\n\r\nFilterRemoveShadow.defaults = {\r\n\talphaTolerance: 0.8,\r\n};\r\n","export const removeShadowFrag = `\r\nprecision mediump float;\r\nvarying vec2 vTextureCoord;\r\nuniform sampler2D uSampler;\r\nuniform float alphaTolerance;\r\n\r\nvoid main(void) {\r\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\r\n    if (pixel.a <= alphaTolerance) {\r\n        pixel = vec4(0.);\r\n    } \r\n    gl_FragColor = pixel;\r\n}\r\n`;\r\n","import { cosmicRayFrag } from '../glsl/fragmentshaders/cosmicray.js';\r\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\r\nimport { CustomFilter } from './CustomFilter.js';\r\nimport { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterRays extends CustomFilter {\r\n\tconstructor(params) {\r\n\t\tlet { time, color, divisor, alpha, anchorX, anchorY, dimX, dimY, alphaDiscard } = Object.assign(\r\n\t\t\t{},\r\n\t\t\tFilterRays.defaults,\r\n\t\t\tparams\r\n\t\t);\r\n\r\n\t\t// using specific vertex shader and fragment shader\r\n\t\tsuper(customVertex2D, cosmicRayFrag);\r\n\r\n\t\tthis.uniforms.color = new Float32Array([1.0, 0.4, 0.1, 0.55]);\r\n\t\tthis.uniforms.anchor = new Float32Array([0.5, 0.5]);\r\n\t\tthis.uniforms.dimensions = new Float32Array([1.0, 1.0]);\r\n\r\n\t\tObject.assign(this, {\r\n\t\t\ttime,\r\n\t\t\tcolor,\r\n\t\t\tdivisor,\r\n\t\t\talpha,\r\n\t\t\tanchorX,\r\n\t\t\tanchorY,\r\n\t\t\tdimX,\r\n\t\t\tdimY,\r\n\t\t\talphaDiscard,\r\n\t\t});\r\n\r\n\t\tthis.zOrder = 120;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\tget time() {\r\n\t\treturn this.uniforms.time;\r\n\t}\r\n\r\n\tset time(value) {\r\n\t\tthis.uniforms.time = value;\r\n\t}\r\n\r\n\tget color() {\r\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\r\n\t}\r\n\r\n\tset color(value) {\r\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\r\n\t}\r\n\r\n\tget divisor() {\r\n\t\treturn this.uniforms.divisor;\r\n\t}\r\n\r\n\tset divisor(value) {\r\n\t\tthis.uniforms.divisor = value;\r\n\t}\r\n\r\n\tget alpha() {\r\n\t\treturn this.uniforms.color[3];\r\n\t}\r\n\r\n\tset alpha(value) {\r\n\t\tif (value >= 0 && value <= 1) {\r\n\t\t\tthis.uniforms.color[3] = value;\r\n\t\t}\r\n\t}\r\n\r\n\tget anchorX() {\r\n\t\treturn this.uniforms.anchor[0];\r\n\t}\r\n\r\n\tset anchorX(value) {\r\n\t\tthis.uniforms.anchor[0] = value;\r\n\t}\r\n\r\n\tget anchorY() {\r\n\t\treturn this.uniforms.anchor[1];\r\n\t}\r\n\r\n\tset anchorY(value) {\r\n\t\tthis.uniforms.anchor[1] = value;\r\n\t}\r\n\r\n\tget dimX() {\r\n\t\treturn this.uniforms.dimensions[0];\r\n\t}\r\n\r\n\tset dimX(value) {\r\n\t\tthis.uniforms.dimensions[0] = value;\r\n\t}\r\n\r\n\tget dimY() {\r\n\t\treturn this.uniforms.dimensions[1];\r\n\t}\r\n\r\n\tset dimY(value) {\r\n\t\tthis.uniforms.dimensions[1] = value;\r\n\t}\r\n\r\n\tget alphaDiscard() {\r\n\t\treturn this.uniforms.alphaDiscard;\r\n\t}\r\n\r\n\tset alphaDiscard(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis.uniforms.alphaDiscard = value;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nFilterRays.defaults = {\r\n\ttime: 0.0,\r\n\tcolor: 0xff8010,\r\n\tdivisor: 16,\r\n\talpha: 0.55,\r\n\tanchorX: 0.5,\r\n\tanchorY: 0.5,\r\n\tdimX: 100,\r\n\tdimY: 100,\r\n\talphaDiscard: false,\r\n};\r\n","export const cosmicRayFrag = `\r\nprecision mediump float;\r\nprecision mediump int;\r\n\r\nuniform sampler2D uSampler;\r\nuniform float time;\r\nuniform vec2 dimensions;\r\nuniform vec2 anchor;\r\nuniform vec4 color;\r\nuniform float divisor;\r\nuniform bool alphaDiscard;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\nfloat PI = 3.14159265359;\r\nfloat speed = 1.2;\r\nfloat width = 0.5;\r\nfloat subdivide = 512.0;\r\n\r\nvoid main() {\r\n\r\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\r\n    if (pixel.a==0.) {\r\n       gl_FragColor = pixel;\r\n       return;\r\n    }\r\n\r\n    vec2 uv = (vFilterCoord - anchor) / dimensions;    \r\n    float len = length(uv *0.5),\r\n   \t\tangle = ( atan(uv.x, uv.y) / ( 2. * PI) ) + 1.5,\r\n    \twobble = 48. + 24. * cos(time/5.),\r\n    \twhite = fract((angle) * divisor + sin((sqrt(len) * wobble) - time * speed));\r\n    \r\n    white  = 2.* cos(white / (PI * 0.1));\r\n    white *= floor(fract(angle * divisor + sin(time / speed - (len * 1.2) * wobble)) *subdivide) / subdivide;\r\n    \r\n    vec4 color1 = smoothstep(0., 1., white * color);\r\n    vec4 result = mix(pixel, color1, color1.a);\r\n    if (alphaDiscard && all(lessThanEqual(result.rgb,vec3(0.05)))) discard;\r\n    gl_FragColor = result*pixel.a;\r\n}\r\n`;\r\n","import { innerFog } from '../glsl/fragmentshaders/fog.js';\r\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\r\nimport { CustomFilter } from './CustomFilter.js';\r\nimport { Anime } from '../Anime.js';\r\n\r\nexport class FilterFog extends CustomFilter {\r\n\tconstructor(params) {\r\n\t\tlet { time, color, density, dimX, dimY } = Object.assign({}, FilterFog.defaults, params);\r\n\r\n\t\t// specific vertex and fragment shaders\r\n\t\tsuper(customVertex2D, innerFog);\r\n\r\n\t\tthis.uniforms.color = new Float32Array([1.0, 0.4, 0.1, 0.55]);\r\n\t\tthis.uniforms.dimensions = new Float32Array([1.0, 1.0]);\r\n\r\n\t\tObject.assign(this, {\r\n\t\t\ttime,\r\n\t\t\tcolor,\r\n\t\t\tdensity,\r\n\t\t\tdimX,\r\n\t\t\tdimY,\r\n\t\t});\r\n\r\n\t\tthis.zOrder = 190;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\tget time() {\r\n\t\treturn this.uniforms.time;\r\n\t}\r\n\r\n\tset time(value) {\r\n\t\tthis.uniforms.time = value;\r\n\t}\r\n\r\n\tget color() {\r\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\r\n\t}\r\n\r\n\tset color(value) {\r\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\r\n\t}\r\n\r\n\tget density() {\r\n\t\treturn this.uniforms.density;\r\n\t}\r\n\r\n\tset density(value) {\r\n\t\tthis.uniforms.density = value;\r\n\t}\r\n\r\n\tget dimX() {\r\n\t\treturn this.uniforms.dimensions[0];\r\n\t}\r\n\r\n\tset dimX(value) {\r\n\t\tthis.uniforms.dimensions[0] = value;\r\n\t}\r\n\r\n\tget dimY() {\r\n\t\treturn this.uniforms.dimensions[1];\r\n\t}\r\n\r\n\tset dimY(value) {\r\n\t\tthis.uniforms.dimensions[1] = value;\r\n\t}\r\n}\r\n\r\nFilterFog.defaults = {\r\n\ttime: 0.0,\r\n\tcolor: 0xffffff,\r\n\tdensity: 0.5,\r\n\tdimX: 1.0,\r\n\tdimY: 1.0,\r\n};\r\n","export const innerFog = `\r\nprecision mediump float;\r\n\r\nuniform float time;\r\nuniform vec3 color;\r\nuniform float density;\r\nuniform vec2 dimensions;\r\nuniform sampler2D uSampler;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\n// generates pseudo-random based on screen position\r\nfloat random(vec2 pos) \r\n{\r\n\treturn fract(sin(dot(pos.xy, vec2(12.9898, 78.233))) * 43758.5453123);\r\n}\r\n\r\n// perlin noise\r\nfloat noise(vec2 pos) \r\n{\r\n\tvec2 i = floor(pos);\r\n\tvec2 f = fract(pos);\r\n\tfloat a = random(i + vec2(0.0, 0.0));\r\n\tfloat b = random(i + vec2(1.0, 0.0));\r\n\tfloat c = random(i + vec2(0.0, 1.0));\r\n\tfloat d = random(i + vec2(1.0, 1.0));\r\n\tvec2 u = f * f * (3.0 - 2.0 * f);\r\n\treturn mix(a, b, u.x) + (c - a) * u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\r\n}\r\n\r\n// fractional brownian motion\r\nfloat fbm(vec2 pos) \r\n{\r\n\tfloat v = 0.0;\r\n\tfloat a = 0.5;\r\n\tvec2 shift = vec2(100.);\r\n\tmat2 rot = mat2(cos(0.5), sin(0.5), -sin(0.5), cos(0.5));\r\n\tfor (int i=0; i<16; i++) \r\n\t{\r\n\t\tv = (sin(v*1.07)) + ( a * noise(pos) );\r\n\t\tpos = rot * pos * 1.9 + shift;\r\n\t\ta *= 0.5;\r\n\t}\r\n\treturn v;\r\n}\r\n\r\nmat4 contrastMatrix(float contrast)\r\n{\r\n\tfloat t = ( 1.0 - contrast ) * 0.5;\r\n    \r\n    return mat4( contrast, 0, 0, 0,\r\n                 0, contrast, 0, 0,\r\n                 0, 0, contrast, 0,\r\n                 t, t, t, 1 );\r\n}\r\n\r\nvec4 fog()\r\n{\r\n\tvec2 p = (vFilterCoord.xy * 8. - vFilterCoord.xy) * dimensions;\r\n\t\r\n\tfloat time2 = time * 0.0025;\r\n\t\r\n\tvec2 q = vec2(0.0);\r\n\tq.x = fbm(p);\r\n\tq.y = fbm(p);\r\n\tvec2 r = vec2(-1.0);\r\n\tr.x = fbm(p * q + vec2(1.7, 9.2) + .15 * time2);\r\n\tr.y = fbm(p * q + vec2(9.3, 2.8) + .35 * time2);\r\n\tfloat f = fbm(p*.2 + r*3.102);\r\n\r\n\tvec4 fogPixel = mix(\r\n\t\tvec4(color,1.0),\r\n\t\tvec4(1.5, 1.5, 1.5, 1.5),\r\n\t\tclamp(length(r.x), 0.4, 1.)\r\n\t);\r\n\r\n\treturn (f *f * f + 0.6 * f * f + 0.5 * f) * fogPixel;\r\n}\r\n\r\nvoid main(void) \r\n{\r\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\r\n\r\n    // to avoid computation on an invisible pixel.\r\n    if (pixel.a == 0.) {\r\n\t\tgl_FragColor = pixel;\r\n\t\treturn;\r\n    }\r\n\r\n\tvec4 fogPixel = contrastMatrix(3.0)*fog();\r\n    gl_FragColor = mix(pixel, fogPixel, 1.*density) * pixel.a;\r\n}\r\n`;\r\n","import { xFog } from '../glsl/fragmentshaders/xfog.js';\r\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\r\nimport { CustomFilter } from './CustomFilter.js';\r\nimport { Anime } from '../Anime.js';\r\n\r\nexport class FilterXFog extends CustomFilter {\r\n\tconstructor(params) {\r\n\t\tlet { time, color, alphaDiscard } = Object.assign({}, FilterXFog.defaults, params);\r\n\r\n\t\t// specific vertex and fragment shaders\r\n\t\tsuper(customVertex2D, xFog);\r\n\r\n\t\tthis.uniforms.color = new Float32Array([1.0, 0.4, 0.1, 0.55]);\r\n\r\n\t\tObject.assign(this, {\r\n\t\t\ttime,\r\n\t\t\tcolor,\r\n\t\t\talphaDiscard,\r\n\t\t});\r\n\r\n\t\tthis.zOrder = 230;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\tget time() {\r\n\t\treturn this.uniforms.time;\r\n\t}\r\n\r\n\tset time(value) {\r\n\t\tthis.uniforms.time = value;\r\n\t}\r\n\r\n\tget color() {\r\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\r\n\t}\r\n\r\n\tset color(value) {\r\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\r\n\t}\r\n\r\n\tget alphaDiscard() {\r\n\t\treturn this.uniforms.alphaDiscard;\r\n\t}\r\n\r\n\tset alphaDiscard(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis.uniforms.alphaDiscard = value;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nFilterXFog.defaults = {\r\n\ttime: 0.0,\r\n\tcolor: 0xffffff,\r\n\talphaDiscard: false,\r\n};\r\n","export const xFog = `\r\nprecision mediump float;\r\n\r\nuniform float time;\r\nuniform vec3 color;\r\nuniform bool alphaDiscard;\r\nuniform sampler2D uSampler;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\nconst float PI = 3.14159265;\r\nconst mat3 rotationMatrix = mat3(1.0,0.0,0.0,0.0,0.47,-0.88,0.0,0.88,0.47);\r\n\t\r\nfloat hash(float p)\r\n{\r\n    return fract(sin(dot(vec2(p*0.00010,0.),vec2(12.9898,78.233))) * 43758.5453);\r\n}\r\n\r\nfloat noise( vec3 x )\r\n{\r\n    vec3 p = floor(x);\r\n    vec3 f = fract(x);\r\n    f = f*f*(3.0-2.0*f);\r\n    float n = p.x + p.y*57.0 + 113.0*p.z;\r\n    return mix(mix(mix( hash(n+0.0  ), hash(n+1.0),f.x),mix( hash(n+57.0 ), hash(n+58.0 ),f.x),f.y),\r\n           mix(mix( hash(n+113.0), hash(n+114.0),f.x),mix( hash(n+170.0), hash(n+171.0),f.x),f.y),f.z);\r\n} \r\n\r\nvec4 map( vec3 p )\r\n{\r\n\tfloat d = 0.2 - p.y;\t\r\n\tvec3 q = p  - vec3(0.0,1.0,0.0)*time;\r\n\tfloat f  = 0.5*noise( q ); q = q*2.02 - vec3(0.25,0.25,0.25)*time*0.4;\r\n\tf += 0.25*noise( q ); \r\n    q = q*2.03 - vec3(0.0,1.0,0.0)*time*0.2;\r\n\tf += 0.125*noise( q ); \r\n\td = clamp( d + 4.5*f, 0.0, 1.0 );\r\n\tvec3 col = mix( vec3(0.9,0.9,0.9), vec3(0.1,0.1,0.1), d ) + 0.05*sin(p);\r\n\treturn vec4( col, d );\r\n}\r\n\r\nvec3 cloudify( vec3 ro, vec3 rd )\r\n{\r\n\tvec4 s = vec4(0.);\r\n\tfloat t = 0.0;\r\n    vec3 col = color*0.75;\r\n    vec3 p;\r\n    vec4 k;\r\n\r\n\tfor( int i=0; i<90; i++ )\r\n\t{\r\n\t\tif( s.a > 0.97 ) break;\r\n\t\tp = ro + t*rd;\r\n\t\tk = map( p );\r\n\t\tk.rgb *= mix( col, color, clamp( (p.y-0.2)*0.5, 0.0, 1.0 ) );\r\n\t\tk.a *= 0.5;\r\n\t\tk.rgb *= k.a;\r\n\t\ts = s + k*(1.0-s.a);\t\r\n\t\tt += 0.05;\r\n\t}\r\n\treturn clamp( s.xyz, 0.0, 1.0 );\r\n}\r\n\r\nvec4 xfog()\r\n{\r\n\tvec3 vo = vec3(0.0,4.9,-40.);\r\n\tvec3 vd = normalize(vec3(vFilterCoord.xy, 1.)) * rotationMatrix * 2.25;\r\n\tvec3 volume = cloudify( vo, vd );\r\n\tvolume *= volume;\r\n\treturn vec4( volume, 1.0 );\r\n}\r\n\r\nvoid main() \r\n{\r\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\r\n    if (pixel.a == 0.) discard;\r\n    vec4 result = max( xfog(), pixel) * pixel.a;\r\n    if (alphaDiscard && all(lessThanEqual(result.rgb,vec3(0.15)))) discard;\r\n    gl_FragColor = result;\r\n}\r\n`;\r\n","import { zapElectricity } from '../glsl/fragmentshaders/electricity.js';\r\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\r\nimport { CustomFilter } from './CustomFilter.js';\r\nimport { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterElectric extends CustomFilter {\r\n\tconstructor(params) {\r\n\t\tlet { time, blend, color } = Object.assign({}, FilterElectric.defaults, params);\r\n\r\n\t\tvar shaderFragment;\r\n\t\tif (params.hasOwnProperty('intensity') && typeof params.intensity === 'number') {\r\n\t\t\tvar intensityVal = Math.floor(params.intensity);\r\n\t\t\tshaderFragment = zapElectricity.replace('#define INTENSITY 5', '#define INTENSITY ' + intensityVal);\r\n\t\t} else {\r\n\t\t\tshaderFragment = zapElectricity;\r\n\t\t}\r\n\r\n\t\tsuper(customVertex2D, shaderFragment);\r\n\r\n\t\tthis.uniforms.color = new Float32Array([1.0, 1.0, 1.0, 1.0]);\r\n\t\tthis.uniforms.blend = 2;\r\n\r\n\t\tObject.assign(this, {\r\n\t\t\ttime,\r\n\t\t\tblend,\r\n\t\t\tcolor,\r\n\t\t});\r\n\r\n\t\tthis.zOrder = 160;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\r\n\t\tthis.quality = 0.5;\r\n\t}\r\n\r\n\tget time() {\r\n\t\treturn this.uniforms.time;\r\n\t}\r\n\r\n\tset time(value) {\r\n\t\tthis.uniforms.time = value;\r\n\t}\r\n\r\n\tget color() {\r\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\r\n\t}\r\n\r\n\tset color(value) {\r\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\r\n\t}\r\n\r\n\tget blend() {\r\n\t\treturn this.uniforms.blend;\r\n\t}\r\n\r\n\tset blend(value) {\r\n\t\tthis.uniforms.blend = Math.floor(value);\r\n\t}\r\n}\r\n\r\nFilterElectric.defaults = {\r\n\ttime: 0.0,\r\n\tblend: 1,\r\n\tcolor: 0xffffff,\r\n};\r\n","export const zapElectricity = `\r\nprecision mediump float;\r\nprecision mediump int;\r\n\r\n#define INTENSITY 5\r\n\r\nconst float PI = 3.14159265358979323846264;\r\n\r\nuniform sampler2D uSampler;\r\nuniform vec4 color;\r\nvarying vec2 vFilterCoord;\r\nvarying vec2 vTextureCoord;\r\nuniform float time;\r\nuniform int blend;\r\n\r\nvec4 blenderVec3(int blend, vec4 fColv4, vec4 sColv4)\r\n{\r\n    vec3 fCol = vec3(fColv4);\r\n    vec3 sCol = vec3(sColv4);\r\n    if ( blend == 1) { fCol = fCol * sCol; }\r\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 3) { fCol = min(fCol, sCol); }\r\n    else if (blend == 4) { fCol = max(fCol, sCol); }\r\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\r\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\r\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\r\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\r\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol); }\r\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol; }\r\n    else if (blend == 13) { fCol = fCol + sCol; }\r\n    else { fCol = fCol + sCol; }\r\n    \r\n    return vec4(fCol,1.0);\r\n}\r\n\r\nfloat Perlin(vec3 P)\r\n{\r\n    vec3 Pi = floor(P);\r\n    vec3 Pf = P - Pi;\r\n    vec3 Pf_min1 = Pf - 1.0;\r\n\r\n    Pi.xyz = Pi.xyz - floor(Pi.xyz * (1.0 / 69.0)) * 69.0;\r\n    vec3 Pi_inc1 = step(Pi, vec3(69.0 - 1.5)) * (Pi + 1.0);\r\n\r\n    vec4 Pt = vec4(Pi.xy, Pi_inc1.xy) + vec2(50.0, 161.0).xyxy;\r\n    Pt *= Pt;\r\n    Pt = Pt.xzxz * Pt.yyww;\r\n    const vec3 SOMELARGEFLOATS = vec3(635.298681, 682.357502, 668.926525);\r\n    const vec3 ZINC = vec3(48.500388, 65.294118, 63.934599);\r\n    vec3 lowz_mod = vec3(1.0 / (SOMELARGEFLOATS + Pi.zzz * ZINC));\r\n    vec3 highz_mod = vec3(1.0 / (SOMELARGEFLOATS + Pi_inc1.zzz * ZINC));\r\n    vec4 hashx0 = fract(Pt * lowz_mod.xxxx);\r\n    vec4 hashx1 = fract(Pt * highz_mod.xxxx);\r\n    vec4 hashy0 = fract(Pt * lowz_mod.yyyy);\r\n    vec4 hashy1 = fract(Pt * highz_mod.yyyy);\r\n    vec4 hashz0 = fract(Pt * lowz_mod.zzzz);\r\n    vec4 hashz1 = fract(Pt * highz_mod.zzzz);\r\n\r\n    vec4 grad_x0 = hashx0 - 0.49999;\r\n    vec4 grad_y0 = hashy0 - 0.49999;\r\n    vec4 grad_z0 = hashz0 - 0.49999;\r\n    vec4 grad_x1 = hashx1 - 0.49999;\r\n    vec4 grad_y1 = hashy1 - 0.49999;\r\n    vec4 grad_z1 = hashz1 - 0.49999;\r\n    vec4 grad_results_0 = inversesqrt(grad_x0 * grad_x0 + grad_y0 * grad_y0 + grad_z0 * grad_z0) * (vec2(Pf.x, Pf_min1.x).xyxy * grad_x0 + vec2(Pf.y, Pf_min1.y).xxyy * grad_y0 + Pf.zzzz * grad_z0);\r\n    vec4 grad_results_1 = inversesqrt(grad_x1 * grad_x1 + grad_y1 * grad_y1 + grad_z1 * grad_z1) * (vec2(Pf.x, Pf_min1.x).xyxy * grad_x1 + vec2(Pf.y, Pf_min1.y).xxyy * grad_y1 + Pf_min1.zzzz * grad_z1);\r\n\r\n    vec3 blend = Pf * Pf * Pf * (Pf * (Pf * 6.0 - 15.0) + 10.0);\r\n    vec4 res0 = mix(grad_results_0, grad_results_1, blend.z);\r\n    vec4 blend2 = vec4(blend.xy, vec2(1.0 - blend.xy));\r\n    float final = dot(res0, blend2.zxzx * blend2.wwyy);\r\n    return (final * 1.1547005383792515290182975610039);  // scale things to a strict -1.0->1.0 range  *= 1.0/sqrt(0.75)\r\n}\r\n\r\nfloat fbm(vec3 p)\r\n{\r\n    float v = 0.0;\r\n    v += Perlin(p * 0.9) * 1.5 * cos(PI * time * 0.48);\r\n    v += Perlin(p * 3.99) * 0.5 * sin(PI * time * 0.4);\r\n    v += Perlin(p * 8.01) * 0.4 * cos(PI * time * 0.4);\r\n    v += Perlin(p * 15.05) * 0.05 * sin(PI * time * 0.8);\r\n\r\n    return v;\r\n}\r\n\r\nvec4 electric() {\r\n    vec3 noiseVec = vec3(vFilterCoord, 1.);\r\n    vec3 color = vec3(0.0);\r\n    for (int i = 0; i < INTENSITY; ++i ) {\r\n        noiseVec = noiseVec.yxz;\r\n        float t = abs(2.0 / (fbm(noiseVec + vec3(0.0, time / float(i + 4), 0.0)) * 120.0));\r\n        color += t * vec3(float(i + 1) * 0.1 + 0.1, 0.5, 2.0);\r\n    }\r\n    return vec4(color, 1.);\r\n}\r\n\r\nvoid main() {\r\n \r\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\r\n    \r\n    // to avoid computation of invisible pixels\r\n    if (pixel.a==0.) {\r\n       gl_FragColor = pixel;\r\n       return;\r\n    }\r\n    \r\n    vec4 electric = electric();\r\n    electric *= color;\r\n\r\n    gl_FragColor = blenderVec3(blend,pixel,electric)*pixel.a;\r\n}\r\n`;\r\n","import { magicWaves } from '../glsl/fragmentshaders/waves.js';\r\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\r\nimport { CustomFilter } from './CustomFilter.js';\r\nimport { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterWaves extends CustomFilter {\r\n\tconstructor(params) {\r\n\t\tlet { time, color, inward, frequency, strength, minIntensity, maxIntensity, anchorX, anchorY } = Object.assign(\r\n\t\t\t{},\r\n\t\t\tFilterWaves.defaults,\r\n\t\t\tparams\r\n\t\t);\r\n\r\n\t\t// using specific vertex shader and fragment shader\r\n\t\tsuper(customVertex2D, magicWaves);\r\n\r\n\t\tthis.uniforms.color = new Float32Array([1.0, 1.0, 1.0]);\r\n\t\tthis.uniforms.anchor = new Float32Array([0.5, 0.5]);\r\n\r\n\t\tObject.assign(this, {\r\n\t\t\ttime,\r\n\t\t\tcolor,\r\n\t\t\tinward,\r\n\t\t\tfrequency,\r\n\t\t\tstrength,\r\n\t\t\tminIntensity,\r\n\t\t\tmaxIntensity,\r\n\t\t\tanchorX,\r\n\t\t\tanchorY,\r\n\t\t});\r\n\r\n\t\tthis.zOrder = 280;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\tget time() {\r\n\t\treturn this.uniforms.time;\r\n\t}\r\n\r\n\tset time(value) {\r\n\t\tthis.uniforms.time = value;\r\n\t}\r\n\r\n\tget color() {\r\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\r\n\t}\r\n\r\n\tset color(value) {\r\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\r\n\t}\r\n\r\n\tget inward() {\r\n\t\treturn this.uniforms.inward;\r\n\t}\r\n\r\n\tset inward(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis.uniforms.inward = value;\r\n\t\t}\r\n\t}\r\n\r\n\tget anchorX() {\r\n\t\treturn this.uniforms.anchor[0];\r\n\t}\r\n\r\n\tset anchorX(value) {\r\n\t\tthis.uniforms.anchor[0] = value;\r\n\t}\r\n\r\n\tget anchorY() {\r\n\t\treturn this.uniforms.anchor[1];\r\n\t}\r\n\r\n\tset anchorY(value) {\r\n\t\tthis.uniforms.anchor[1] = value;\r\n\t}\r\n\r\n\tget frequency() {\r\n\t\treturn this.uniforms.frequency;\r\n\t}\r\n\r\n\tset frequency(value) {\r\n\t\tthis.uniforms.frequency = value;\r\n\t}\r\n\r\n\tget strength() {\r\n\t\treturn this.uniforms.strength;\r\n\t}\r\n\r\n\tset strength(value) {\r\n\t\tthis.uniforms.strength = value;\r\n\t}\r\n\r\n\tget minIntensity() {\r\n\t\treturn this.uniforms.minIntensity;\r\n\t}\r\n\r\n\tset minIntensity(value) {\r\n\t\tthis.uniforms.minIntensity = value;\r\n\t}\r\n\r\n\tget maxIntensity() {\r\n\t\treturn this.uniforms.maxIntensity;\r\n\t}\r\n\r\n\tset maxIntensity(value) {\r\n\t\tthis.uniforms.maxIntensity = value;\r\n\t}\r\n}\r\n\r\nFilterWaves.defaults = {\r\n\ttime: 0,\r\n\tcolor: 0xffffff,\r\n\tinward: false,\r\n\tfrequency: 35,\r\n\tstrength: 0.01,\r\n\tminIntensity: 1.2,\r\n\tmaxIntensity: 3.5,\r\n\tanchorX: 0.5,\r\n\tanchorY: 0.5,\r\n};\r\n","export const magicWaves = `\r\nprecision mediump float;\r\nprecision mediump int;\r\n\r\nuniform vec3 color;\r\nuniform vec2 anchor;\r\nuniform float time;\r\nuniform bool inward;\r\nuniform float frequency;\r\nuniform float strength;\r\nuniform float minIntensity;\r\nuniform float maxIntensity;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\nuniform sampler2D uSampler;\r\n\r\nvoid main() {\r\n\r\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\r\n    if (pixel.a==0.) {\r\n       gl_FragColor = pixel;\r\n       return;\r\n    }\r\n\r\n    float speed = inward ? 1.0 : -1.0;\r\n\r\n    vec2 centeredUVs = vFilterCoord - anchor;\r\n    float dist = length(centeredUVs);\r\n    float sinVal = sin((time * speed) + (dist * frequency));\r\n    \r\n    float sinValNormalized = sinVal * 0.5 + 0.5;\r\n    float lerp = ((maxIntensity - minIntensity) * sinValNormalized) + minIntensity;\r\n    \r\n    float rotationAmount = strength * sinVal;\r\n\r\n    float sinX = sin ( rotationAmount );\r\n    float cosX = cos ( rotationAmount );\r\n    mat2 rotationMatrix = mat2( cosX, -sinX, sinX, cosX);\r\n    vec2 newTextureCoord = vTextureCoord - vec2(0.5,0.5);\r\n\r\n    newTextureCoord = vec2(newTextureCoord * rotationMatrix ); \r\n    newTextureCoord = newTextureCoord + vec2(0.5, 0.5);     \r\n    vec4 col = texture2D(uSampler, newTextureCoord);\r\n    \r\n    col.rgb = col.rgb * color * lerp;\r\n    if (col.r != 0. && col.g != 0. && col.b != 0.) {\r\n       col.a = pixel.a;\r\n    }\r\n\r\n    gl_FragColor = col * pixel.a;\r\n}\r\n`;\r\n","import { burnFire } from '../glsl/fragmentshaders/fire.js';\r\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\r\nimport { CustomFilter } from './CustomFilter.js';\r\nimport { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterFire extends CustomFilter {\r\n\tconstructor(params) {\r\n\t\tlet { time, color, amplitude, intensity, fireBlend, blend, anchorX, anchorY, alphaDiscard } = Object.assign(\r\n\t\t\t{},\r\n\t\t\tFilterFire.defaults,\r\n\t\t\tparams\r\n\t\t);\r\n\r\n\t\t// using specific vertex shader and fragment shader\r\n\t\tsuper(customVertex2D, burnFire);\r\n\r\n\t\tthis.uniforms.color = new Float32Array([1.0, 1.0, 1.0]);\r\n\t\tthis.uniforms.anchor = new Float32Array([1.0, 1.0]);\r\n\r\n\t\tObject.assign(this, {\r\n\t\t\ttime,\r\n\t\t\tcolor,\r\n\t\t\tamplitude,\r\n\t\t\tintensity,\r\n\t\t\tfireBlend,\r\n\t\t\tblend,\r\n\t\t\tanchorX,\r\n\t\t\tanchorY,\r\n\t\t\talphaDiscard,\r\n\t\t});\r\n\r\n\t\tthis.zOrder = 150;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\tget time() {\r\n\t\treturn this.uniforms.time;\r\n\t}\r\n\r\n\tset time(value) {\r\n\t\tthis.uniforms.time = value;\r\n\t}\r\n\r\n\tget color() {\r\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\r\n\t}\r\n\r\n\tset color(value) {\r\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\r\n\t}\r\n\r\n\tget amplitude() {\r\n\t\treturn this.uniforms.amplitude;\r\n\t}\r\n\r\n\tset amplitude(value) {\r\n\t\tthis.uniforms.amplitude = value;\r\n\t}\r\n\r\n\tget intensity() {\r\n\t\treturn this.uniforms.intensity;\r\n\t}\r\n\r\n\tset intensity(value) {\r\n\t\tthis.uniforms.intensity = value;\r\n\t}\r\n\r\n\tget fireBlend() {\r\n\t\treturn this.uniforms.fireBlend;\r\n\t}\r\n\r\n\tset fireBlend(value) {\r\n\t\tthis.uniforms.fireBlend = Math.floor(value);\r\n\t}\r\n\r\n\tget blend() {\r\n\t\treturn this.uniforms.blend;\r\n\t}\r\n\r\n\tset blend(value) {\r\n\t\tthis.uniforms.blend = Math.floor(value);\r\n\t}\r\n\r\n\tget anchorX() {\r\n\t\treturn this.uniforms.anchor[0];\r\n\t}\r\n\r\n\tset anchorX(value) {\r\n\t\tthis.uniforms.anchor[0] = value;\r\n\t}\r\n\r\n\tget anchorY() {\r\n\t\treturn this.uniforms.anchor[1];\r\n\t}\r\n\r\n\tset anchorY(value) {\r\n\t\tthis.uniforms.anchor[1] = value;\r\n\t}\r\n\r\n\tget alphaDiscard() {\r\n\t\treturn this.uniforms.alphaDiscard;\r\n\t}\r\n\r\n\tset alphaDiscard(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis.uniforms.alphaDiscard = value;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nFilterFire.defaults = {\r\n\ttime: 0,\r\n\tcolor: 0xffffff,\r\n\tamplitude: 1,\r\n\tintensity: 1,\r\n\tfireBlend: 1,\r\n\tblend: 2,\r\n\tanchorX: 1,\r\n\tanchorY: 1,\r\n\talphaDiscard: false,\r\n};\r\n","export const burnFire = `\r\nprecision mediump float;\r\n\r\nuniform float time;\r\nuniform float amplitude;\r\nuniform float intensity;\r\nuniform int fireBlend;\r\nuniform int blend;\r\nuniform bool alphaDiscard;\r\nuniform vec2 anchor;\r\nuniform vec3 color;\r\n\r\nuniform sampler2D uSampler;\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\nfloat rand(vec2 n) \r\n{ \r\n\treturn fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nvec4 blenderVec3(int blend, vec4 fColv4, vec4 sColv4)\r\n{\r\n    vec3 fCol = vec3(fColv4);\r\n    vec3 sCol = vec3(sColv4);\r\n    if ( blend == 1) { fCol = fCol * sCol; }\r\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 3) { fCol = min(fCol, sCol); }\r\n    else if (blend == 4) { fCol = max(fCol, sCol); }\r\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\r\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\r\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\r\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\r\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol); }\r\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol; }\r\n    else if (blend == 13) { fCol = fCol + sCol; }\r\n    else { fCol = fCol + sCol; }\r\n    \r\n    return vec4(fCol,1.0);\r\n}\r\n\r\nfloat noise(vec2 n) \r\n{\r\n\tconst vec2 d = vec2(0.0, 1.0);\r\n\tvec2 b = floor(n);\r\n\tvec2 f = smoothstep(vec2(0.), vec2(1.0), fract(n));\r\n\treturn mix(mix(rand(b), rand(b + d.yx), f.x), \r\n\t       mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\r\n}\r\n\r\nfloat fbm(vec2 n) \r\n{\r\n\tfloat total = 0.0, amp = amplitude;\r\n\tfor (int i = 0; i < 7; i++) {\r\n\t\ttotal += noise(n) * amp;\r\n\t\tn += n;\r\n\t\tamp *= 0.5;\r\n\t}\r\n\treturn total;\r\n}\r\n\r\nvec4 fire() \r\n{\r\n    const vec3 c1 = vec3(0.1, 0.0, 0.);\r\n\tconst vec3 c2 = vec3(0.7, 0.0, 0.);\r\n\tconst vec3 c3 = vec3(0.2, 0.0, 0.);\r\n\tconst vec3 c4 = vec3(1.0, 0.9, 0.);\r\n\tconst vec3 c5 = vec3(0.1);\r\n\tconst vec3 c6 = vec3(0.9);\r\n    vec2 uv = vFilterCoord - anchor;\r\n\tvec2 p = uv.xy * 8.0;\r\n\tfloat q = fbm(p - time * 0.1);\r\n\tvec2 r = vec2(fbm(p + q + time * 0.7 - p.x - p.y), fbm(p + q - time * 0.4));\r\n\tvec3 c = mix(c1, c2, fbm(p + r)) + mix(c3, c4, r.x) - mix(c5, c6, r.y);\r\n\treturn vec4(c * cos(1.57/(intensity-0.03) * uv.y), 1.0);\r\n}\r\n\r\nvec4 fireBlending()\r\n{\r\n    vec4 fire = fire();\r\n    vec4 tint = vec4(color,1.0);\r\n    return blenderVec3(fireBlend,fire,tint);\r\n}\r\n\r\nvec4 resultBlending(vec4 pixel, vec4 fire)\r\n{\r\n    vec4 result = blenderVec3(blend,pixel,fire);\r\n    return result;\r\n}\r\n\r\nvoid main() \r\n{\r\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\r\n    if (pixel.a==0.) {\r\n       gl_FragColor = pixel;\r\n       return;\r\n    }\r\n\r\n    vec4 result = resultBlending(pixel, fireBlending())*pixel.a;\r\n    if (alphaDiscard && all(lessThanEqual(result.rgb,vec3(0.50)))) discard;\r\n\tgl_FragColor = result;\r\n}\r\n`;\r\n","import { fumes } from '../glsl/fragmentshaders/fumes.js';\r\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\r\nimport { CustomFilter } from './CustomFilter.js';\r\nimport { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterFumes extends CustomFilter {\r\n\tconstructor(params) {\r\n\t\tlet { time, color, blend, dimX, dimY } = Object.assign({}, FilterFumes.defaults, params);\r\n\r\n\t\t// using specific vertex shader and fragment shader\r\n\t\tsuper(customVertex2D, fumes);\r\n\r\n\t\tthis.uniforms.color = new Float32Array([1.0, 1.0, 1.0]);\r\n\t\tthis.uniforms.dimensions = new Float32Array([1.0, 1.0]);\r\n\r\n\t\tObject.assign(this, {\r\n\t\t\ttime,\r\n\t\t\tcolor,\r\n\t\t\tblend,\r\n\t\t\tdimX,\r\n\t\t\tdimY,\r\n\t\t});\r\n\r\n\t\tthis.zOrder = 210;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\tget time() {\r\n\t\treturn this.uniforms.time;\r\n\t}\r\n\r\n\tset time(value) {\r\n\t\tthis.uniforms.time = value;\r\n\t}\r\n\r\n\tget color() {\r\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\r\n\t}\r\n\r\n\tset color(value) {\r\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\r\n\t}\r\n\r\n\tget blend() {\r\n\t\treturn this.uniforms.blend;\r\n\t}\r\n\r\n\tset blend(value) {\r\n\t\tthis.uniforms.blend = Math.floor(value);\r\n\t}\r\n\r\n\tget dimX() {\r\n\t\treturn this.uniforms.dimensions[0];\r\n\t}\r\n\r\n\tset dimX(value) {\r\n\t\tthis.uniforms.dimensions[0] = value;\r\n\t}\r\n\r\n\tget dimY() {\r\n\t\treturn this.uniforms.dimensions[1];\r\n\t}\r\n\r\n\tset dimY(value) {\r\n\t\tthis.uniforms.dimensions[1] = value;\r\n\t}\r\n}\r\n\r\nFilterFumes.defaults = {\r\n\ttime: 0,\r\n\tcolor: 0xffffff,\r\n\tblend: 2,\r\n\tdimX: 1,\r\n\tdimY: 1,\r\n};\r\n","export const fumes = `\r\nprecision mediump float;\r\nprecision mediump int;\r\n\r\nuniform float time;\r\nuniform vec2 dimensions;\r\nuniform int blend;\r\nuniform vec3 color;\r\nuniform sampler2D uSampler;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\n#define TWOPI 6.28318530718\r\n\r\nvec4 toGray(in vec4 color)\r\n{\r\n  float average = (color.r + color.g + color.b) * 0.33333334;\r\n  return vec4(average, average, average, 1.0);\r\n}\r\n\r\nvec4 colorize(in vec4 grayscale, in vec4 color)\r\n{\r\n    return (grayscale * color);\r\n}\r\n\r\nvec4 blenderVec3(int blend, vec4 fColv4, vec4 sColv4)\r\n{\r\n    vec3 fCol = vec3(fColv4);\r\n    vec3 sCol = vec3(sColv4);\r\n    if ( blend == 1) { fCol = fCol * sCol; }\r\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 3) { fCol = min(fCol, sCol); }\r\n    else if (blend == 4) { fCol = max(fCol, sCol); }\r\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\r\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\r\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\r\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\r\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol); }\r\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol; }\r\n    else if (blend == 13) { fCol = fCol + sCol; }\r\n    else { fCol = fCol + sCol; }\r\n    \r\n    return vec4(fCol,1.0);\r\n}\r\n\r\nvec4 fog(vec2 fragCoord)\r\n{\r\n    float t = time * 0.26 + 23.0;\r\n    vec2 uv = fragCoord.xy * dimensions.xy;\r\n\r\n    vec2 p = mod(uv * TWOPI, TWOPI) - 250.0;\r\n    vec2 i = vec2(p);\r\n    float c = 0.75;\r\n    float intensity = 0.014;\r\n\r\n    for (int n = 0; n < 4; n++) {\r\n        float t = t * (1.0 - (3.5 / float(n + 1)));\r\n        i = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(t + i.x));\r\n        c += 1.0 / length(vec2(.5 * p.x / (sin(0.40 * i.x + t) / intensity), p.y / (cos(i.y + t) / intensity)));\r\n    }\r\n\r\n    c *= 0.16666667;\r\n    c = 1.17 - pow(c, 1.4);\r\n    vec3 colour = vec3(pow(abs(c), 8.0));\r\n\r\n    return vec4(colour * colour, 1.);\r\n}\r\n\r\n\r\nvoid main() \r\n{\r\n    vec4 pixel = texture2D(uSampler,vTextureCoord);\r\n\r\n    // to avoid computation on an invisible pixel.\r\n    if (pixel.a==0.) {\r\n        gl_FragColor = pixel;\r\n        return;\r\n    }\r\n\r\n    // fog generation.\r\n    vec4 fog = colorize(\r\n               toGray(\r\n                 fog(vFilterCoord.xy) \r\n               + fog(-vFilterCoord.xy * 0.65))\r\n                    ,vec4(color/3., 1.)) * 0.9;\r\n\r\n    // we put the fog and the pixel into the blender, and we serve, adjusted by the pixel alpha.\r\n\tgl_FragColor = blenderVec3(blend, fog, pixel) * pixel.a;\r\n}\r\n`;\r\n","import { seaFlood } from '../glsl/fragmentshaders/flood.js';\r\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\r\nimport { CustomFilter } from './CustomFilter.js';\r\nimport { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterFlood extends CustomFilter {\r\n\tconstructor(params) {\r\n\t\tlet { time, scale, glint, billowy, color, shiftX, shiftY, tintIntensity } = Object.assign(\r\n\t\t\t{},\r\n\t\t\tFilterFlood.defaults,\r\n\t\t\tparams\r\n\t\t);\r\n\r\n\t\t// using specific vertex shader and fragment shader\r\n\t\tsuper(customVertex2D, seaFlood);\r\n\r\n\t\tthis.uniforms.waterColor = new Float32Array([0.0, 0.18, 0.54]);\r\n\t\tthis.uniforms.shift = new Float32Array([0.0, 0.0]);\r\n\r\n\t\tObject.assign(this, {\r\n\t\t\ttime,\r\n\t\t\tscale,\r\n\t\t\tglint,\r\n\t\t\tbillowy,\r\n\t\t\tcolor,\r\n\t\t\tshiftX,\r\n\t\t\tshiftY,\r\n\t\t\ttintIntensity,\r\n\t\t});\r\n\r\n\t\tthis.zOrder = 170;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\tget time() {\r\n\t\treturn this.uniforms.time;\r\n\t}\r\n\r\n\tset time(value) {\r\n\t\tthis.uniforms.time = value;\r\n\t}\r\n\r\n\tget color() {\r\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.waterColor);\r\n\t}\r\n\r\n\tset color(value) {\r\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.waterColor);\r\n\t}\r\n\r\n\tget scale() {\r\n\t\treturn this.uniforms.scale;\r\n\t}\r\n\r\n\tset scale(value) {\r\n\t\tthis.uniforms.scale = value;\r\n\t}\r\n\r\n\tget glint() {\r\n\t\treturn this.uniforms.glint;\r\n\t}\r\n\r\n\tset glint(value) {\r\n\t\tthis.uniforms.glint = value;\r\n\t}\r\n\r\n\tget billowy() {\r\n\t\treturn this.uniforms.billowy;\r\n\t}\r\n\r\n\tset billowy(value) {\r\n\t\tthis.uniforms.billowy = value;\r\n\t}\r\n\r\n\tget tintIntensity() {\r\n\t\treturn this.uniforms.tintIntensity;\r\n\t}\r\n\r\n\tset tintIntensity(value) {\r\n\t\tthis.uniforms.tintIntensity = value;\r\n\t}\r\n\r\n\tget shiftX() {\r\n\t\treturn this.uniforms.shift[0];\r\n\t}\r\n\r\n\tset shiftX(value) {\r\n\t\tthis.uniforms.shift[0] = value;\r\n\t}\r\n\r\n\tget shiftY() {\r\n\t\tthis.uniforms.shift[1];\r\n\t}\r\n\r\n\tset shiftY(value) {\r\n\t\tthis.uniforms.shift[1] = value;\r\n\t}\r\n}\r\n\r\nFilterFlood.defaults = {\r\n\ttime: 0,\r\n\tglint: 0.5,\r\n\tscale: 70,\r\n\tbillowy: 0.5,\r\n\tcolor: 0x0020a9,\r\n\tshiftX: 0,\r\n\tshiftY: 0,\r\n\ttintIntensity: 0.2,\r\n};\r\n","export const seaFlood = `\r\nprecision mediump float;\r\n\r\nuniform float time;\r\nuniform float scale;\r\nuniform float glint;\r\nuniform float billowy;\r\nuniform float tintIntensity;\r\nuniform vec2 shift;\r\nuniform vec3 waterColor;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\nuniform sampler2D uSampler;\r\nuniform mat3 filterMatrixInverse;\r\n\r\nconst float timeSpeed = 3.;\r\n\r\n#define TWOPI 6.28318531\r\n\r\nfloat randomVal (float inVal)\r\n{\r\n    return fract(sin(mod(dot(vec2(inVal, 2523.2361) , vec2(12.9898,78.233)), TWOPI)) * 43758.5453)-0.5;\r\n}\r\n\r\nvec2 randomVec2 (float inVal)\r\n{\r\n    return normalize(vec2(randomVal(inVal), randomVal(inVal+151.523)));\r\n}\r\n\r\nfloat makeWaves(vec2 uv, float theTime, float offset)\r\n{\r\n    float result = 0.0;\r\n    float direction = 0.0;\r\n    float sineWave = 0.0;\r\n    vec2 randVec = vec2(0.0,0.0);\r\n    float i;\r\n    for(int n = 0; n < 16; n++)\r\n    {\r\n        i = float(n)+offset;\r\n        randVec = randomVec2(float(i));\r\n  \t\tdirection = (uv.x*randVec.x+uv.y*randVec.y);\r\n        sineWave = sin(mod(direction*randomVal(i+1.6516)+theTime*timeSpeed, TWOPI));\r\n        sineWave = smoothstep(0.2,1.,sineWave);\r\n    \tresult += randomVal(i+123.0)*sineWave;\r\n    }\r\n    return result;\r\n}\r\n\r\nvec4 water( vec2 fragCoord )\r\n{\r\n    vec4 fragColor;\r\n\tvec2 uv = fragCoord.xy * 0.5;\r\n    \r\n    vec2 uv2 = uv * scale;\r\n    \r\n    uv *= 2.0;\r\n\r\n    float result = 0.0;\r\n    float result2 = 0.0;\r\n    \r\n    result = makeWaves( uv2+vec2(time*timeSpeed,0.0), time, 0.1);\r\n    result2 = makeWaves( uv2-vec2(time*0.8*timeSpeed,0.0), time*0.8+1.06, 0.26);\r\n    \r\n    result *= 0.2;\r\n    \r\n    result = smoothstep(0.35,1.1,1.0-abs(result));\r\n    result2 = smoothstep(0.35,1.1,1.0-abs(result2));\r\n    \r\n    result = 2.0*smoothstep(0.35,1.8,(result+result2)*glint);\r\n\r\n    vec2 p = vec2(result, result2)*0.019 + (cos( mod(  uv*1.1 - sin(mod(uv.yx + time*timeSpeed/20., TWOPI)), TWOPI) )*0.012);\r\n    uv.x -= shift.x;\r\n    uv.y -= shift.y;\r\n    uv += p * billowy;\r\n    vec4 pixel = texture2D( uSampler , (filterMatrixInverse * vec3(uv, 1.0)).xy );\r\n\treturn (vec4(result)*0.9 + pixel)*pixel.a;\r\n}\r\n\r\nvoid main() {\r\n    vec4 water = water(vFilterCoord);\r\n    vec4 result = mix(vec4(waterColor,1.0),water,1./(tintIntensity+1.000000001))*water.a;\r\n    gl_FragColor = result;\r\n}\r\n`;\r\n","import { innerSmoke } from '../glsl/fragmentshaders/smoke.js';\r\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\r\nimport { CustomFilter } from './CustomFilter.js';\r\nimport { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterSmoke extends CustomFilter {\r\n\tconstructor(params) {\r\n\t\tlet { time, color, blend, dimX, dimY } = Object.assign({}, FilterSmoke.defaults, params);\r\n\r\n\t\t// using specific vertex shader and fragment shader\r\n\t\tsuper(customVertex2D, innerSmoke);\r\n\r\n\t\tthis.uniforms.color = new Float32Array([1.0, 1.0, 1.0]);\r\n\t\tthis.uniforms.scale = new Float32Array([1.0, 1.0]);\r\n\r\n\t\tObject.assign(this, {\r\n\t\t\ttime,\r\n\t\t\tcolor,\r\n\t\t\tblend,\r\n\t\t\tdimX,\r\n\t\t\tdimY,\r\n\t\t});\r\n\r\n\t\tthis.zOrder = 200;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\tget time() {\r\n\t\treturn this.uniforms.time;\r\n\t}\r\n\r\n\tset time(value) {\r\n\t\tthis.uniforms.time = value;\r\n\t}\r\n\r\n\tget color() {\r\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\r\n\t}\r\n\r\n\tset color(value) {\r\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\r\n\t}\r\n\r\n\tget blend() {\r\n\t\treturn this.uniforms.blend;\r\n\t}\r\n\r\n\tset blend(value) {\r\n\t\tthis.uniforms.blend = Math.floor(value);\r\n\t}\r\n\r\n\tget dimX() {\r\n\t\treturn this.uniforms.scale[0];\r\n\t}\r\n\r\n\tset dimX(value) {\r\n\t\tthis.uniforms.scale[0] = value;\r\n\t}\r\n\r\n\tget dimY() {\r\n\t\treturn this.uniforms.scale[1];\r\n\t}\r\n\r\n\tset dimY(value) {\r\n\t\tthis.uniforms.scale[1] = value;\r\n\t}\r\n}\r\n\r\nFilterSmoke.defaults = {\r\n\ttime: 0,\r\n\tcolor: 0xffffff,\r\n\tblend: 13,\r\n\tdimX: 1,\r\n\tdimY: 1,\r\n};\r\n","export const innerSmoke = `\r\nprecision mediump float;\r\nprecision mediump int;\r\n\r\nuniform float time;\r\nuniform vec2 scale;\r\nuniform vec3 color;\r\nuniform int blend;\r\nuniform sampler2D uSampler;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\n#define F4 0.309016994374947451\r\n#define PI 3.14159\r\n#define SPEED 0.01\r\n\r\nvec4 blenderVec3(int blend, vec4 fColv4, vec4 sColv4)\r\n{\r\n    vec3 fCol = vec3(fColv4);\r\n    vec3 sCol = vec3(sColv4);\r\n    if ( blend == 1) { fCol = fCol * sCol; }\r\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 3) { fCol = min(fCol, sCol); }\r\n    else if (blend == 4) { fCol = max(fCol, sCol); }\r\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\r\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\r\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\r\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\r\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol); }\r\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol; }\r\n    else if (blend == 13) { fCol = fCol + sCol; }\r\n    else { fCol = fCol + sCol; }\r\n    \r\n    return vec4(fCol,1.0);\r\n}\r\n\r\nvec4 mod289(vec4 x) \r\n{\r\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\r\n}\r\n\r\nfloat mod289(float x) \r\n{\r\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\r\n}\r\n\r\nvec4 permute(vec4 x) \r\n{\r\n    return mod289(((x*34.0)+1.0)*x);\r\n}\r\n\r\nfloat permute(float x) \r\n{\r\n    return mod289(((x*34.0)+1.0)*x);\r\n}\r\n\r\nvec4 taylorInvSqrt(vec4 r) \r\n{\r\n    return 1.79284291400159 - 0.85373472095314 * r;\r\n}\r\n\r\nfloat taylorInvSqrt(float r) \r\n{\r\n    return 1.79284291400159 - 0.85373472095314 * r;\r\n}\r\n\r\nvec4 grad4(float j, vec4 ip) \r\n{\r\n    const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\r\n    vec4 p,s;\r\n\r\n    p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\r\n    p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\r\n    s = vec4(lessThan(p, vec4(0.0)));\r\n    p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www;\r\n\r\n    return p;\r\n}\r\n\r\nfloat snoise(vec4 v) \r\n{\r\n    const vec4  C = vec4( 0.138196601125011,\r\n                          0.276393202250021,\r\n                          0.414589803375032,\r\n                         -0.447213595499958);\r\n\r\n    vec4 i  = floor(v + dot(v, vec4(F4)) );\r\n    vec4 x0 = v -   i + dot(i, C.xxxx);\r\n\r\n    vec4 i0;\r\n    vec3 isX = step( x0.yzw, x0.xxx );\r\n    vec3 isYZ = step( x0.zww, x0.yyz );\r\n      \r\n    i0.x = isX.x + isX.y + isX.z;\r\n    i0.yzw = 1.0 - isX;\r\n      \r\n    i0.y += isYZ.x + isYZ.y;\r\n    i0.zw += 1.0 - isYZ.xy;\r\n    i0.z += isYZ.z;\r\n    i0.w += 1.0 - isYZ.z;\r\n\r\n    vec4 i3 = clamp( i0, 0.0, 1.0 );\r\n    vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\r\n    vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\r\n\r\n    vec4 x1 = x0 - i1 + C.xxxx;\r\n    vec4 x2 = x0 - i2 + C.yyyy;\r\n    vec4 x3 = x0 - i3 + C.zzzz;\r\n    vec4 x4 = x0 + C.wwww;\r\n    \r\n    i = mod289(i);\r\n    float j0 = permute( permute( permute( permute(i.w) + i.z) + i.y) + i.x);\r\n    vec4 j1 = permute( permute( permute( permute (\r\n                        i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\r\n                    + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\r\n                + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\r\n            + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\r\n\r\n    vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\r\n\r\n    vec4 p0 = grad4(j0,   ip);\r\n    vec4 p1 = grad4(j1.x, ip);\r\n    vec4 p2 = grad4(j1.y, ip);\r\n    vec4 p3 = grad4(j1.z, ip);\r\n    vec4 p4 = grad4(j1.w, ip);\r\n\r\n    vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\r\n    p0 *= norm.x;\r\n    p1 *= norm.y;\r\n    p2 *= norm.z;\r\n    p3 *= norm.w;\r\n    p4 *= taylorInvSqrt(dot(p4,p4));\r\n\r\n    vec3 m0 = max(0.6 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);\r\n    vec2 m1 = max(0.6 - vec2(dot(x3,x3), dot(x4,x4)            ), 0.0);\r\n    m0 = m0 * m0;\r\n    m1 = m1 * m1;\r\n    return 49.0 * ( dot(m0*m0, vec3( dot( p0, x0 ), dot( p1, x1 ), dot( p2, x2 )))\r\n            + dot(m1*m1, vec2( dot( p3, x3 ), dot( p4, x4 ) ) ) ) ;\r\n\r\n}\r\n\r\nfloat surface( vec4 coord ) \r\n{\r\n\tfloat n = 0.0;\r\n\r\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\r\n\tn += 0.5 * abs( snoise( coord * 8.0 ) );\r\n\tn += 0.25 * abs( snoise( coord * 16.0 ) );\r\n\tn += 0.125 * abs( snoise( coord * 32.0 ) );\r\n\t\r\n\treturn n;\r\n}\r\n\r\nvoid main() \r\n{\r\n    vec4 pixel = texture2D(uSampler,vTextureCoord);\r\n\r\n    // to avoid computation on an invisible pixel\r\n    if (pixel.a == 0.) {\r\n        gl_FragColor = pixel;\r\n        return;\r\n    }\r\n\r\n    vec2 uv = vFilterCoord - vec2(0.375*scale.x,0.375*scale.y);\r\n    float s = uv.x * scale.x;\r\n    float t = uv.y * scale.y;\r\n    \r\n    float multiplier = 1.0 / ( 2.0 * PI );\r\n    float nx = cos( s * 2.0 * PI ) * multiplier;\r\n    float ny = cos( t * 2.0 * PI ) * multiplier;\r\n    float nz = sin( s * 2.0 * PI ) * multiplier;\r\n    float nw = sin( t * 2.0 * PI ) * multiplier;\r\n\r\n    float surf = surface( vec4( nx, ny, nz, nw ) + time * SPEED );\r\n    vec4 result = vec4( color * vec3( surf ), 1.0 );\r\n    \r\n    gl_FragColor = blenderVec3(blend,pixel,result) * pixel.a;\r\n}\r\n`;\r\n","import { forceField } from '../glsl/fragmentshaders/forcefield.js';\r\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\r\nimport { CustomFilter } from './CustomFilter.js';\r\nimport { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterForceField extends CustomFilter {\r\n\tconstructor(params) {\r\n\t\tlet {\r\n\t\t\ttime,\r\n\t\t\tcolor,\r\n\t\t\tlightAlpha,\r\n\t\t\tblend,\r\n\t\t\tshieldType,\r\n\t\t\tposLightX,\r\n\t\t\tposLightY,\r\n\t\t\tlightSize,\r\n\t\t\tscale,\r\n\t\t\tintensity,\r\n\t\t\tradius,\r\n\t\t\thideRadius,\r\n\t\t\tchromatic,\r\n\t\t\tdiscardThreshold,\r\n\t\t\talphaDiscard,\r\n\t\t} = Object.assign({}, FilterForceField.defaults, params);\r\n\r\n\t\t// using specific vertex shader and fragment shader\r\n\t\tsuper(customVertex2D, forceField);\r\n\r\n\t\tthis.uniforms.color = new Float32Array([1.0, 1.0, 1.0]);\r\n\t\tthis.uniforms.posLight = new Float32Array([1.0, 1.0]);\r\n\r\n\t\tObject.assign(this, {\r\n\t\t\ttime,\r\n\t\t\tcolor,\r\n\t\t\tlightAlpha,\r\n\t\t\tblend,\r\n\t\t\tshieldType,\r\n\t\t\tposLightX,\r\n\t\t\tposLightY,\r\n\t\t\tlightSize,\r\n\t\t\tscale,\r\n\t\t\tintensity,\r\n\t\t\tradius,\r\n\t\t\thideRadius,\r\n\t\t\tchromatic,\r\n\t\t\tdiscardThreshold,\r\n\t\t\talphaDiscard,\r\n\t\t});\r\n\r\n\t\tthis.zOrder = 2000;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\tget time() {\r\n\t\treturn this.uniforms.time;\r\n\t}\r\n\r\n\tset time(value) {\r\n\t\tthis.uniforms.time = value;\r\n\t}\r\n\r\n\tget color() {\r\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\r\n\t}\r\n\r\n\tset color(value) {\r\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\r\n\t}\r\n\r\n\tget blend() {\r\n\t\treturn this.uniforms.blend;\r\n\t}\r\n\r\n\tset blend(value) {\r\n\t\tthis.uniforms.blend = Math.floor(value);\r\n\t}\r\n\r\n\tget lightAlpha() {\r\n\t\treturn this.uniforms.lightColorAlpha;\r\n\t}\r\n\r\n\tset lightAlpha(value) {\r\n\t\tthis.uniforms.lightColorAlpha = value;\r\n\t}\r\n\r\n\tget shieldType() {\r\n\t\treturn this.uniforms.shieldType;\r\n\t}\r\n\r\n\tset shieldType(value) {\r\n\t\tthis.uniforms.shieldType = Math.floor(value);\r\n\t}\r\n\r\n\tget posLightX() {\r\n\t\treturn this.uniforms.posLight[0];\r\n\t}\r\n\r\n\tset posLightX(value) {\r\n\t\tthis.uniforms.posLight[0] = value;\r\n\t}\r\n\r\n\tget posLightY() {\r\n\t\treturn this.uniforms.posLight[1];\r\n\t}\r\n\r\n\tset posLightY(value) {\r\n\t\tthis.uniforms.posLight[1] = value;\r\n\t}\r\n\r\n\tget lightSize() {\r\n\t\treturn this.uniforms.lightSize;\r\n\t}\r\n\r\n\tset lightSize(value) {\r\n\t\tthis.uniforms.lightSize = value;\r\n\t}\r\n\r\n\tget scale() {\r\n\t\treturn this.uniforms.scale;\r\n\t}\r\n\r\n\tset scale(value) {\r\n\t\tthis.uniforms.scale = value;\r\n\t}\r\n\r\n\tget intensity() {\r\n\t\treturn this.uniforms.intensity;\r\n\t}\r\n\r\n\tset intensity(value) {\r\n\t\tthis.uniforms.intensity = value;\r\n\t}\r\n\r\n\tget radius() {\r\n\t\treturn this.uniforms.radius;\r\n\t}\r\n\r\n\tset radius(value) {\r\n\t\tthis.uniforms.radius = value;\r\n\t}\r\n\r\n\tget hideRadius() {\r\n\t\treturn this.uniforms.hideRadius;\r\n\t}\r\n\r\n\tset hideRadius(value) {\r\n\t\tthis.uniforms.hideRadius = value;\r\n\t}\r\n\r\n\tget discardThreshold() {\r\n\t\treturn this.uniforms.discardThreshold;\r\n\t}\r\n\r\n\tset discardThreshold(value) {\r\n\t\tthis.uniforms.discardThreshold = value;\r\n\t}\r\n\r\n\tget alphaDiscard() {\r\n\t\treturn this.uniforms.alphaDiscard;\r\n\t}\r\n\r\n\tset alphaDiscard(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis.uniforms.alphaDiscard = value;\r\n\t\t}\r\n\t}\r\n\r\n\tget chromatic() {\r\n\t\treturn this.uniforms.chromatic;\r\n\t}\r\n\r\n\tset chromatic(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis.uniforms.chromatic = value;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nFilterForceField.defaults = {\r\n\ttime: 0,\r\n\tcolor: 0xbbbbbb,\r\n\tlightAlpha: 1.0,\r\n\tblend: 2,\r\n\tshieldType: 1,\r\n\tposLightX: 0.65,\r\n\tposLightY: 0.25,\r\n\tlightSize: 0.483,\r\n\tscale: 1,\r\n\tintensity: 1,\r\n\tradius: 1,\r\n\thideRadius: 0,\r\n\tchromatic: false,\r\n\tdiscardThreshold: 0.25,\r\n\talphaDiscard: false,\r\n};\r\n","export const forceField = `\r\nprecision mediump float;\r\n\r\nuniform float time;\r\nuniform int blend;\r\nuniform int shieldType;\r\nuniform vec3 color;\r\nuniform vec2 posLight;\r\nuniform vec3 ambientColor;\r\nuniform float intensity;\r\nuniform float lightColorAlpha;\r\nuniform float lightSize;\r\nuniform float scale;\r\nuniform float radius;\r\nuniform float hideRadius;\r\nuniform float discardThreshold;\r\nuniform bool chromatic;\r\nuniform bool alphaDiscard;\r\nuniform sampler2D uSampler;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\n#define SQRT5B20 0.30901699\r\n#define PI 3.14159265\r\n#define TWOPI 6.28318531\r\n#define SPEED 0.01\r\n#define MU_TWOPI 0.15915494309\r\n#define MU_289 0.00346020761\r\n#define MU_3 0.33333333334\r\n#define MU_1_5 0.66666666667\r\n\r\nvec3 hsvToRgb(vec3 hsVcolor)\r\n{\r\n    vec4 K = vec4(1., 2.0 * MU_3, 1.0 * MU_3, 3.0);\r\n    vec3 p = abs(fract(hsVcolor.xxx + K.xyz) \r\n             * 6.0 - K.www);\r\n    return hsVcolor.z \r\n           * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), hsVcolor.y);\r\n}\r\n\r\nvec3 multihue(vec2 uv) \r\n{\r\n    float h = 0.5 + atan(uv.y, uv.x) * MU_TWOPI;\r\n    vec3 hsv = vec3(h, 1., 1.);\r\n    return hsvToRgb(hsv);\r\n}\r\n\r\nfloat random(vec2 n) \r\n{ \r\n\treturn fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nvec2 random2(vec2 p) \r\n{\r\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\r\n}\r\n\r\nfloat bornedCos(float minimum, float maximum)\r\n{\r\n    return (maximum-minimum)*(cos(PI*time*0.10 + 1.)*0.5)+minimum;\r\n}\r\n\r\nfloat bornedSin(float minimum, float maximum)\r\n{\r\n    return (maximum-minimum)*(sin(PI*time*0.10 + 1.)*0.5)+minimum;\r\n}\r\n\r\nvec4 mod289(vec4 x) \r\n{\r\n    return x - floor(x * MU_289) * 289.0;\r\n}\r\n\r\nfloat mod289(float x) \r\n{\r\n    return x - floor(x * MU_289) * 289.0;\r\n}\r\n\r\nvec4 permute(vec4 x) \r\n{\r\n    return mod289(((x*34.0)+1.0)*x);\r\n}\r\n\r\nfloat permute(float x) \r\n{\r\n    return mod289(((x*34.0)+1.0)*x);\r\n}\r\n\r\nvec4 taylorInvSqrt(vec4 r) \r\n{\r\n    return 1.79284291400159 - 0.85373472095314 * r;\r\n}\r\n\r\nfloat taylorInvSqrt(float r) \r\n{\r\n    return 1.79284291400159 - 0.85373472095314 * r;\r\n}\r\n\r\nvec4 grad4(float j, vec4 ip) \r\n{\r\n    const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\r\n    vec4 p,s;\r\n\r\n    p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\r\n    p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\r\n    s = vec4(lessThan(p, vec4(0.0)));\r\n    p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www;\r\n\r\n    return p;\r\n}\r\n\r\nfloat snoise(vec4 v) \r\n{\r\n    const vec4  C = vec4( 0.138196601125011,\r\n                          0.276393202250021,\r\n                          0.414589803375032,\r\n                         -0.447213595499958);\r\n\r\n    vec4 i  = floor(v + dot(v, vec4(SQRT5B20)) );\r\n    vec4 x0 = v -   i + dot(i, C.xxxx);\r\n\r\n    vec4 i0;\r\n    vec3 isX = step( x0.yzw, x0.xxx );\r\n    vec3 isYZ = step( x0.zww, x0.yyz );\r\n      \r\n    i0.x = isX.x + isX.y + isX.z;\r\n    i0.yzw = 1.0 - isX;\r\n      \r\n    i0.y += isYZ.x + isYZ.y;\r\n    i0.zw += 1.0 - isYZ.xy;\r\n    i0.z += isYZ.z;\r\n    i0.w += 1.0 - isYZ.z;\r\n\r\n    vec4 i3 = clamp( i0, 0.0, 1.0 );\r\n    vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\r\n    vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\r\n\r\n    vec4 x1 = x0 - i1 + C.xxxx;\r\n    vec4 x2 = x0 - i2 + C.yyyy;\r\n    vec4 x3 = x0 - i3 + C.zzzz;\r\n    vec4 x4 = x0 + C.wwww;\r\n    \r\n    i = mod289(i);\r\n    float j0 = permute( permute( permute( permute(i.w) + i.z) + i.y) + i.x);\r\n    vec4 j1 = permute( permute( permute( permute (\r\n                        i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\r\n                    + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\r\n                + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\r\n            + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\r\n\r\n    vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\r\n\r\n    vec4 p0 = grad4(j0,   ip);\r\n    vec4 p1 = grad4(j1.x, ip);\r\n    vec4 p2 = grad4(j1.y, ip);\r\n    vec4 p3 = grad4(j1.z, ip);\r\n    vec4 p4 = grad4(j1.w, ip);\r\n\r\n    vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\r\n    p0 *= norm.x;\r\n    p1 *= norm.y;\r\n    p2 *= norm.z;\r\n    p3 *= norm.w;\r\n    p4 *= taylorInvSqrt(dot(p4,p4));\r\n\r\n    vec3 m0 = max(0.6 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);\r\n    vec2 m1 = max(0.6 - vec2(dot(x3,x3), dot(x4,x4)            ), 0.0);\r\n    m0 = m0 * m0;\r\n    m1 = m1 * m1;\r\n    return 49.0 * ( dot(m0*m0, vec3( dot( p0, x0 ), dot( p1, x1 ), dot( p2, x2 )))\r\n            + dot(m1*m1, vec2( dot( p3, x3 ), dot( p4, x4 ) ) ) ) ;\r\n\r\n}\r\n\r\nfloat surface( vec4 coord ) \r\n{\r\n\tfloat n = 0.0;\r\n\r\n\tn += 0.25 * abs( snoise( coord * 4.0 ) );\r\n\tn += 0.5 * abs( snoise( coord * 8.0 ) );\r\n\tn += 0.25 * abs( snoise( coord * 16.0 ) );\r\n\tn += 0.125 * abs( snoise( coord * 32.0 ) );\r\n\t\r\n\treturn n;\r\n}\r\n\r\nvec4 ambientLight(vec4 pixel, vec2 fragCoord, vec2 posLg) \r\n{\r\n  vec3 lightColor = (color+vec3(2.)) * MU_3;\r\n  vec2 position = posLg;\r\n  \r\n  float maxDistance = lightSize;\r\n  float distance = distance(fragCoord-posLg, position);\r\n  float value = 1.0 - smoothstep(-0.2, maxDistance, distance);\r\n  \r\n  vec3 ambient = pixel.rgb * color * intensity;\r\n  vec3 light = (lightColor*lightColorAlpha) * clamp(value, 0.0, 1.0);\r\n  vec3 intensity = ambient + light;\r\n  vec3 final = pixel.rgb * intensity;\r\n\r\n  return vec4(final, 1.0);\r\n}\r\n\r\nvec3 toGray(vec3 color)\r\n{\r\n  float average = (color.r + color.g + color.b)*0.3333333;\r\n  return vec3(average, average, average);\r\n}\r\n\r\nvec3 colorize(vec3 grayscale, vec3 color)\r\n{\r\n    return (grayscale * color);\r\n}\r\n\r\nvec4 blenderVec3(int blend, vec4 fColv4, vec4 sColv4)\r\n{\r\n    vec3 fCol = vec3(fColv4);\r\n    vec3 sCol = vec3(sColv4);\r\n    if ( blend == 1) { fCol = fCol * sCol; }\r\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 3) { fCol = min(fCol, sCol); }\r\n    else if (blend == 4) { fCol = max(fCol, sCol); }\r\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\r\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\r\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\r\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\r\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol + 0.00001); }\r\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol + 0.00001; }\r\n    else if (blend == 13) { fCol = fCol + sCol; return vec4(fCol,0.6); }\r\n    else if (blend == 14) { return mix(fColv4,sColv4,1.-fColv4.a); }\r\n    else if (blend == 15) { return mix(fColv4,sColv4,fColv4.a); }\r\n    else { fCol = fCol + sCol; }\r\n    \r\n    return vec4(fCol,(fColv4.a+sColv4.a)*0.5);\r\n}\r\n\r\nfloat hexDist(vec2 p) \r\n{\r\n\tp = abs(p);\r\n\t\r\n    float c = dot(p, normalize(vec2(1,1.73)));\r\n    c = max(c, p.x);\r\n    \r\n    return c;\r\n}\r\n\r\nvec4 hexCoords(vec2 uv) \r\n{\r\n\tconst vec2 r = vec2(1, 1.73);\r\n    const vec2 h = r*.5;\r\n    \r\n    vec2 a = mod(uv, r)-h;\r\n    vec2 b = mod(uv-h, r)-h;\r\n    vec2 gv = dot(a, a) < dot(b,b) ? a : b;\r\n    \r\n    float x = atan(gv.x, gv.y);\r\n    float y = .65-hexDist(gv);\r\n    vec2 id = uv-gv;\r\n    return vec4(x, y, id.x,id.y);\r\n}\r\n\r\nvec4 hexa(vec2 fragCoord)\r\n{\r\n    float t = time;\r\n    \r\n    vec2 uv = fragCoord;\r\n    vec2 uv1 = uv + vec2(0, sin(uv.x*1. +t)*.25);\r\n    \r\n    vec2 uv2 = .5*uv1 + .5*uv + vec2(sin(uv.y*5. + t)*.05, 0);\r\n    float a = 1. + t*0.1;\r\n    float c = cos(a);\r\n    float s = sin(a);\r\n    uv2 *= mat2(c, -s, s, c);\r\n    \r\n    vec3 col = color;\r\n    col += (smoothstep(abs(uv2.y)*MU_1_5, 3.99, hexCoords(uv2*15.).y) * 40.*(sin(t)+1.));\r\n    col += (smoothstep(abs(uv2.x)*MU_1_5, 3.99, hexCoords(uv2*15.).y) * 40.*(cos(t)+1.));\r\n\r\n    return vec4(colorize(toGray(clamp(col,0.,2.)),color),1.);\r\n}\r\n\r\nvec4 voronoi( in vec2 x, float step1, float step2 ) \r\n{\r\n    vec2 n = floor(x);\r\n    vec2 f = fract(x);\r\n\r\n    vec2 mg, mr;\r\n    float md = 8.0;\r\n    for (int j= -1; j <= 1; j++) {\r\n        for (int i= -1; i <= 1; i++) {\r\n            vec2 g = vec2(float(i),float(j));\r\n            vec2 o = random2( n + g );\r\n            o = 0.5 + 0.5*sin( time + 6.2831*o );\r\n\r\n            vec2 r = g + o - f;\r\n            float d = dot(r,r);\r\n\r\n            if( d<md ) {\r\n                md = d;\r\n                mr = r;\r\n                mg = g;\r\n            }\r\n        }\r\n    }\r\n\r\n    md = 8.0;\r\n    for (int j= -2; j <= 1; j++) {\r\n        for (int i= -2; i <= 1; i++) {\r\n            vec2 g = mg + vec2(float(i),float(j));\r\n            vec2 o = random2( n + g );\r\n            o = 0.5 + 0.5*sin( time + 6.2831*o );\r\n\r\n            vec2 r = g + o - f;\r\n\r\n            if ( dot(mr-r,mr-r)>0.000001 ) {\r\n                md = min(md, dot( 0.6*(mr+r), normalize(r-mr) ));\r\n            }\r\n        }\r\n    }\r\n    vec3 intermediate = vec3(md, mr);\r\n    vec3 final = (intermediate.x*(0.4 + .5*sin(64.0*intermediate.x))*color);\r\n    final = mix( color, final, smoothstep( step1, step2, intermediate.x*18. ) );\r\n    return vec4(final,1.);\r\n}\r\n\r\nfloat noise(vec2 n) \r\n{\r\n\tconst vec2 d = vec2(0.0, 1.0);\r\n\tvec2 b = floor(n);\r\n\tvec2 f = smoothstep(vec2(0.), vec2(1.0), fract(n));\r\n\treturn mix(mix(random(b), random(b + d.yx), f.x), \r\n\t       mix(random(b + d.xy), random(b + d.yy), f.x), f.y);\r\n}\r\n\r\nfloat fbm(vec2 n) \r\n{\r\n\tfloat total = 0.0, amp = 1.;\r\n\tfor (int i = 0; i < 7; i++) {\r\n\t\ttotal += noise(n) * amp;\r\n\t\tn += n;\r\n\t\tamp *= 0.5;\r\n\t}\r\n\treturn total;\r\n}\r\n\r\nfloat fbm2(vec2 n) \r\n{\r\n\tfloat total = 0.0, amp = 1.;\r\n\tfor (int i = 0; i < 2; i++) {\r\n\t\ttotal += noise(n) * amp;\r\n\t\tn += n;\r\n\t\tamp *= 0.5;\r\n\t}\r\n\treturn total;\r\n}\r\n\r\nvec4 ripples(vec2 suv) \r\n{\r\n    suv.x += time*0.5;\r\n    vec3 c1 = vec3(0.);\r\n    vec3 c2 = vec3(c1);\r\n    vec3 c3 = vec3(c1);\r\n    vec3 c4 = vec3(color.r*5., color.g*3.333, color.b*2.);\r\n    vec3 c5 = vec3(c3);\r\n    vec3 c6 = vec3(c1);\r\n    vec2 p = suv;\r\n    float q = 2.*fbm2(p + time*2.);\r\n    vec2 r = vec2(fbm2(p + q + ( time  ) - p.x - p.y), fbm2(p + p + ( time )));\r\n    r.x += bornedCos(-0.3,-0.2);\r\n    r.y += 200.*bornedSin(-1.9,1.9);\r\n    \r\n    vec3 c = color * (\r\n        mix( c1, c2, fbm( p + r ) ) + mix( c3, c4, r.x ) - mix( c5, c6, r.y )\r\n    );\r\n    return vec4(c,1.);\r\n}\r\n\r\nvec4 fire(vec2 suv) \r\n{\r\n    vec3 c1 = color+vec3(0.1, 0.0, 0.)*0.666667;\r\n\tvec3 c2 = color+vec3(0.7, 0.0, 0.)*0.666667;\r\n\tvec3 c3 = color+vec3(0.2, 0.0, 0.)*0.666667;\r\n\tvec3 c4 = color+vec3(1.0, 0.9, 0.)*0.666667;\r\n\tvec3 c5 = vec3(0.1);\r\n\tvec3 c6 = vec3(0.9);\r\n    vec2 uv = suv - vec2(0.92,0.26);\r\n\tvec2 p = uv.xy * 8.0;\r\n\tfloat q = fbm(p - time * 0.1);\r\n\tvec2 r = vec2(fbm(p + q + time * 0.7 - p.x - p.y), fbm(p + q - time * 0.4));\r\n\tvec3 c = mix(c1, c2, fbm(p + r)) + mix(c3, c4, r.x) - mix(c5, c6, r.y);\r\n\treturn vec4(c * cos(1.57/(1.-0.03) * uv.y), 1.0);\r\n}\r\n\r\nvec4 surface4d(vec2 suv)\r\n{\r\n    float s = suv.x + 0.61;\r\n    float t = suv.y + 0.5;\r\n    float nx = cos( s * TWOPI ) * MU_TWOPI;\r\n    float ny = cos( t * TWOPI ) * MU_TWOPI;\r\n    float nz = sin( s * TWOPI ) * MU_TWOPI;\r\n    float nw = sin( t * TWOPI ) * MU_TWOPI;\r\n\r\n    float surf = surface( vec4( nx, ny, nz, nw ) + time * 0.03 );\r\n    return vec4( color * vec3( surf ), 1.0 );\r\n}\r\n\r\nvec4 noisy(vec2 suv)\r\n{\r\n    vec4 noiseColor;\r\n    noiseColor.rgb = (color.rgb * noise(suv + fbm(suv) + time*0.5));\r\n    noiseColor.a = 1.;\r\n    return clamp(noiseColor,0.,1.);\r\n}\r\n\r\nvec2 circuit(vec2 p) {\r\n\tp = fract(p);\r\n\tfloat r = 0.3;\r\n\tfloat v = 0.0, g = 1.0;\r\n\tfloat d;\r\n\t\r\n\tconst int iter = 7;\r\n\tfor(int i = 0; i < iter; i ++)\r\n\t{\r\n\t\td = p.x - r;\r\n\t\tg += pow(clamp(1.0 - abs(d), 0.0, 1.0), 200.0);\r\n\t\t\r\n\t\tif(d > 0.0) {\r\n\t\t\tp.x = (p.x - r) / (1.8 - r);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tp.x = p.x;\r\n\t\t}\r\n\t\tp = p.yx;\r\n\t}\r\n\tv /= float(iter);\r\n\treturn vec2(g, v);\r\n}\r\n\r\nvec4 denseSmoke(vec2 suv)\r\n{\r\n    vec4 noiseColor;\r\n    vec2 uv;\r\n    uv.x = (fbm(suv*2.)-suv.x);\r\n    uv.y = (suv.y+fbm(suv*2.));\r\n    noiseColor.rgb = (color.rgb * min(fbm(uv - time*0.5),fbm(uv)*1.5));\r\n    noiseColor.a = 1.0;\r\n    return clamp(noiseColor,0.,1.);\r\n}\r\n\r\nvec4 dancingFume(vec2 suv)\r\n{\r\n    vec4 noiseColor;\r\n    vec2 uv;\r\n    uv.x += noise(suv)+fbm(suv);\r\n    uv.y += noise(suv)+fbm(suv);\r\n    uv *= 0.5;\r\n    noiseColor.rgb = (color.rgb * fbm((uv + suv*0.15) - time));\r\n    noiseColor.a = 1.0;\r\n    return clamp(noiseColor,0.,1.);\r\n}\r\n\r\nvec4 hugeSmoke(vec2 suv)\r\n{\r\n    vec4 noiseColor;\r\n    vec2 uv;\r\n    uv.x += sin(suv.y)+fbm(suv);\r\n    uv.y += cos(suv.x)+fbm(suv);\r\n    uv *= 0.5;\r\n    noiseColor.rgb = (color.rgb * fbm((uv + suv) - time));\r\n    noiseColor.a = 1.0;\r\n    return clamp(noiseColor,0.,1.);\r\n}\r\n\r\nvec4 grid(vec2 suv)\r\n{\r\n    vec2 uv = suv + vec2(0.,-1.5);\r\n\tvec2 cid2 = floor(uv);\r\n\tfloat cid = (cid2.y + cid2.x);\r\n\r\n\tvec2 dg = circuit(uv);\r\n\tfloat d = dg.x;\r\n\tvec3 col1 = (0.5-vec3(max(min(d, 2.0) - 1., 0.))) * color * 2.;\r\n    col1.rgb = sqrt(col1.rgb*0.5);\r\n\tvec3 col2 = vec3(max(d - 1.0, 0.0)) * color * 30. ;\r\n\r\n\tfloat f = max(0.7 - mod(sin(-uv.y) - cos(-uv.x) + (time * 1.) + (dg.y * 0.2), 0.9), 0.0) * 1.;\r\n\tcol2 *= f;\r\n\r\n    return vec4(col1 + col2, 1.0);\r\n}\r\n\r\nvec4 galaxy(vec2 suv)\r\n{\r\n    vec2 uv = suv*0.166666667 \r\n        + vec2(bornedCos(0.0,0.7),\r\n               bornedSin(0.0,0.7));\r\n\r\n    float t = 0.44 * time \r\n            + (( 0.25 + 0.05 * sin( time * 0.44 )) \r\n            / ( length( uv.xy ) + 0.2 )) * 2.2;\r\n    \r\n    float si = sin( t * 1.5 );\r\n    float co = cos( t * 0.66666667 );\r\n    mat2 matrix = mat2( -co, si, si, co );\r\n    \r\n    float c;\r\n    float v1 = 0.0;\r\n    float v2 = 0.0;\r\n    vec3 uv2 = vec3( uv, 0.0 );\r\n    \r\n    for( int i = 0; i < 50; i++ ) {\r\n        float s = float( i ) * 0.035;\r\n        vec3 p = s * uv2;\r\n        p.xy *= matrix;\r\n        p += vec3( .22,.3, s - 1.5 - sin( t * 0.13 ) * 0.1 );\r\n\r\n        for( int i = 0; i < 6; i++ ) {\r\n            p = abs( p ) / dot( p, p ) - 0.659;\r\n        }\r\n\r\n        v1 += dot( p,p ) * 0.0045 * ( 1.8 + sin( length( uv.xy * 13.0 ) + 0.5 - t * 0.2 ) );\r\n        v2 += dot( p,p ) * 0.0045 * ( 1.5 + sin( length( uv.xy * 13.5 ) + 2.2 - t * 0.3 ) );\r\n        c = length( p.xy * 0.5 ) * 1.05;\r\n    }\r\n    \r\n    float len = length( uv );\r\n    v1 *= smoothstep( 0.7, 0.0, len );\r\n    v2 *= smoothstep( 0.6, 0.0, len );\r\n    \r\n    float r = clamp( c, 0.0, 1.0 );\r\n    float g = clamp( ( v1 + c ) * 0.25, 0.0, 1.0 );\r\n    float b = clamp( v2, 0.0, 1.0 );\r\n    vec3 col = color * vec3( r, g, b ) + smoothstep( 0.15, 0.0, len ) * 0.9;\r\n\r\n    return clamp(vec4( col, 1.0 ),0.,1.);\r\n}\r\n\r\nvec2 getSphere(out float alpha, out float r)\r\n{\r\n  vec2 tc = vFilterCoord.xy;\r\n  vec2 p = (-1.0 + 2. * tc) * (1.01 / radius);\r\n  r = dot(p,p);\r\n  r > 0.943 ? alpha = max(min(40.*log(1./r),1.),0.) : alpha = 1.;\r\n  float f = (1.0-sqrt(1.0-r))/(r);\r\n  vec2 uv;\r\n  uv.x = p.x*f;\r\n  uv.y = p.y*f;\r\n  return uv;\r\n}\r\n\r\nvoid computeHideAlpha(out float alpha)\r\n{\r\n  vec2 tc = vFilterCoord.xy;\r\n  vec2 p = (-1.0 + 2. * tc) * (1.01 / hideRadius);\r\n  float r = dot(p,p);\r\n  r > 0.9 ? alpha = 1.-max(min(40.*log(1./r),1.),0.) : alpha = 0.;\r\n}\r\n\r\nvoid main()\r\n{\r\n    float a, r, hideAlpha;\r\n    vec4 result;\r\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\r\n\r\n    if (hideRadius > 0.) computeHideAlpha(hideAlpha);\r\n    else hideAlpha = 1.;\r\n\r\n    if (pixel.a == 0. && hideAlpha == 0.) {\r\n        discard;\r\n    }\r\n\r\n    vec2 uv = getSphere(a, r);\r\n\r\n    if (shieldType <= 1) {\r\n        result = ripples(15.*uv*scale);\r\n    } else if (shieldType == 2) {\r\n        result = hexa(uv*scale);\r\n    } else if (shieldType == 3) {\r\n        result = fire(uv/1.5*scale);\r\n    } else if (shieldType == 4) {\r\n        result = voronoi(uv*scale*3.+0.3*cos(time),0.29,0.0);\r\n    } else if (shieldType == 5) {\r\n        result = voronoi(uv*scale*3.+0.3*cos(time),0.0019,1.);\r\n    } else if (shieldType == 6) {\r\n        result = 3.*surface4d(uv*scale);\r\n    } else if (shieldType == 7) {\r\n        result = noisy(uv*20.*scale);\r\n    } else if (shieldType == 8) {\r\n        result = denseSmoke(uv*10.*scale);\r\n    } else if (shieldType == 9) {\r\n        result = dancingFume(uv*20.*scale);\r\n    } else if (shieldType == 10) {\r\n        result = hugeSmoke(uv*5.*scale);\r\n    } else if (shieldType == 11) {\r\n        result = grid(uv*5.*scale);\r\n    } else if (shieldType == 12) {\r\n        result = galaxy(uv*5.*scale);\r\n    } else if (shieldType != 1) {\r\n        result = vec4(color,1.);\r\n    }\r\n\r\n    vec4 colorized;\r\n    vec3 chromaOption;\r\n    if (chromatic) {\r\n        vec2 vHue = uv;\r\n        vHue.x -= bornedCos(-0.,+2.2);\r\n        vHue.y -= bornedSin(-0.,+2.2);\r\n        chromaOption = multihue(vHue);\r\n    } else {\r\n        chromaOption = color;\r\n    }\r\n    colorized = (vec4(\r\n                    colorize(\r\n                        toGray(result.rgb), chromaOption), result.a) + result)*0.5;\r\n    vec4 preRenderedResult = clamp(ambientLight(clamp(colorized, 0., 1.)*intensity, uv, posLight-vec2(0.5,0.5)),0.,1.);\r\n    vec4 final = vec4(preRenderedResult.rgb * hideAlpha, 1.);\r\n\r\n    if (alphaDiscard && all(lessThanEqual(final.rgb,vec3(discardThreshold)))) {\r\n        if (pixel.a == 0.) discard;\r\n        else {\r\n            gl_FragColor = pixel;\r\n            return;\r\n        }\r\n    }\r\n\r\n    gl_FragColor =\r\n            r > 1.0\r\n                ? pixel*(1.-a)\r\n                : (pixel.a < 1. \r\n                        ? mix( blenderVec3(13, pixel, final), blenderVec3(blend, pixel, final), pixel.a)\r\n                        : blenderVec3(blend, pixel, final) * a);\r\n}\r\n`;\r\n","import { mirrorImages } from '../glsl/fragmentshaders/mirrorimages.js';\r\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\r\nimport { CustomFilter } from './CustomFilter.js';\r\nimport { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterMirrorImages extends CustomFilter {\r\n\tconstructor(params) {\r\n\t\tlet { time, blend, alphaImg, alphaChr, nbImage, ampX, ampY } = Object.assign(\r\n\t\t\t{},\r\n\t\t\tFilterMirrorImages.defaults,\r\n\t\t\tparams\r\n\t\t);\r\n\r\n\t\t// using specific vertex shader and fragment shader\r\n\t\tsuper(customVertex2D, mirrorImages);\r\n\r\n\t\tObject.assign(this, {\r\n\t\t\ttime,\r\n\t\t\tblend,\r\n\t\t\talphaImg,\r\n\t\t\talphaChr,\r\n\t\t\tnbImage,\r\n\t\t\tampX,\r\n\t\t\tampY,\r\n\t\t});\r\n\r\n\t\tthis.zOrder = 100;\r\n\t\tthis.autoFit = false;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\tget time() {\r\n\t\treturn this.uniforms.time;\r\n\t}\r\n\r\n\tset time(value) {\r\n\t\tthis.uniforms.time = value;\r\n\t}\r\n\r\n\tget alphaImg() {\r\n\t\treturn this.uniforms.alphaImg;\r\n\t}\r\n\r\n\tset alphaImg(value) {\r\n\t\tthis.uniforms.alphaImg = value;\r\n\t}\r\n\r\n\tget alphaChr() {\r\n\t\treturn this.uniforms.alphaChr;\r\n\t}\r\n\r\n\tset alphaChr(value) {\r\n\t\tthis.uniforms.alphaChr = value;\r\n\t}\r\n\r\n\tget nbImage() {\r\n\t\treturn this.uniforms.nbImage;\r\n\t}\r\n\r\n\tset nbImage(value) {\r\n\t\tthis.uniforms.nbImage = Math.floor(value);\r\n\t}\r\n\r\n\tget blend() {\r\n\t\treturn this.uniforms.blend;\r\n\t}\r\n\r\n\tset blend(value) {\r\n\t\tthis.uniforms.blend = Math.floor(value);\r\n\t}\r\n\r\n\tget ampX() {\r\n\t\treturn this.uniforms.ampX;\r\n\t}\r\n\r\n\tset ampX(value) {\r\n\t\tthis.uniforms.ampX = value;\r\n\t}\r\n\r\n\tget ampY() {\r\n\t\treturn this.uniforms.ampY;\r\n\t}\r\n\r\n\tset ampY(value) {\r\n\t\tthis.uniforms.ampY = value;\r\n\t}\r\n}\r\n\r\nFilterMirrorImages.defaults = {\r\n\ttime: 0,\r\n\tblend: 4,\r\n\talphaImg: 0.5,\r\n\talphaChr: 1.0,\r\n\tnbImage: 4,\r\n\tampX: 0.15,\r\n\tampY: 0.15,\r\n};\r\n","export const mirrorImages = `\r\nprecision mediump float;\r\n\r\nuniform float time;\r\nuniform float alphaImg;\r\nuniform float alphaChr;\r\nuniform float ampX;\r\nuniform float ampY;\r\nuniform int blend;\r\nuniform int nbImage;\r\nuniform sampler2D uSampler;\r\nuniform vec4 inputClamp;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\nconst float PI = 3.14159265;\r\n\r\nfloat bornedCos(float mi, float ma) {\r\n    return (ma-mi)*(cos(2.*PI*time*0.2+1.)*0.5)+mi;\r\n}\r\n\r\nfloat bornedSin(float mi, float ma) {\r\n    return (ma-mi)*(sin(2.*PI*time*0.2+1.)*0.5)+mi;\r\n}\r\n\r\nvec4 blender(int blend, vec4 fCol, vec4 sCol)\r\n{\r\n    if ( blend == 1) { fCol.rgb = fCol.rgb * sCol.rgb; }\r\n    else if (blend == 2) { fCol.rgb = (1. - (1. - fCol.rgb) * (1. - sCol.rgb)); }\r\n    else if (blend == 3) { fCol.rgb = min(fCol.rgb, sCol.rgb); }\r\n    else if (blend == 4) { fCol.rgb = max(fCol.rgb, sCol.rgb); }\r\n    else if (blend == 5) { fCol.rgb = abs(fCol.rgb - sCol.rgb); }\r\n    else if (blend == 6) { fCol.rgb = 1. - abs(1. - fCol.rgb - sCol.rgb); }\r\n    else if (blend == 7) { fCol.rgb = fCol.rgb + sCol.rgb - (2. * fCol.rgb * sCol.rgb); }\r\n    else if (blend == 8) { fCol.rgb = all(lessThanEqual(fCol.rgb, vec3(0.5, 0.5, 0.5))) ? (2. * fCol.rgb * sCol.rgb) : (1. - 2. * (1. - fCol.rgb) * (1. - sCol.rgb)); }\r\n    else if (blend == 9) { fCol.rgb = all(lessThanEqual(sCol.rgb, vec3(0.5, 0.5, 0.5))) ? (2. * fCol.rgb * sCol.rgb) : (1. - 2. * (1. - fCol.rgb) * (1. - sCol.rgb)); }\r\n    else if (blend == 10) { fCol.rgb = all(lessThanEqual(sCol.rgb, vec3(0.5, 0.5, 0.5))) ? (2. * fCol.rgb * sCol.rgb + fCol.rgb * fCol.rgb * (1. - 2. * sCol.rgb)) : sqrt(fCol.rgb) * (2. * sCol.rgb - 1.) + (2. * fCol.rgb) * (1. - sCol.rgb); }\r\n    else if (blend == 11) { fCol.rgb = fCol.rgb / (1.0 - sCol.rgb); }\r\n    else if (blend == 12) { fCol.rgb = 1.0 - (1.0 - fCol.rgb) / (sCol.rgb)+0.001; }\r\n    else if (blend == 13) { fCol.rgb = fCol.rgb + sCol.rgb; }\r\n    else if (blend == 14) { fCol.rgb = (max(fCol.rgb,sCol.rgb)-(min(fCol.rgb,sCol.rgb)))+abs(fCol.rgb-sCol.rgb);}\r\n    else { fCol.rgb = clamp(fCol.rgb + sCol.rgb,0.,1.); }\r\n\r\n    fCol.a = max(fCol.a,sCol.a);\r\n    return fCol;\r\n}\r\n\r\nvec4 renderMirror(vec2 translation, vec4 prevpix)\r\n{\r\n    vec2 displaced = vTextureCoord + translation;\r\n    return blender(blend, prevpix, \r\n                   texture2D(uSampler, clamp(displaced, inputClamp.xy, inputClamp.zw)));\r\n}\r\n\r\nvoid main() \r\n{\r\n    float x = ampX * bornedCos(0.,1.);\r\n    float y = ampY * bornedSin(0.,1.);\r\n    vec4 renderedPixel;\r\n    vec2 translation;\r\n\r\n    if (nbImage >= 1) {\r\n        translation = vec2(x,y);\r\n        renderedPixel = texture2D(uSampler, clamp(vTextureCoord + translation, inputClamp.xy, inputClamp.zw));\r\n    }\r\n    if (nbImage >= 2) {\r\n        translation = 0.90*vec2(-x,y*0.5);\r\n        renderedPixel = renderMirror(translation, renderedPixel);\r\n    }\r\n    if (nbImage >= 3) {\r\n        translation = 0.70*vec2(x,-y);\r\n        renderedPixel = renderMirror(translation, renderedPixel);\r\n    }\r\n    if (nbImage >= 4) {\r\n        translation = 0.80*vec2(-x*0.6,-y);\r\n        renderedPixel = renderMirror(translation, renderedPixel);\r\n    }\r\n    if (nbImage >= 5) {\r\n        translation = 1.20*vec2(-x,y*0.4);\r\n        renderedPixel = renderMirror(translation, renderedPixel);\r\n    }\r\n    if (nbImage >= 6) {\r\n        translation = 1.10*vec2(x,-y);\r\n        renderedPixel = renderMirror(translation, renderedPixel);\r\n    }\r\n    if (nbImage >= 7) {\r\n        translation = 0.6*vec2(-x*0.4,-y);\r\n        renderedPixel = renderMirror(translation, renderedPixel);\r\n    }\r\n    if (nbImage >= 8) {\r\n        translation = 1.3*vec2(-x,y*0.70);\r\n        renderedPixel = renderMirror(translation, renderedPixel);\r\n    }\r\n    if (nbImage >= 9) {\r\n        translation = vec2(x*0.5,y*0.85);\r\n        renderedPixel = renderMirror(translation, renderedPixel);\r\n    }\r\n    renderedPixel = renderedPixel*alphaImg;\r\n    gl_FragColor = blender(blend,texture2D(uSampler, vTextureCoord)*alphaChr , renderedPixel);\r\n}\r\n`;\r\n","import { xRay } from '../glsl/fragmentshaders/xray.js';\r\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\r\nimport { CustomFilter } from './CustomFilter.js';\r\nimport { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterXRays extends CustomFilter {\r\n\tconstructor(params) {\r\n\t\tlet { time, color, divisor, intensity, blend, anchorX, anchorY, dimX, dimY } = Object.assign(\r\n\t\t\t{},\r\n\t\t\tFilterXRays.defaults,\r\n\t\t\tparams\r\n\t\t);\r\n\r\n\t\t// using specific vertex shader and fragment shader\r\n\t\tsuper(customVertex2D, xRay);\r\n\r\n\t\tthis.uniforms.color = new Float32Array([1.0, 0.4, 0.1]);\r\n\t\tthis.uniforms.anchor = new Float32Array([0.5, -1.0]);\r\n\t\tthis.uniforms.dimensions = new Float32Array([1.0, 1.0]);\r\n\r\n\t\tObject.assign(this, {\r\n\t\t\ttime,\r\n\t\t\tcolor,\r\n\t\t\tdivisor,\r\n\t\t\tintensity,\r\n\t\t\tblend,\r\n\t\t\tanchorX,\r\n\t\t\tanchorY,\r\n\t\t\tdimX,\r\n\t\t\tdimY,\r\n\t\t});\r\n\r\n\t\tthis.zOrder = 130;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\tget time() {\r\n\t\treturn this.uniforms.time;\r\n\t}\r\n\r\n\tset time(value) {\r\n\t\tthis.uniforms.time = value;\r\n\t}\r\n\r\n\tget color() {\r\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\r\n\t}\r\n\r\n\tset color(value) {\r\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\r\n\t}\r\n\r\n\tget divisor() {\r\n\t\treturn this.uniforms.divisor;\r\n\t}\r\n\r\n\tset divisor(value) {\r\n\t\tthis.uniforms.divisor = value;\r\n\t}\r\n\r\n\tget intensity() {\r\n\t\treturn this.uniforms.intensity;\r\n\t}\r\n\r\n\tset intensity(value) {\r\n\t\tthis.uniforms.intensity = value;\r\n\t}\r\n\r\n\tget blend() {\r\n\t\treturn this.uniforms.blend;\r\n\t}\r\n\r\n\tset blend(value) {\r\n\t\tthis.uniforms.blend = Math.floor(value);\r\n\t}\r\n\r\n\tget anchorX() {\r\n\t\treturn this.uniforms.anchor[0];\r\n\t}\r\n\r\n\tset anchorX(value) {\r\n\t\tthis.uniforms.anchor[0] = value;\r\n\t}\r\n\r\n\tget anchorY() {\r\n\t\treturn this.uniforms.anchor[1];\r\n\t}\r\n\r\n\tset anchorY(value) {\r\n\t\tthis.uniforms.anchor[1] = value;\r\n\t}\r\n\r\n\tget dimX() {\r\n\t\treturn this.uniforms.dimensions[0];\r\n\t}\r\n\r\n\tset dimX(value) {\r\n\t\tthis.uniforms.dimensions[0] = value;\r\n\t}\r\n\r\n\tget dimY() {\r\n\t\treturn this.uniforms.dimensions[1];\r\n\t}\r\n\r\n\tset dimY(value) {\r\n\t\tthis.uniforms.dimensions[1] = value;\r\n\t}\r\n}\r\n\r\nFilterXRays.defaults = {\r\n\ttime: 0.0,\r\n\tcolor: 0xff8010,\r\n\tdivisor: 40,\r\n\tintensity: 0.1,\r\n\tblend: 8,\r\n\tanchorX: 0.5,\r\n\tanchorY: -1.0,\r\n\tdimX: 1,\r\n\tdimY: 1,\r\n};\r\n","export const xRay = `\r\nprecision mediump float;\r\nprecision mediump int;\r\n\r\nuniform sampler2D uSampler;\r\nuniform float time;\r\nuniform float intensity;\r\nuniform float divisor;\r\nuniform int blend;\r\nuniform vec2 dimensions;\r\nuniform vec2 anchor;\r\nuniform vec3 color;\r\n\r\nvarying vec2 vFilterCoord;\r\nvarying vec2 vTextureCoord;\r\n\r\nconst float MU_TWOPI = 0.15915494309;\r\nconst float MU_PI5 = 1.59154943092;\r\nconst float MU_256 = 0.00390625;\r\n\r\nvec4 blender(int blend, vec4 fColv4, vec4 sColv4)\r\n{\r\n    vec3 fCol = vec3(fColv4);\r\n    vec3 sCol = vec3(sColv4);\r\n\r\n    if ( blend <= 1) { fCol = fCol * sCol; }\r\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 3) { fCol = min(fCol, sCol); }\r\n    else if (blend == 4) { fCol = max(fCol, sCol); }\r\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\r\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\r\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\r\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\r\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol); }\r\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol; }\r\n    else if (blend == 13) { fCol = max(fCol,sCol)-(min(fCol,sCol)*0.5)+abs(fCol-sCol);}\r\n    else if (blend >= 14) { fCol = fCol + sCol; }\r\n\r\n    return vec4(fCol,fColv4.a);\r\n}\r\n\r\nvoid main() {\r\n\r\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\r\n    if (pixel.a==0.) {\r\n       gl_FragColor = pixel;\r\n       return;\r\n    }\r\n\r\n    vec2 uv = (vFilterCoord - anchor) / dimensions;\r\n\r\n    float len = length(uv * 0.5);\r\n   \tfloat angle = atan(uv.x, uv.y) * MU_TWOPI;\r\n    float beam = fract((angle) * divisor + sin((sqrt(len) * 0.2) - (time*0.5)));\r\n    \r\n    beam  = 2.* cos(beam * MU_PI5);\r\n    beam *= floor(fract(angle * divisor + sin(time - (len * 1.2) * 0.2)) *256.) * MU_256;\r\n    \r\n    float fractburn = fract(beam);\r\n\r\n    vec4 color1 = smoothstep(0.0, 1., (beam*(intensity*0.1) + pixel * vec4(color,1.)) / (fractburn == 0. ? fractburn+0.1 : fractburn) * 0.3 );\r\n    vec4 result = blender(blend, pixel, color1);\r\n\r\n    gl_FragColor = result*pixel.a;\r\n}\r\n`;\r\n","import { liquid } from '../glsl/fragmentshaders/liquid.js';\r\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\r\nimport { CustomFilter } from './CustomFilter.js';\r\nimport { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterLiquid extends CustomFilter {\r\n\tconstructor(params) {\r\n\t\tlet { time, color, scale, intensity, blend, spectral, alphaDiscard } = Object.assign(\r\n\t\t\t{},\r\n\t\t\tFilterLiquid.defaults,\r\n\t\t\tparams\r\n\t\t);\r\n\r\n\t\t// using specific vertex shader and fragment shader\r\n\t\tsuper(customVertex2D, liquid);\r\n\r\n\t\tthis.uniforms.color = new Float32Array([0.1, 0.45, 1.0]);\r\n\r\n\t\tObject.assign(this, {\r\n\t\t\ttime,\r\n\t\t\tcolor,\r\n\t\t\tscale,\r\n\t\t\tintensity,\r\n\t\t\tblend,\r\n\t\t\tspectral,\r\n\t\t\talphaDiscard,\r\n\t\t});\r\n\r\n\t\tthis.zOrder = 180;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\tget time() {\r\n\t\treturn this.uniforms.time;\r\n\t}\r\n\r\n\tset time(value) {\r\n\t\tthis.uniforms.time = value;\r\n\t}\r\n\r\n\tget scale() {\r\n\t\treturn this.uniforms.scale;\r\n\t}\r\n\r\n\tset scale(value) {\r\n\t\tthis.uniforms.scale = value;\r\n\t}\r\n\r\n\tget color() {\r\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\r\n\t}\r\n\r\n\tset color(value) {\r\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\r\n\t}\r\n\r\n\tget intensity() {\r\n\t\treturn this.uniforms.intensity;\r\n\t}\r\n\r\n\tset intensity(value) {\r\n\t\tthis.uniforms.intensity = value;\r\n\t}\r\n\r\n\tget blend() {\r\n\t\treturn this.uniforms.blend;\r\n\t}\r\n\r\n\tset blend(value) {\r\n\t\tthis.uniforms.blend = Math.floor(value);\r\n\t}\r\n\r\n\tget spectral() {\r\n\t\treturn this.uniforms.spectral;\r\n\t}\r\n\r\n\tset spectral(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis.uniforms.spectral = value;\r\n\t\t}\r\n\t}\r\n\r\n\tget alphaDiscard() {\r\n\t\treturn this.uniforms.alphaDiscard;\r\n\t}\r\n\r\n\tset alphaDiscard(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis.uniforms.alphaDiscard = value;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nFilterLiquid.defaults = {\r\n\ttime: 0.0,\r\n\tcolor: 0x0595ff,\r\n\tscale: 1,\r\n\tintensity: 5,\r\n\tblend: 4,\r\n\tspectral: false,\r\n\talphaDiscard: false,\r\n};\r\n","export const liquid = `\r\nprecision mediump float;\r\nprecision mediump int;\r\n\r\nuniform sampler2D uSampler;\r\nuniform mat3 filterMatrixInverse;\r\nuniform float time;\r\nuniform float intensity;\r\nuniform float scale;\r\nuniform int blend;\r\nuniform bool spectral;\r\nuniform bool alphaDiscard;\r\nuniform vec3 color;\r\n\r\nvarying vec2 vFilterCoord;\r\nvarying vec2 vTextureCoord;\r\n\r\n#define PI 3.14159265359\r\n\r\n#define NUM_OCTAVES 3\r\n\r\nfloat rand(vec2 n) { \r\n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nfloat noise(vec2 p){\r\n\tvec2 ip = floor(p);\r\n\tvec2 u = fract(p);\r\n\tu = u*u*(3.0-2.0*u);\r\n\t\r\n\tfloat res = mix(\r\n\t\tmix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\r\n\t\tmix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\r\n\treturn res*res;\r\n}\r\n\r\nfloat fbm(vec2 x) {\r\n\tfloat v = 0.0;\r\n\tfloat a = 0.5;\r\n\tvec2 shift = vec2(100);\r\n    mat2 rot = mat2(cos(0.5), sin(0.5), -sin(0.5), cos(0.50));\r\n\tfor (int i = 0; i < NUM_OCTAVES; ++i) {\r\n\t\tv += a * noise(x);\r\n\t\tx = rot * x * 2.0 + shift;\r\n\t\ta *= 0.5;\r\n\t}\r\n\treturn v;\r\n}\r\n\r\nvec4 blenderVec3(int blend, vec4 fColv4, vec3 sCol)\r\n{\r\n    vec3 fCol = vec3(fColv4);\r\n    if ( blend == 1) { fCol = fCol * sCol; }\r\n    else if (blend == 2) { fCol = (1. - (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 3) { fCol = min(fCol, sCol); }\r\n    else if (blend == 4) { fCol = max(fCol, sCol); }\r\n    else if (blend == 5) { fCol = abs(fCol - sCol); }\r\n    else if (blend == 6) { fCol = 1. - abs(1. - fCol - sCol); }\r\n    else if (blend == 7) { fCol = fCol + sCol - (2. * fCol * sCol); }\r\n    else if (blend == 8) { fCol = all(lessThanEqual(fCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 9) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol) : (1. - 2. * (1. - fCol) * (1. - sCol)); }\r\n    else if (blend == 10) { fCol = all(lessThanEqual(sCol, vec3(0.5, 0.5, 0.5))) ? (2. * fCol * sCol + fCol * fCol * (1. - 2. * sCol)) : sqrt(fCol) * (2. * sCol - 1.) + (2. * fCol) * (1. - sCol); }\r\n    else if (blend == 11) { fCol = fCol / (1.0 - sCol + 0.00001); }\r\n    else if (blend == 12) { fCol = 1.0 - (1.0 - fCol) / sCol + 0.00001; }\r\n    else if (blend == 13) { fCol = max(fCol,sCol)-(min(fCol,sCol)*0.5)+abs(fCol-sCol);}\r\n    else if (blend >= 14) { fCol = fCol + sCol; }\r\n    \r\n    return vec4(fCol,fColv4.a);\r\n}\r\n\r\nvoid main() {\r\n    \r\n    float distortion1 = fbm( \r\n        vec2( fbm(  vFilterCoord * 2.5 * scale + time*0.5),\r\n              fbm( (-vFilterCoord - vec2(0.01)) * 5. * scale + time*0.3333334) )\r\n                    );\r\n    \r\n    float distortion2 = fbm( \r\n        vec2( fbm( -vFilterCoord * 5. * scale + time*0.5),\r\n              fbm(  (vFilterCoord + vec2(0.01)) * 2.5 * scale + time*0.3333334) )\r\n                    );\r\n    \r\n    vec2 uv = vFilterCoord;\r\n    \r\n    uv.x += 0.8*sin(min(distortion1*0.25,distortion2*0.25));\r\n    uv.y += 0.8*cos(min(distortion1*0.25,distortion2*0.25));\r\n    uv *= 1. + 0.11*(cos(sqrt(max(distortion1, distortion2))+1.)*0.5);\r\n    uv -= vec2(0.036,0.81); \r\n\r\n    vec2 mappedCoord = (filterMatrixInverse * vec3(uv, 1.0)).xy;\r\n    \r\n    vec4 pixel = texture2D(uSampler, mappedCoord);\r\n    vec3 aColor = color;\r\n    if (alphaDiscard) aColor.rgb *= mix(distortion1,distortion2,0.5);\r\n    else aColor.rgb *= min(distortion1,distortion2);\r\n    pixel.rgb += aColor*intensity;\r\n\r\n    float a = pixel.a;\r\n\r\n    if (spectral) pixel.a = max(distortion1,distortion2)*3.75;\r\n    if (alphaDiscard && all(lessThanEqual(pixel.rgb,vec3(0.50)))) discard;\r\n\r\n    gl_FragColor = blenderVec3(blend,pixel,color*0.3333334) * min(pixel.a,a);\r\n}\r\n`;\r\n","import { magicGlow } from '../glsl/fragmentshaders/magicglow.js';\r\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\r\nimport { CustomFilter } from './CustomFilter.js';\r\nimport { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterGleamingGlow extends CustomFilter {\r\n\tconstructor(params) {\r\n\t\tlet { time, color, thickness, scale, auraIntensity, subAuraIntensity, discard, threshold, auraType } =\r\n\t\t\tObject.assign({}, FilterGleamingGlow.defaults, params);\r\n\r\n\t\t// using specific vertex shader and fragment shader\r\n\t\tsuper(customVertex2D, magicGlow);\r\n\r\n\t\tthis.uniforms.color = new Float32Array([1.0, 0.4, 0.1, 1.0]);\r\n\t\tthis.uniforms.thickness = new Float32Array([0.01, 0.01]);\r\n\r\n\t\tObject.assign(this, {\r\n\t\t\ttime,\r\n\t\t\tcolor,\r\n\t\t\tthickness,\r\n\t\t\tscale,\r\n\t\t\tauraIntensity,\r\n\t\t\tsubAuraIntensity,\r\n\t\t\tdiscard,\r\n\t\t\tthreshold,\r\n\t\t\tauraType,\r\n\t\t});\r\n\r\n\t\tthis.zOrder = 80;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\tget time() {\r\n\t\treturn this.uniforms.time;\r\n\t}\r\n\r\n\tset time(value) {\r\n\t\tthis.uniforms.time = value;\r\n\t}\r\n\r\n\tget scale() {\r\n\t\treturn this.uniforms.scale;\r\n\t}\r\n\r\n\tset scale(value) {\r\n\t\tthis.uniforms.scale = value;\r\n\t}\r\n\r\n\tget auraIntensity() {\r\n\t\treturn this.uniforms.auraIntensity;\r\n\t}\r\n\r\n\tset auraIntensity(value) {\r\n\t\tthis.uniforms.auraIntensity = value;\r\n\t}\r\n\r\n\tget subAuraIntensity() {\r\n\t\treturn this.uniforms.subAuraIntensity;\r\n\t}\r\n\r\n\tset subAuraIntensity(value) {\r\n\t\tthis.uniforms.subAuraIntensity = value;\r\n\t}\r\n\r\n\tget threshold() {\r\n\t\treturn this.uniforms.threshold;\r\n\t}\r\n\r\n\tset threshold(value) {\r\n\t\tthis.uniforms.threshold = value;\r\n\t}\r\n\r\n\tget color() {\r\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\r\n\t}\r\n\r\n\tset color(value) {\r\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\r\n\t}\r\n\r\n\tget discard() {\r\n\t\treturn this.uniforms.holes;\r\n\t}\r\n\r\n\tset discard(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis.uniforms.holes = value;\r\n\t\t}\r\n\t}\r\n\r\n\tget auraType() {\r\n\t\treturn this.uniforms.auraType;\r\n\t}\r\n\r\n\tset auraType(value) {\r\n\t\tthis.uniforms.auraType = Math.floor(value);\r\n\t}\r\n\r\n\tapply(filterManager, input, output, clear) {\r\n\t\tthis.uniforms.thickness[0] = (this.thickness * this.targetPlaceable.worldTransform.a) / input._frame.width;\r\n\t\tthis.uniforms.thickness[1] = (this.thickness * this.targetPlaceable.worldTransform.a) / input._frame.height;\r\n\t\tsuper.apply(filterManager, input, output, clear);\r\n\t}\r\n}\r\n\r\nFilterGleamingGlow.defaults = {\r\n\ttime: 0,\r\n\tcolor: 0xff8010,\r\n\tthickness: 5,\r\n\tscale: 1,\r\n\tauraIntensity: 1,\r\n\tsubAuraIntensity: 1,\r\n\tdiscard: false,\r\n\tthreshold: 0.5,\r\n\tauraType: 1,\r\n};\r\n","export const magicGlow = `\r\nprecision mediump float;\r\n\r\nuniform sampler2D uSampler;\r\nuniform float time;\r\nuniform float scale;\r\nuniform float auraIntensity;\r\nuniform float subAuraIntensity;\r\nuniform float threshold;\r\nuniform int auraType;\r\nuniform bool holes;\r\nuniform vec2 thickness;\r\nuniform vec4 color;\r\nuniform vec4 inputSize;\r\nuniform vec4 inputClamp;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\nconst int NUM_OCTAVES = 4;\r\nconst float PI = 3.14159265358;\r\nconst float TWOPI = 6.28318530717;\r\nconst float MAX_TOTAL_ALPHA = 17.2787595915;\r\n\r\nfloat rand(vec2 uv)\r\n{\r\n    return fract(sin(dot(uv.xy ,vec2(12.9898,78.233))) * 43758.5453);\r\n}\r\n\r\nfloat noise(vec2 p)\r\n{\r\n\tvec2 ip = floor(p);\r\n\tvec2 u = fract(p);\r\n\tu = u*u*(3.0-2.0*u);\r\n\t\r\n\tfloat res = mix(\r\n\t\tmix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\r\n\t\tmix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\r\n\treturn res*res;\r\n}\r\n\r\nfloat fbm(vec2 x) \r\n{\r\n\tfloat v = 0.0;\r\n\tfloat a = 0.5;\r\n\tvec2 shift = vec2(100);\r\n    mat2 rot = mat2(cos(0.5), sin(0.5), -sin(0.5), cos(0.50));\r\n\tfor (int i = 0; i < NUM_OCTAVES; ++i) {\r\n\t\tv += a * noise(x);\r\n\t\tx = rot * x * 2.0 + shift;\r\n\t\ta *= 0.5;\r\n\t}\r\n\treturn v;\r\n}\r\n\r\nvec4 outlining() \r\n{\r\n    vec4 ownColor = texture2D(uSampler, vTextureCoord);\r\n    vec4 curColor;\r\n    float maxAlpha = 0.;\r\n    vec2 displaced;\r\n    for (float angle = 0.; angle <= TWOPI; angle += 0.3141592653) {\r\n        displaced.x = vTextureCoord.x + thickness.x * cos(angle);\r\n        displaced.y = vTextureCoord.y + thickness.y * sin(angle);\r\n        curColor = texture2D(uSampler, clamp(displaced, inputClamp.xy, inputClamp.zw));\r\n        maxAlpha = max(maxAlpha, curColor.a);\r\n    }\r\n    float resultAlpha = max(maxAlpha, ownColor.a);\r\n    return vec4((ownColor.rgb + color.rgb * (1. - ownColor.a)) * resultAlpha, resultAlpha);\r\n\r\n}\r\n\r\nvec4 glowing() \r\n{\r\n\tvec2 px = inputSize.zw;\r\n\r\n    float totalAlpha = 0.0;\r\n    float outerStrength = 6.;\r\n\r\n    vec2 direction;\r\n    vec2 displaced;\r\n    vec4 curColor;\r\n\r\n    for (float angle = 0.0; angle < TWOPI; angle += 0.3141592653) {\r\n       direction = vec2(cos(angle), sin(angle)) * px;\r\n\r\n       for (float curDistance = 0.0; curDistance < 10.; curDistance++) {\r\n           displaced = clamp(vTextureCoord + direction * \r\n                   (curDistance + 1.0), inputClamp.xy, inputClamp.zw);\r\n\r\n           curColor = texture2D(uSampler, displaced);\r\n           totalAlpha += (10. - curDistance) * curColor.a;\r\n       }\r\n    }\r\n    \r\n    curColor = texture2D(uSampler, vTextureCoord);\r\n\r\n    float alphaRatio = (totalAlpha / MAX_TOTAL_ALPHA);\r\n    float outerGlowAlpha = alphaRatio * outerStrength * (1. - curColor.a);\r\n    float outerGlowStrength = min(1.0 - curColor.a, outerGlowAlpha);\r\n\r\n    vec4 outerGlowColor = (outerGlowStrength * (color.rgba*0.1) );\r\n\r\n    float resultAlpha = outerGlowAlpha;\r\n    return vec4(color.rgb * resultAlpha, resultAlpha);\r\n}\r\n\r\nvec4 ripples(vec2 suv) \r\n{\r\n    suv.x += time/2.;\r\n    vec3 c1 = ( 0.0 ) * (color.rgb*10.);\r\n    vec3 c2 = vec3(c1);\r\n    vec3 c3 = vec3(c1);\r\n    vec3 c4 = vec3( color.r*5., color.g*3.3333, color.b*2. );\r\n    vec3 c5 = vec3(c3);\r\n    vec3 c6 = vec3(c1);\r\n    vec2 p = suv;\r\n    float q = 2.*fbm(p + time*0.2);\r\n    vec2 r = vec2(fbm(p + q + ( time*0.1  ) - p.x - p.y), fbm(p + p + ( time*0.1 )));\r\n    vec3 c = color.rgb * (\r\n        mix( c1, c2, fbm( p + r ) ) + mix( c3, c4, r.x ) - mix( c5, c6, r.y )\r\n    );\r\n    return vec4(c,1.);\r\n}\r\n\r\nvec4 noisy(vec2 suv)\r\n{\r\n    vec4 noiseColor;\r\n    noiseColor.rgb = (color.rgb * noise(suv + fbm(suv) + time));\r\n    noiseColor.a = 1.;\r\n    return clamp(noiseColor,0.,1.);\r\n}\r\n\r\nvoid main(void) \r\n{\r\n\r\n    vec4 pixel = texture2D(uSampler,vTextureCoord);\r\n\r\n    if (pixel.a == 1.) {\r\n        gl_FragColor =  pixel;\r\n    } else {\r\n        vec4 glowlevel = glowing();\r\n        vec4 outlinelevel = outlining();\r\n        vec4 aura;\r\n        \r\n        if (auraType <= 1) {\r\n            aura = ripples(vFilterCoord*20.*scale);\r\n        } else {\r\n            aura = noisy(vFilterCoord*20.*scale);\r\n        }\r\n\r\n        vec4 effect;\r\n        effect = ((glowlevel*subAuraIntensity)*0.1) + ((outlinelevel*auraIntensity)*0.8);\r\n\r\n        if (effect.a >= 0.) {effect.rgb = aura.rgb*(max(effect.a,0.));}\r\n\r\n        float intensity = effect.r + effect.g + effect.b;\r\n\t    if(intensity < threshold && effect.a != 0.) {\r\n            if (holes) {discard;}\r\n            effect.rgb = (color.rgb)*(effect.a*0.5);\r\n        } \r\n\r\n        gl_FragColor =  pixel + effect * (1.-pixel.a);\r\n    }\r\n}\r\n`;\r\n","import { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterPixelate extends PIXI.filters.PixelateFilter {\r\n\tconstructor(params) {\r\n\t\tsuper();\r\n\t\tthis.enabled = false;\r\n\t\tthis.animated = {};\r\n\t\tthis.sizeX = 5;\r\n\t\tthis.sizeY = 5;\r\n\t\tthis.zOrder = 20;\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\thandleTransform() {\r\n\t\tthis.size.x = this.sizeX * this.targetPlaceable.worldTransform.a;\r\n\t\tthis.size.y = this.sizeY * this.targetPlaceable.worldTransform.a;\r\n\t}\r\n}\r\n","import { spiderWeb } from '../glsl/fragmentshaders/spiderweb.js';\r\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\r\nimport { CustomFilter } from './CustomFilter.js';\r\nimport { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterSpiderWeb extends CustomFilter {\r\n\tconstructor(params) {\r\n\t\tlet { time, anchorX, anchorY, color, thickness, div1, div2, tear, amplitude, alphaDiscard } = Object.assign(\r\n\t\t\t{},\r\n\t\t\tFilterSpiderWeb.defaults,\r\n\t\t\tparams\r\n\t\t);\r\n\r\n\t\t// using specific vertex shader and fragment shader\r\n\t\tsuper(customVertex2D, spiderWeb);\r\n\r\n\t\tthis.uniforms.anchor = new Float32Array([0.5, -1.0]);\r\n\t\tthis.uniforms.color = new Float32Array([0.75, 0.75, 0.75]);\r\n\r\n\t\tObject.assign(this, {\r\n\t\t\ttime,\r\n\t\t\tanchorX,\r\n\t\t\tanchorY,\r\n\t\t\tcolor,\r\n\t\t\tthickness,\r\n\t\t\tdiv1,\r\n\t\t\tdiv2,\r\n\t\t\ttear,\r\n\t\t\tamplitude,\r\n\t\t\talphaDiscard,\r\n\t\t});\r\n\r\n\t\tthis.zOrder = 260;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\tget time() {\r\n\t\treturn this.uniforms.time;\r\n\t}\r\n\r\n\tset time(value) {\r\n\t\tthis.uniforms.time = value;\r\n\t}\r\n\r\n\tget color() {\r\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\r\n\t}\r\n\r\n\tset color(value) {\r\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\r\n\t}\r\n\r\n\tget anchorX() {\r\n\t\treturn this.uniforms.anchor[0];\r\n\t}\r\n\r\n\tset anchorX(value) {\r\n\t\tthis.uniforms.anchor[0] = 0.5;\r\n\t}\r\n\r\n\tget anchorY() {\r\n\t\treturn this.uniforms.anchor[1];\r\n\t}\r\n\r\n\tset anchorY(value) {\r\n\t\tthis.uniforms.anchor[1] = 0.5;\r\n\t}\r\n\r\n\tget thickness() {\r\n\t\treturn this.uniforms.thickness;\r\n\t}\r\n\r\n\tset thickness(value) {\r\n\t\tthis.uniforms.thickness = value;\r\n\t}\r\n\r\n\tget tear() {\r\n\t\treturn this.uniforms.tear;\r\n\t}\r\n\r\n\tset tear(value) {\r\n\t\tthis.uniforms.tear = value;\r\n\t}\r\n\r\n\tget amplitude() {\r\n\t\treturn this.uniforms.amplitude;\r\n\t}\r\n\r\n\tset amplitude(value) {\r\n\t\tthis.uniforms.amplitude = value;\r\n\t}\r\n\r\n\tget div1() {\r\n\t\treturn this.uniforms.div1;\r\n\t}\r\n\r\n\tset div1(value) {\r\n\t\tthis.uniforms.div1 = value;\r\n\t}\r\n\r\n\tget div2() {\r\n\t\treturn this.uniforms.div2;\r\n\t}\r\n\r\n\tset div2(value) {\r\n\t\tthis.uniforms.div2 = value;\r\n\t}\r\n\r\n\tget alphaDiscard() {\r\n\t\treturn this.uniforms.alphaDiscard;\r\n\t}\r\n\r\n\tset alphaDiscard(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis.uniforms.alphaDiscard = value;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nFilterSpiderWeb.defaults = {\r\n\ttime: 0.0,\r\n\tanchorX: 0.5,\r\n\tanchorY: 0.5,\r\n\tcolor: 0xbbbbbb,\r\n\tthickness: 1,\r\n\tdiv1: 10,\r\n\tdiv2: 10,\r\n\ttear: 0.54,\r\n\tamplitude: 0.8,\r\n\talphaDiscard: false,\r\n};\r\n","export const spiderWeb = `\r\nprecision mediump float;\r\n\r\nuniform float time;\r\nuniform float thickness;\r\nuniform float div1;\r\nuniform float div2;\r\nuniform float tear;\r\nuniform float amplitude;\r\nuniform bool alphaDiscard;\r\nuniform vec2 anchor;\r\nuniform vec3 color;\r\nuniform sampler2D uSampler;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\nconst float PI = 3.14159265358;\r\n\r\nfloat random(vec2 n) \r\n{ \r\n\treturn fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nfloat noise(vec2 n) \r\n{\r\n\tconst vec2 d = vec2(0., 1.0);\r\n\tvec2 b = floor(n);\r\n\tvec2 f = smoothstep(vec2(0.), vec2(1.0), fract(n));\r\n\treturn mix(mix(random(b), random(b + d.yx), f.x), \r\n\t       mix(random(b + d.xy), random(b + d.yy), f.x), f.y);\r\n}\r\n\r\nfloat fbm(vec2 n) \r\n{\r\n\tfloat total = 0.0, amp = amplitude;\r\n\tfor (int i = 0; i < 2; i++) {\r\n\t\ttotal += noise(n) * amp;\r\n\t\tn += n;\r\n\t\tamp *= 0.5;\r\n\t}\r\n\treturn total;\r\n}\r\n\r\nvec4 spiderweb()\r\n{\r\n    vec2 coord = vFilterCoord.xy + anchor;\r\n\r\n    float t = floor(time * 0.01) * 7.3962;\r\n\r\n    vec2 sc = (coord.xy - 1.) * 0.5;\r\n    float phi = atan(sc.y, sc.x + 1e-6);\r\n    vec2 pc = vec2(fract(phi / (PI * 2.)), length(sc));\r\n    \r\n    float h_divnum = div1;\r\n    float s_divnum = div2;\r\n    \r\n    float ddth = fbm(vec2(pc.x*h_divnum,pc.x*20.*pow(length(sc*0.5),2.))*3.);\r\n    \r\n    float h_rand = 0.3+0.0895*(0.1*cos(time)+010.9)*tear;\r\n    float s_rand = .355*(0.2*cos(time)+1.);\r\n    \r\n    float l = pc.y+ cos(ddth*0.5) * (h_rand - 0.4) + ddth*(s_rand - 0.5)*0.2;\r\n    \r\n    float ts = 0.05;\r\n    float a = smoothstep(abs(sin(( pc.x*PI*2.  )  * s_divnum) ),-.1,thickness * ts );\r\n    float b = smoothstep(abs(sin(( pc.y*PI*2. + h_rand + l)  * h_divnum ) ),-.1,thickness * ts );\r\n    float s = a*b*2.;\r\n    float m = alphaDiscard ? 1. : 2.25;\r\n    return vec4(color.rgb*m,2.)-vec4(s,s,s,1.);\r\n}\r\n\r\nvoid main() \r\n{\r\n    vec4 pixel = texture2D(uSampler,vTextureCoord);\r\n    vec4 result = max(spiderweb(),pixel)*pixel.a;\r\n    if (alphaDiscard && result.rgb == vec3(0.)) discard;\r\n    gl_FragColor = result;\r\n}\r\n`;\r\n","import { solarRipples } from '../glsl/fragmentshaders/ripples.js';\r\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\r\nimport { CustomFilter } from './CustomFilter.js';\r\nimport { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterSolarRipples extends CustomFilter {\r\n\tconstructor(params) {\r\n\t\tlet { time, color, amplitude, intensity, alphaDiscard, _octaves } = Object.assign(\r\n\t\t\t{},\r\n\t\t\tFilterSolarRipples.defaults,\r\n\t\t\tparams\r\n\t\t);\r\n\r\n\t\tif (typeof _octaves !== 'number') _octaves = FilterSolarRipples.defaults._octave;\r\n\t\tlet fragment = solarRipples.replace(`#define OCTAVES 3`, `#define OCTAVES ${_octaves}`);\r\n\r\n\t\t// using specific vertex shader and fragment shader\r\n\t\tsuper(customVertex2D, fragment);\r\n\r\n\t\tthis.uniforms.color = new Float32Array([0.75, 0.75, 0.75]);\r\n\r\n\t\tObject.assign(this, {\r\n\t\t\ttime,\r\n\t\t\tcolor,\r\n\t\t\tamplitude,\r\n\t\t\tintensity,\r\n\t\t\talphaDiscard,\r\n\t\t});\r\n\r\n\t\tthis.zOrder = 250;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\tget time() {\r\n\t\treturn this.uniforms.time;\r\n\t}\r\n\r\n\tset time(value) {\r\n\t\tthis.uniforms.time = value;\r\n\t}\r\n\r\n\tget color() {\r\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\r\n\t}\r\n\r\n\tset color(value) {\r\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\r\n\t}\r\n\r\n\tget amplitude() {\r\n\t\treturn this.uniforms.amplitude;\r\n\t}\r\n\r\n\tset amplitude(value) {\r\n\t\tthis.uniforms.amplitude = value;\r\n\t}\r\n\r\n\tget intensity() {\r\n\t\treturn this.uniforms.intensity;\r\n\t}\r\n\r\n\tset intensity(value) {\r\n\t\tthis.uniforms.intensity = value;\r\n\t}\r\n\r\n\tget alphaDiscard() {\r\n\t\treturn this.uniforms.alphaDiscard;\r\n\t}\r\n\r\n\tset alphaDiscard(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis.uniforms.alphaDiscard = value;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nFilterSolarRipples.defaults = {\r\n\ttime: 0.0,\r\n\tcolor: 0xbbbbbb,\r\n\tamplitude: 1,\r\n\tintensity: 0.001,\r\n\talphaDiscard: false,\r\n\t_octave: 3,\r\n};\r\n","export const solarRipples = `\r\nprecision mediump float;\r\nprecision mediump int;\r\n\r\nuniform vec3 color;\r\nuniform float time;\r\nuniform float amplitude;\r\nuniform float intensity;\r\nuniform bool alphaDiscard;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\nuniform sampler2D uSampler;\r\n\r\n#define PI 3.14159265\r\n#define OCTAVES 3\r\n\r\nfloat random(vec2 n) \r\n{ \r\n\treturn fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nfloat bornedCos(float minimum, float maximum)\r\n{\r\n    return (maximum-minimum)*(cos(2.*PI*time*0.05 + 1.)*0.5)+minimum;\r\n}\r\n\r\nfloat bornedSin(float minimum, float maximum)\r\n{\r\n    return (maximum-minimum)*(sin(2.*PI*time*0.05 + 1.)*0.5)+minimum;\r\n}\r\n\r\nfloat noise(vec2 n) \r\n{\r\n\tconst vec2 d = vec2(0.0, 1.0);\r\n\tvec2 b = floor(n);\r\n\tvec2 f = smoothstep(vec2(0.), vec2(1.0), fract(n));\r\n\treturn mix(mix(random(b), random(b + d.yx), f.x), \r\n\t       mix(random(b + d.xy), random(b + d.yy), f.x), f.y);\r\n}\r\n\r\nfloat fbm(vec2 n) \r\n{\r\n\tfloat total = 0.0, amp = amplitude;\r\n\tfor (int i = 0; i < OCTAVES; i++) {\r\n\t\ttotal += noise(n) * amp;\r\n\t\tn += n;\r\n\t\tamp *= 0.5;\r\n\t}\r\n\treturn total;\r\n}\r\n\r\nvec4 ripples(vec2 suv) \r\n{\r\n    suv.x += time*0.5;\r\n    vec3 c1 = color*intensity;\r\n    vec3 c2 = vec3(0.);\r\n    vec3 c3 = vec3(c1);\r\n    vec3 c4 = vec3(color.r*3.333, color.g*3.333, color.b*3.333);\r\n    vec3 c5 = vec3(c3);\r\n    vec3 c6 = vec3(c1);\r\n    vec2 p = suv;\r\n    float q = 2. * fbm(p + time * 2.);\r\n    vec2 r = vec2(fbm(p + q + ( time  ) - p.x - p.y), fbm(p + p + ( time )));\r\n    r.x += bornedCos(-0.3,-0.2);\r\n    r.y += 200.*bornedSin(-1.9,1.9);\r\n    \r\n    vec3 c = color * (\r\n        mix( c1, c2, fbm( p + r ) ) + mix( c3, c4, r.x ) - mix( c5, c6, r.y )\r\n    );\r\n    return vec4(c,1.);\r\n}\r\n\r\nvoid main() {\r\n\r\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\r\n    if (pixel.a==0.) {\r\n       gl_FragColor = pixel;\r\n       return;\r\n    }\r\n\r\n    vec4 result = max(ripples(15.* vFilterCoord),pixel);\r\n    if (alphaDiscard && all(lessThanEqual(result.rgb,vec3(0.40)))) discard;\r\n    gl_FragColor = result*pixel.a;\r\n}\r\n`;\r\n","import { globes } from '../glsl/fragmentshaders/globes.js';\r\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\r\nimport { CustomFilter } from './CustomFilter.js';\r\nimport { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterGlobes extends CustomFilter {\r\n\tconstructor(params) {\r\n\t\tlet { time, color, scale, distortion, alphaDiscard } = Object.assign({}, FilterGlobes.defaults, params);\r\n\r\n\t\t// using specific vertex shader and fragment shader\r\n\t\tsuper(customVertex2D, globes);\r\n\r\n\t\tthis.uniforms.color = new Float32Array([0.75, 0.75, 0.75]);\r\n\r\n\t\tObject.assign(this, {\r\n\t\t\ttime,\r\n\t\t\tcolor,\r\n\t\t\tscale,\r\n\t\t\tdistortion,\r\n\t\t\talphaDiscard,\r\n\t\t});\r\n\r\n\t\tthis.zOrder = 270;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\tget time() {\r\n\t\treturn this.uniforms.time;\r\n\t}\r\n\r\n\tset time(value) {\r\n\t\tthis.uniforms.time = value;\r\n\t}\r\n\r\n\tget color() {\r\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\r\n\t}\r\n\r\n\tset color(value) {\r\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\r\n\t}\r\n\r\n\tget scale() {\r\n\t\treturn this.uniforms.scale;\r\n\t}\r\n\r\n\tset scale(value) {\r\n\t\tthis.uniforms.scale = value;\r\n\t}\r\n\r\n\tget distortion() {\r\n\t\treturn this.uniforms.distortion;\r\n\t}\r\n\r\n\tset distortion(value) {\r\n\t\tthis.uniforms.distortion = value;\r\n\t}\r\n\r\n\tget alphaDiscard() {\r\n\t\treturn this.uniforms.alphaDiscard;\r\n\t}\r\n\r\n\tset alphaDiscard(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis.uniforms.alphaDiscard = value;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nFilterGlobes.defaults = {\r\n\ttime: 0.0,\r\n\tcolor: 0xaa3050,\r\n\tscale: 20,\r\n\tdistortion: 0.25,\r\n\talphaDiscard: false,\r\n};\r\n","export const globes = `\r\nprecision mediump float;\r\n\r\nuniform float time;\r\nuniform float scale;\r\nuniform float distortion;\r\nuniform bool alphaDiscard;\r\nuniform vec3 color;\r\nuniform sampler2D uSampler;\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\nconst float PI = 3.14159265358;\r\n\r\nfloat rand(vec2 c)\r\n{\r\n\treturn fract( sin( dot( c.xy, vec2( 12.9898, 78.233 ) ) ) * 43758.5453 );\r\n}\r\n\r\nvec2 rand2(vec2 st)\r\n{\r\n    st = vec2( dot(st,vec2(127.1,311.7)),\r\n              dot(st,vec2(269.5,183.3)) );\r\n    return -1.0 + 2.0*fract(cos(st)*43758.5453123);\r\n}\r\n\r\nvec3 toGray(vec3 color)\r\n{\r\n  float average = (color.r + color.g + color.b)*0.3333333;\r\n  return vec3(average, average, average);\r\n}\r\n\r\nvec3 colorize(vec3 grayscale, vec3 color)\r\n{\r\n    return (grayscale * color);\r\n}\r\n\r\nfloat noise (vec2 st) \r\n{\r\n    vec2 i = floor(st);\r\n    vec2 f = fract(st);\r\n\r\n    vec2 u = f*f*(3.0-2.0*f);\r\n\r\n    return mix( mix( dot( rand2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\r\n                     dot( rand2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\r\n                mix( dot( rand2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\r\n                     dot( rand2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\r\n}\r\n\r\nfloat circle(vec2 pos, float radius, float glow)\r\n{\r\n    float sdf = length(pos);\r\n    sdf = smoothstep(radius-0.700,radius,sdf);\r\n    float circles = 1.0 - smoothstep(0.0,1.0,sdf*1.280);\r\n    float glows = exp(-sdf*4.496) * glow * (3.0 - circles);\r\n    return circles+glows;\r\n}\r\n\r\nvec4 globes()\r\n{\r\n    vec2 st = (vFilterCoord - 0.5);\r\n    st *= scale;\r\n    vec2 uv = st;\r\n    float noisest = noise(vec2(uv.x - time,uv.y - time));\r\n    uv += noisest*distortion;\r\n    uv -= vec2( noise(vec2(time)*0.2)*4.0,-time*0.01);\r\n    \r\n    vec3 color = vec3(0.);\r\n    \r\n    \r\n    vec2 pos = fract(uv)-0.5;\r\n    vec2 id = floor(uv);\r\n\r\n    \r\n    for(int y = -1; y <= 1; y++){\r\n        for(int x = -1; x <= 1; x++){\r\n            vec2 neighbour = vec2(x,y);\r\n            vec2 rand2 = rand2(id+neighbour);\r\n            float a = noise(rand2+time*2.8);\r\n            vec2 offset = 0.5*(sin(time + rand2*5.28))*2.2;\r\n            float size = rand(id+neighbour)*0.75 + a*0.15;\r\n            color += circle(pos-neighbour+offset,size,size*1.400)*0.143 * vec3(rand2.x*7.884,7.2,rand2.y*6.832);\r\n        }\r\n    }\r\n    \r\n    return vec4(color,1.0);\r\n}\r\n\r\nvoid main() {\r\n    vec4 pixel = texture2D(uSampler,vTextureCoord);\r\n\r\n    vec4 tinyGlobes = vec4(colorize(toGray(globes().rgb*1.5),color*1.5),1.);\r\n\r\n    bool belowThreshold = all(lessThanEqual(tinyGlobes.rgb,vec3(0.6)));\r\n    if (alphaDiscard && belowThreshold) discard;\r\n    else if (belowThreshold) tinyGlobes = pixel;\r\n\r\n    gl_FragColor = max(tinyGlobes,pixel)*pixel.a;\r\n}\r\n`;\r\n","import { matrix } from '../glsl/fragmentshaders/matrix.js';\r\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\r\nimport { CustomFilter } from './CustomFilter.js';\r\nimport { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterTransform extends CustomFilter {\r\n\tconstructor(params) {\r\n\t\tlet {\r\n\t\t\trotation,\r\n\t\t\ttwRadiusPercent,\r\n\t\t\ttwAngle,\r\n\t\t\ttwRotation,\r\n\t\t\tbpRadiusPercent,\r\n\t\t\tbpStrength,\r\n\t\t\tscale,\r\n\t\t\tscaleX,\r\n\t\t\tscaleY,\r\n\t\t\tpivotX,\r\n\t\t\tpivotY,\r\n\t\t\ttranslationX,\r\n\t\t\ttranslationY,\r\n\t\t} = Object.assign({}, FilterTransform.defaults, params);\r\n\r\n\t\tsuper(customVertex2D, matrix);\r\n\r\n\t\tthis.uniforms.scale = new Float32Array([1.0, 1.0]);\r\n\t\tthis.uniforms.pivot = new Float32Array([0.5, 0.5]);\r\n\t\tthis.uniforms.translation = new Float32Array([0.0, 0.0]);\r\n\r\n\t\tObject.assign(this, {\r\n\t\t\trotation,\r\n\t\t\ttwRadiusPercent,\r\n\t\t\ttwAngle,\r\n\t\t\ttwRotation,\r\n\t\t\tbpRadiusPercent,\r\n\t\t\tbpStrength,\r\n\t\t\tscale,\r\n\t\t\tscaleX,\r\n\t\t\tscaleY,\r\n\t\t\tpivotX,\r\n\t\t\tpivotY,\r\n\t\t\ttranslationX,\r\n\t\t\ttranslationY,\r\n\t\t});\r\n\r\n\t\tthis.zOrder = 1000;\r\n\t\tthis.autoFit = false;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\tget rotation() {\r\n\t\treturn this.uniforms.rotation;\r\n\t}\r\n\r\n\tset rotation(value) {\r\n\t\tthis.uniforms.rotation = value;\r\n\t}\r\n\r\n\tget twRadiusPercent() {\r\n\t\treturn this.uniforms.twRadius * 200;\r\n\t}\r\n\r\n\tset twRadiusPercent(value) {\r\n\t\tthis.uniforms.twRadius = value / 200;\r\n\t}\r\n\r\n\tget twAngle() {\r\n\t\treturn this.uniforms.twAngle;\r\n\t}\r\n\r\n\tset twAngle(value) {\r\n\t\tthis.uniforms.twAngle = value;\r\n\t}\r\n\r\n\tget twRotation() {\r\n\t\treturn this.uniforms.twAngle * (180 / Math.PI);\r\n\t}\r\n\r\n\tset twRotation(value) {\r\n\t\tthis.uniforms.twAngle = value * (Math.PI / 180);\r\n\t}\r\n\r\n\tget bpRadiusPercent() {\r\n\t\treturn this.uniforms.bpRadius * 200;\r\n\t}\r\n\r\n\tset bpRadiusPercent(value) {\r\n\t\tthis.uniforms.bpRadius = value / 200;\r\n\t}\r\n\r\n\tget bpStrength() {\r\n\t\treturn this.uniforms.bpStrength;\r\n\t}\r\n\r\n\tset bpStrength(value) {\r\n\t\tthis.uniforms.bpStrength = value;\r\n\t}\r\n\r\n\tget scale() {\r\n\t\t// a little hack (we get only x)\r\n\t\treturn this.uniforms.scale[0];\r\n\t}\r\n\r\n\tset scale(value) {\r\n\t\tthis.uniforms.scale[1] = this.uniforms.scale[0] = value;\r\n\t}\r\n\r\n\tget scaleX() {\r\n\t\treturn this.uniforms.scale[0];\r\n\t}\r\n\r\n\tset scaleX(value) {\r\n\t\tthis.uniforms.scale[0] = value;\r\n\t}\r\n\r\n\tget scaleY() {\r\n\t\treturn this.uniforms.scale[1];\r\n\t}\r\n\r\n\tset scaleY(value) {\r\n\t\tthis.uniforms.scale[1] = value;\r\n\t}\r\n\r\n\tget pivotX() {\r\n\t\treturn this.uniforms.pivot[0];\r\n\t}\r\n\r\n\tset pivotX(value) {\r\n\t\tthis.uniforms.pivot[0] = value;\r\n\t}\r\n\r\n\tget pivotY() {\r\n\t\treturn this.uniforms.pivot[1];\r\n\t}\r\n\r\n\tset pivotY(value) {\r\n\t\tthis.uniforms.pivot[1] = value;\r\n\t}\r\n\r\n\tget translationX() {\r\n\t\treturn this.uniforms.translation[0];\r\n\t}\r\n\r\n\tset translationX(value) {\r\n\t\tthis.uniforms.translation[0] = value;\r\n\t}\r\n\r\n\tget translationY() {\r\n\t\treturn this.uniforms.translation[1];\r\n\t}\r\n\r\n\tset translationY(value) {\r\n\t\tthis.uniforms.translation[1] = value;\r\n\t}\r\n}\r\n\r\nFilterTransform.defaults = {\r\n\trotation: 0.0,\r\n\ttwRadiusPercent: 0,\r\n\ttwAngle: 0,\r\n\tbpRadiusPercent: 0,\r\n\tbpStrength: 0,\r\n\tscaleX: 1,\r\n\tscaleY: 1,\r\n\tpivotX: 0.5,\r\n\tpivotY: 0.5,\r\n\ttranslationX: 0,\r\n\ttranslationY: 0,\r\n};\r\n","export const matrix = `\r\nprecision mediump float;\r\n\r\nuniform float rotation;\r\nuniform float twRadius;\r\nuniform float twAngle;\r\nuniform float bpRadius;\r\nuniform float bpStrength;\r\nuniform vec2 scale;\r\nuniform vec2 translation;\r\nuniform vec2 pivot;\r\nuniform vec4 inputClamp;\r\nuniform sampler2D uSampler;\r\nuniform mat3 filterMatrixInverse;\r\n\r\nvarying vec2 vFilterCoord;\r\n\r\nconst float PI = 3.1415927;\r\n\r\nvec2 morphing(in vec2 uv) {\r\n    float dist = length(uv);\r\n\r\n    // twist effect\r\n    if (dist < twRadius) {\r\n        float ratioDist = (twRadius - dist) / twRadius;\r\n        float angleMod = ratioDist * ratioDist * twAngle;\r\n        float s = sin(angleMod);\r\n        float c = cos(angleMod);\r\n        uv = vec2(uv.x * c - uv.y * s, uv.x * s + uv.y * c);\r\n    }\r\n\r\n    // bulge pinch effect\r\n    if (dist < bpRadius) {\r\n        float percent = dist / bpRadius;\r\n        if (bpStrength > 0.) {\r\n            uv *= mix(1.0, smoothstep(0., bpRadius / dist, percent), bpStrength * 0.75);\r\n        } else {\r\n            uv *= mix(1.0, pow(percent, 1.0 + bpStrength * 0.75) * bpRadius / dist, 1.0 - percent);\r\n        }\r\n    }\r\n\r\n    return uv;\r\n}\r\n\r\nvec2 transform(in vec2 uv) {\r\n    float angle = -(PI * rotation * 0.005555555555);\r\n    uv -= pivot;\r\n    uv *= mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\r\n    uv *= mat2(scale.x, 0.0, 0.0, scale.y);\r\n    uv = morphing(uv);\r\n    uv += pivot;\r\n\r\n    return uv;\r\n}\r\n\r\nvoid main() {\r\n    vec2 uv = vFilterCoord + translation;\r\n    uv = transform(uv);\r\n    vec2 mappedCoord = (filterMatrixInverse * vec3(uv, 1.0)).xy;\r\n    vec4 pixel = texture2D(uSampler,clamp(mappedCoord, inputClamp.xy, inputClamp.zw));\r\n    gl_FragColor = pixel;\r\n}\r\n`;\r\n","import { splash } from '../glsl/fragmentshaders/splash.js';\r\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\r\nimport { CustomFilter } from './CustomFilter.js';\r\nimport { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterSplash extends CustomFilter {\r\n\tconstructor(params) {\r\n\t\tlet { time, seed, spread, splashFactor, color, dimX, dimY, blend, cut, textureAlphaBlend, anchorX, anchorY } =\r\n\t\t\tObject.assign({}, FilterSplash.defaults, params);\r\n\r\n\t\t// using specific vertex shader and fragment shader\r\n\t\tsuper(customVertex2D, splash);\r\n\r\n\t\tthis.uniforms.color = new Float32Array([1.0, 0.05, 0.05]);\r\n\t\tthis.uniforms.dimensions = new Float32Array([1.0, 1.0]);\r\n\t\tthis.uniforms.anchor = new Float32Array([0.0, 0.0]);\r\n\r\n\t\tObject.assign(this, {\r\n\t\t\ttime,\r\n\t\t\tseed,\r\n\t\t\tspread,\r\n\t\t\tsplashFactor,\r\n\t\t\tcolor,\r\n\t\t\tdimX,\r\n\t\t\tdimY,\r\n\t\t\tblend,\r\n\t\t\tcut,\r\n\t\t\ttextureAlphaBlend,\r\n\t\t\tanchorX,\r\n\t\t\tanchorY,\r\n\t\t});\r\n\r\n\t\tthis.zOrder = 5;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\tget time() {\r\n\t\treturn this.uniforms.time;\r\n\t}\r\n\r\n\tset time(value) {\r\n\t\tthis.uniforms.time = value;\r\n\t}\r\n\r\n\tget color() {\r\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\r\n\t}\r\n\r\n\tset color(value) {\r\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\r\n\t}\r\n\r\n\tget seed() {\r\n\t\treturn this.uniforms.seed;\r\n\t}\r\n\r\n\tset seed(value) {\r\n\t\tthis.uniforms.seed = value;\r\n\t}\r\n\r\n\tget spread() {\r\n\t\treturn this.uniforms.spread;\r\n\t}\r\n\r\n\tset spread(value) {\r\n\t\tthis.uniforms.spread = value;\r\n\t}\r\n\r\n\tget splashFactor() {\r\n\t\treturn this.uniforms.splashFactor;\r\n\t}\r\n\r\n\tset splashFactor(value) {\r\n\t\tthis.uniforms.splashFactor = value;\r\n\t}\r\n\r\n\tget dimX() {\r\n\t\treturn this.uniforms.dimensions[0];\r\n\t}\r\n\r\n\tset dimX(value) {\r\n\t\tthis.uniforms.dimensions[0] = value;\r\n\t}\r\n\r\n\tget dimY() {\r\n\t\treturn this.uniforms.dimensions[1];\r\n\t}\r\n\r\n\tset dimY(value) {\r\n\t\tthis.uniforms.dimensions[1] = value;\r\n\t}\r\n\r\n\tget anchorY() {\r\n\t\treturn this.uniforms.anchor[1] + 0.5;\r\n\t}\r\n\r\n\tset anchorY(value) {\r\n\t\tthis.uniforms.anchor[1] = value - 0.5;\r\n\t}\r\n\r\n\tget anchorX() {\r\n\t\treturn this.uniforms.anchor[0] + 0.5;\r\n\t}\r\n\r\n\tset anchorX(value) {\r\n\t\tthis.uniforms.anchor[0] = value - 0.5;\r\n\t}\r\n\r\n\tget blend() {\r\n\t\treturn this.uniforms.blend;\r\n\t}\r\n\r\n\tset blend(value) {\r\n\t\tthis.uniforms.blend = Math.floor(value);\r\n\t}\r\n\r\n\tget cut() {\r\n\t\treturn this.uniforms.cut;\r\n\t}\r\n\r\n\tset cut(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis.uniforms.cut = value;\r\n\t\t}\r\n\t}\r\n\r\n\tget textureAlphaBlend() {\r\n\t\treturn this.uniforms.textureAlphaBlend;\r\n\t}\r\n\r\n\tset textureAlphaBlend(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis.uniforms.textureAlphaBlend = value;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nFilterSplash.defaults = {\r\n\ttime: Math.random() * 2000,\r\n\tcolor: 0xf00505,\r\n\tseed: 0.1,\r\n\tspread: 5,\r\n\tsplashFactor: 2,\r\n\tdimX: 1,\r\n\tdimY: 1,\r\n\tblend: 8,\r\n\tcut: false,\r\n\ttextureAlphaBlend: false,\r\n\tanchorX: 0.5,\r\n\tanchorY: 0.5,\r\n};\r\n","export const splash = `\r\nprecision mediump float;\r\n\r\nuniform float time;\r\nuniform float seed;\r\nuniform float spread;\r\nuniform float splashFactor;\r\nuniform int blend;\r\nuniform vec2 dimensions;\r\nuniform vec2 anchor;\r\nuniform vec3 color;\r\nuniform bool cut;\r\nuniform bool textureAlphaBlend;\r\nuniform sampler2D uSampler;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\nfloat random(vec2 n) \r\n{ \r\n\treturn fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nvec4 blender(int blend, vec4 fCol, vec4 sCol)\r\n{\r\n    if ( blend == 1) { fCol.rgb = fCol.rgb * sCol.rgb; }\r\n    else if (blend == 2) { fCol.rgb = (1. - (1. - fCol.rgb) * (1. - sCol.rgb)); }\r\n    else if (blend == 3) { fCol.rgb = min(fCol.rgb, sCol.rgb); }\r\n    else if (blend == 4) { fCol.rgb = max(fCol.rgb, sCol.rgb); }\r\n    else if (blend == 5) { fCol.rgb = abs(fCol.rgb - sCol.rgb); }\r\n    else if (blend == 6) { fCol.rgb = 1. - abs(1. - fCol.rgb - sCol.rgb); }\r\n    else if (blend == 7) { fCol.rgb = fCol.rgb + sCol.rgb - (2. * fCol.rgb * sCol.rgb); }\r\n    else if (blend == 8) { fCol.rgb = all(lessThanEqual(fCol.rgb, vec3(0.5, 0.5, 0.5))) ? (2. * fCol.rgb * sCol.rgb) : (1. - 2. * (1. - fCol.rgb) * (1. - sCol.rgb)); }\r\n    else if (blend == 9) { fCol.rgb = all(lessThanEqual(sCol.rgb, vec3(0.5, 0.5, 0.5))) ? (2. * fCol.rgb * sCol.rgb) : (1. - 2. * (1. - fCol.rgb) * (1. - sCol.rgb)); }\r\n    else if (blend == 10) { fCol.rgb = all(lessThanEqual(sCol.rgb, vec3(0.5, 0.5, 0.5))) ? (2. * fCol.rgb * sCol.rgb + fCol.rgb * fCol.rgb * (1. - 2. * sCol.rgb)) : sqrt(fCol.rgb) * (2. * sCol.rgb - 1.) + (2. * fCol.rgb) * (1. - sCol.rgb); }\r\n    else if (blend == 11) { fCol.rgb = fCol.rgb / (1.0 - sCol.rgb); }\r\n    else if (blend == 12) { fCol.rgb = 1.0 - (1.0 - fCol.rgb) / (sCol.rgb)+0.001; }\r\n    else if (blend == 13) { fCol.rgb = fCol.rgb + sCol.rgb; }\r\n    else if (blend == 14) { fCol.rgb = (max(fCol.rgb,sCol.rgb)-(min(fCol.rgb,sCol.rgb)))+abs(fCol.rgb-sCol.rgb);}\r\n    else { fCol.rgb = clamp(fCol.rgb + sCol.rgb,0.,1.); }\r\n\r\n    fCol.a = max(fCol.a,sCol.a);\r\n    return fCol;\r\n}\r\n\r\nvec3 splash(vec2 g)\r\n{\r\n\tvec2 uv = (12.*(2.*g-1.)*.2) / dimensions;\r\n\r\n    float a = abs(atan(uv.x,uv.y) * splashFactor);   \r\n\tvec3 iuv = vec3(uv.x,uv.y,a);\r\n\r\n\tfloat cseed = sin(1.+fract(abs(random(vec2(seed*0.9854,seed*0.3541)))));\r\n    vec3 uvw = iuv;\r\n\r\n\tiuv = 1. - abs(1. - mod(uvw - time*0.1, 2.));\r\n\t\r\n    float initLen = length(iuv);\r\n    float nLen = initLen;\r\n    float tot = 0.;\r\n    \r\n    for (int i=0; i < 12; i++) \r\n\t{\r\n\t\tiuv = abs(iuv) / (initLen*initLen) - cseed;\r\n\t\tnLen = length(iuv);\r\n\t\ttot += abs(nLen-initLen);\r\n\t\tinitLen = nLen;\r\n    }\r\n    \r\n    float fc = tot + 1.0;\r\n\tfc = 1.-smoothstep(fc, fc+1.9, spread/dot(uv,uv));\r\n\t\r\n\treturn vec3(1.-fc)*color;\r\n}\r\n\r\nvoid main() {\r\n    vec4 pixel = texture2D(uSampler,vTextureCoord);\r\n    vec3 splashed = splash(vFilterCoord - anchor);\r\n\r\n    if (splashed == vec3(0.0))\r\n    {\r\n        if (pixel.a > 0. && !cut)\r\n        {\r\n            gl_FragColor = pixel;\r\n            return;\r\n        }\r\n        else if (cut) discard;\r\n    }\r\n\r\n    vec4 splashed4 = vec4(splashed,1.);\r\n    vec4 blendResult = mix(blender(blend, pixel, splashed4),splashed4,1.-pixel.a);\r\n    gl_FragColor = (textureAlphaBlend ? blendResult * pixel.a : blendResult);\r\n}\r\n`;\r\n","import { polymorph } from '../glsl/fragmentshaders/polymorph.js';\r\nimport { customVertex2DSampler } from '../glsl/vertexshaders/customvertex2DSampler.js';\r\nimport { CustomFilter } from './CustomFilter.js';\r\nimport { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\nimport { fixPath } from '../../module/tokenmagic.js';\r\n\r\nexport class FilterPolymorph extends CustomFilter {\r\n\tconstructor(params) {\r\n\t\tlet { imagePath, progress, magnify, type } = Object.assign({}, FilterPolymorph.defaults, params);\r\n\r\n\t\tconst targetSpriteMatrix = new PIXI.Matrix();\r\n\r\n\t\t// using specific vertex shader and fragment shader\r\n\t\tsuper(customVertex2DSampler, polymorph);\r\n\r\n\t\t// vertex uniforms\r\n\t\tthis.uniforms.targetUVMatrix = targetSpriteMatrix;\r\n\r\n\t\t// fragment uniforms\r\n\t\tthis.uniforms.inputClampTarget = new Float32Array([0, 0, 0, 0]);\r\n\r\n\t\t// to store sprite matrix from the filter manager (and send to vertex)\r\n\t\tthis.targetSpriteMatrix = targetSpriteMatrix;\r\n\r\n\t\tObject.assign(this, {\r\n\t\t\timagePath: fixPath(imagePath),\r\n\t\t\tprogress,\r\n\t\t\tmagnify,\r\n\t\t\ttype,\r\n\t\t});\r\n\r\n\t\tthis.zOrder = 1;\r\n\t\tthis.autoFit = false;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\tsetTMParams(params) {\r\n\t\tsuper.setTMParams(params);\r\n\t\tif (!this.dummy && 'imagePath' in params) {\r\n\t\t\tthis.assignTexture();\r\n\t\t}\r\n\t}\r\n\r\n\tget progress() {\r\n\t\treturn this.uniforms.progress * 100;\r\n\t}\r\n\r\n\tset progress(value) {\r\n\t\tthis.uniforms.progress = Math.min(Math.max(value * 0.01, 0), 1);\r\n\t}\r\n\r\n\tget magnify() {\r\n\t\treturn this.uniforms.magnify;\r\n\t}\r\n\r\n\tset magnify(value) {\r\n\t\tthis.uniforms.magnify = Math.min(Math.max(value, 0.1), 100);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn this.uniforms.type;\r\n\t}\r\n\r\n\tset type(value) {\r\n\t\tthis.uniforms.type = Math.floor(value);\r\n\t}\r\n\r\n\tget uSamplerTarget() {\r\n\t\treturn this.uniforms.uSamplerTarget;\r\n\t}\r\n\r\n\tset uSamplerTarget(value) {\r\n\t\tthis.uniforms.uSamplerTarget = value;\r\n\t}\r\n\r\n\t_setTargetSpriteSize() {\r\n\t\tconst sprite = this.targetSprite;\r\n\t\tlet ratioW = this.placeableImg._texture.baseTexture.realWidth / sprite.texture.baseTexture.realWidth;\r\n\t\tsprite.width = sprite.texture.baseTexture.realWidth * ratioW;\r\n\t\tsprite.height = sprite.texture.baseTexture.realHeight * ratioW;\r\n\t\tsprite.anchor.set(0.5);\r\n\t}\r\n\r\n\tassignTexture() {\r\n\t\tif (this.hasOwnProperty('imagePath')) {\r\n\t\t\tlet tex = PIXI.Texture.from(this.imagePath);\r\n\t\t\tlet sprite = new PIXI.Sprite(tex);\r\n\r\n\t\t\tsprite.renderable = false;\r\n\t\t\tthis.targetSprite = sprite;\r\n\r\n\t\t\t// We may need to wait for the texture to be loaded before accessing it's width and height\r\n\t\t\t// In such a case register an update listener which should be called when the texture is loaded/becomes valid\r\n\t\t\tif (tex.valid) {\r\n\t\t\t\tthis._setTargetSpriteSize();\r\n\t\t\t} else {\r\n\t\t\t\ttex.on('update', () => {\r\n\t\t\t\t\tthis._setTargetSpriteSize();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.uSamplerTarget = sprite._texture;\r\n\t\t\tthis.placeableImg.addChild(sprite);\r\n\t\t}\r\n\t}\r\n\r\n\t// override\r\n\tapply(filterManager, input, output, clear) {\r\n\t\tconst targetSprite = this.targetSprite;\r\n\t\tconst tex = targetSprite._texture;\r\n\r\n\t\tif (tex.valid) {\r\n\t\t\tif (!tex.uvMatrix) tex.uvMatrix = new PIXI.TextureMatrix(tex, 0.0);\r\n\t\t\ttex.uvMatrix.update();\r\n\r\n\t\t\tthis.uniforms.uSamplerTarget = tex;\r\n\t\t\tthis.uniforms.targetUVMatrix = filterManager\r\n\t\t\t\t.calculateSpriteMatrix(this.targetSpriteMatrix, targetSprite)\r\n\t\t\t\t.prepend(tex.uvMatrix.mapCoord);\r\n\t\t\tthis.uniforms.inputClampTarget = tex.uvMatrix.uClampFrame;\r\n\t\t}\r\n\r\n\t\tsuper.apply(filterManager, input, output, clear);\r\n\t}\r\n\r\n\t// override\r\n\tdestroy() {\r\n\t\tsuper.destroy();\r\n\t\tif (this.placeableImg) this.placeableImg.removeChild(this.targetSprite);\r\n\t\tthis.targetSprite.destroy({ children: true, texture: false, baseTexture: false });\r\n\t}\r\n}\r\n\r\nFilterPolymorph.defaults = {\r\n\tprogress: 0,\r\n\tmagnify: 1,\r\n\ttype: 1,\r\n};\r\n","export const polymorph = `#version 300 es\r\nprecision mediump float;\r\n\r\nuniform float progress;\r\nuniform float magnify;\r\nuniform int type;\r\nuniform vec4 inputClamp;\r\nuniform vec4 inputClampTarget;\r\nuniform sampler2D uSampler;\r\nuniform sampler2D uSamplerTarget;\r\nuniform mat3 filterMatrixInverse;\r\n\r\nin vec2 vTextureCoord;\r\nin vec2 vTextureCoordExtra;\r\nin vec2 vFilterCoord;\r\n\r\nout vec4 outputColor;\r\n\r\nconst float PI = 3.14159265358;\r\n\r\nfloat getClip(vec2 uv) {\r\n    return step(3.5,\r\n       step(inputClampTarget.x, uv.x) +\r\n       step(inputClampTarget.y, uv.y) +\r\n       step(uv.x, inputClampTarget.z) +\r\n       step(uv.y, inputClampTarget.w));\r\n}\r\n\r\nvec4 getFromColor(vec2 uv) {\r\n    return texture(uSampler,clamp(uv,inputClamp.xy,inputClamp.zw));\r\n}\r\n\r\nvec4 getToColor(vec2 uv) {\r\n    return texture(uSamplerTarget,clamp(uv,inputClampTarget.xy,inputClampTarget.zw))*getClip(uv);\r\n}\r\n\r\nfloat rand(vec2 co) {\r\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\r\n}\r\n\r\nvec2 offset(float progress, float x, float theta, float str) {\r\n    float shifty = str*progress*cos(10.0*(progress+x));\r\n    return vec2(0, shifty);\r\n}\r\n\r\nvec2 roffset(float progress, float x, float theta, float str) {\r\n    float shifty = (1.-progress)*str*progress*cos(10.0*(progress+x));\r\n    return vec2(0, shifty);\r\n}\r\n\r\nfloat noise(vec2 co) {\r\n    float a = 12.9898;\r\n    float b = 78.233;\r\n    float c = 43758.5453;\r\n    float dt= dot(co.xy * progress, vec2(a, b));\r\n    float sn= mod(dt,3.14);\r\n    return fract(sin(sn) * c);\r\n}\r\n\r\nvec4 morph(vec2 uv, vec2 uvt) {\r\n    vec4 ca = getFromColor(uv);\r\n    vec4 cb = getToColor(uvt);\r\n    vec2 oa = (((ca.rg+ca.b)*0.5)*2.0-1.0);\r\n    vec2 ob = (((cb.rg+cb.b)*0.5)*2.0-1.0);\r\n    vec2 oc = mix(oa,ob,0.5)*0.1;\r\n    float w0 = progress;\r\n    float w1 = 1.0-w0;\r\n    vec2 sourceMappedCoord = (filterMatrixInverse * vec3(vFilterCoord+(oc*0.4)*w0, 1.0)).xy;\r\n    vec4 fromcol = getFromColor(sourceMappedCoord);\r\n    vec4 tocol = getToColor(uvt-oc*w1);\r\n    float a = mix(ca.a, cb.a, progress);\r\n    return mix(fromcol, tocol, progress)*a;\r\n}\r\n\r\nvec4 waterdrop(vec2 uv, vec2 uvt) {\r\n    vec2 dirt = uvt - vec2(.5);\r\n    float distt = length(dirt);\r\n    if (distt > progress) {\r\n        return mix(getFromColor(uv), getToColor(uvt), progress);\r\n    } else {\r\n        vec2 shiftuvt = dirt * sin(distt * 60. - progress * 20.);\r\n        vec2 fuv = (filterMatrixInverse * vec3(vFilterCoord + (shiftuvt*(1.-progress)), 1.0)).xy;\r\n        return mix(getFromColor(fuv), getToColor(uvt + (shiftuvt*(1.-progress))), progress);\r\n    }\r\n}\r\n\r\nvec4 dreamy(vec2 uv, vec2 uvt) {\r\n    return mix(getFromColor(uv + offset(progress, uv.x, 0.0, 0.03)), \r\n               getToColor(uvt + offset(1.0-progress, uvt.x, 3.14, 0.03)), \r\n               progress);\r\n}\r\n\r\nvec2 swirluv(vec2 uv) {\r\n    vec2 xy = 2.* uv - 1.;\r\n    float fdist = length(xy);\r\n    if (fdist > 1.) return uv;\r\n    uv -= vec2( 0.5, 0.5 );\r\n    float dist = length(uv);\r\n    if ( dist < 1. ) {\r\n\t    float pct = (1. - dist);\r\n\t    float a = ( progress <= 0.5 ) ? mix( 0.0, 1.0, progress*2. ) : mix( 1.0, 0.0, (progress-0.5)*2. );\r\n\t    float t = pct * pct * a * 5.0 * 3.14159;\r\n\t    float s = sin( t );\r\n\t    float c = cos( t );\r\n\t    uv = vec2(dot(uv,vec2(c,-s)),dot(uv,vec2(s,c)));\r\n    }\r\n    uv += vec2(0.5,0.5);\r\n    return uv;\r\n}\r\n\r\nvec4 swirl(vec2 uv, vec2 uvt) {\r\n    vec2 suvfrom = swirluv(vFilterCoord);\r\n    vec2 suvto = swirluv(uvt);\r\n    vec2 sourceMappedCoord = (filterMatrixInverse * vec3(suvfrom, 1.0)).xy;\r\n    vec4 fscol = getFromColor(sourceMappedCoord);\r\n    vec4 ftcol = getToColor(suvto);\r\n    return mix( fscol, ftcol, progress );\r\n}\r\n\r\nvec4 crosswarp(vec2 uv, vec2 uvt) {\r\n    float x = progress;\r\n    x = smoothstep(.0,1.0,(x*2.0+uv.x-1.0));\r\n    vec4 rawfscol = getFromColor(uv);\r\n    vec4 fscol = getFromColor((uv-.5)*(1.-x)+.5);\r\n    vec4 ftcol = getToColor(uvt);\r\n    return mix(fscol, ftcol, x)*mix(rawfscol.a,ftcol.a,progress);\r\n}\r\n\r\nvec4 tvnoise(vec2 uv, vec2 uvt) {\r\n    vec4 noise = vec4(vec3(noise(uv)), 1.);\r\n    vec4 fscol = getFromColor(uv);\r\n    vec4 ftcol = getToColor(uvt);\r\n    float alphamix = mix(fscol.a, ftcol.a, pow(clamp(progress,0.,1.), 0.6));\r\n    if (progress <= 0.30) {\r\n        return mix(fscol, noise*alphamix, pow(clamp(progress,0.,1.),0.3-progress));\r\n    } else if (progress >= 0.70) {\r\n        return mix(noise*alphamix, ftcol, pow(clamp(progress-0.7,0.,1.),1.-progress));\r\n    } else {\r\n        return noise*alphamix;\r\n    }\r\n}\r\n\r\nvec4 hologram(vec2 uv, vec2 uvt) {\r\n    float cosProg = 0.5*(cos(2.*PI*progress)+1.);\r\n    vec4 fscol = getFromColor(uv + roffset(progress, uvt.x, 0., 0.12));\r\n    vec4 ftcol = getToColor(uvt + roffset(progress, uvt.x, 0., 0.6));\r\n  \r\n    float scintensity = max(max(fscol.r,fscol.g),fscol.b);\r\n    float tcintensity = max(max(ftcol.r,ftcol.g),ftcol.b);\r\n\r\n    vec4 tscol = vec4(0.,fscol.g*3.,0.,1.)*scintensity;\r\n    vec4 ttcol = vec4(ftcol.r*3.,0.,0.,1.)*tcintensity;\r\n    \r\n    vec4 iscol = vec4(0.,fscol.g*3.,fscol.b*3.,1.)*scintensity;\r\n    vec4 itcol = vec4(ftcol.r*3.,0.,ftcol.b*3.,1.)*tcintensity;\r\n    \r\n    vec4 smix = mix(mix(fscol,tscol,progress),iscol,1.-cosProg);\r\n    vec4 tmix = mix(mix(ftcol,ttcol,1.-progress),itcol,1.-cosProg);;\r\n\r\n    return mix(smix, \r\n               tmix, \r\n               progress);\r\n}\r\n\r\nvec4 wind(vec2 uv, vec2 uvt) {\r\n    float r = rand(vec2(0, uv.y));\r\n    float m = smoothstep(0.0, -0.25, uv.x*0.75 + 0.25*r - (progress * 1.25));\r\n    return mix(\r\n        getFromColor(uv),\r\n        getToColor(uvt),\r\n        m\r\n    );\r\n}\r\n\r\nvec4 transition(vec2 uv, vec2 uvt) {\r\n    return mix(\r\n        getFromColor(uv),\r\n        getToColor(uvt),\r\n        progress\r\n    );\r\n}\r\n\r\nvoid main() {\r\n    vec4 result;\r\n    float scale = 1./magnify;\r\n    vec2 uvExtra = vTextureCoordExtra;\r\n    uvExtra -= vec2(0.5);\r\n    uvExtra *= mat2(scale,0.,0.,scale);\r\n    uvExtra += vec2(0.5);\r\n\r\n    // shortcut to prevent a lot of computation if progress is equal to 0 or 1\r\n    if (progress == 1.) {\r\n        outputColor = getToColor(uvExtra);\r\n        return;\r\n    }\r\n\r\n    if (progress == 0.) {\r\n        outputColor = getFromColor(vTextureCoord);\r\n        return;\r\n    }\r\n\r\n    if (type <= 1 || type >= 10) {\r\n        result = transition(vTextureCoord, uvExtra);\r\n    } else if (type == 2) {\r\n        result = dreamy(vTextureCoord, uvExtra);\r\n    } else if (type == 3) {\r\n        result = swirl(vTextureCoord, uvExtra);\r\n    } else if (type == 4) {\r\n        result = waterdrop(vTextureCoord, uvExtra);\r\n    } else if (type == 5) {\r\n        result = tvnoise(vTextureCoord, uvExtra);\r\n    } else if (type == 6) {\r\n        result = morph(vTextureCoord, uvExtra);\r\n    } else if (type == 7) {\r\n        result = crosswarp(vTextureCoord, uvExtra);\r\n    } else if (type == 8) {\r\n        result = wind(vTextureCoord, uvExtra);\r\n    } else if (type == 9) {\r\n        result = hologram(vTextureCoord, uvExtra);\r\n    } \r\n   \r\n    outputColor = result;\r\n}\r\n`;\r\n","// Custom vertex shader with filter matrix to map for additional sampler\r\n\r\nexport const customVertex2DSampler = `#version 300 es\r\nprecision mediump float;\r\n\r\nin vec2 aVertexPosition;\r\n\r\nuniform mat3 projectionMatrix;\r\nuniform mat3 filterMatrix;\r\nuniform mat3 targetUVMatrix;\r\n\r\nout vec2 vTextureCoord;\r\nout vec2 vTextureCoordExtra;\r\nout vec2 vFilterCoord;\r\n\r\nuniform vec4 inputSize;\r\nuniform vec4 outputFrame;\r\n\r\nvec4 filterVertexPosition( void )\r\n{\r\n    vec2 position = aVertexPosition * max(outputFrame.zw, vec2(0.)) + outputFrame.xy;\r\n\r\n    return vec4((projectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);\r\n}\r\n\r\nvec2 filterTextureCoord( void )\r\n{\r\n    return aVertexPosition * (outputFrame.zw * inputSize.zw);\r\n}\r\n\r\nvoid main(void)\r\n{\r\n\tgl_Position = filterVertexPosition();\r\n\tvTextureCoord = filterTextureCoord();\r\n\tvTextureCoordExtra = (targetUVMatrix * vec3(vTextureCoord, 1.0)).xy;\r\n    vFilterCoord = (filterMatrix * vec3(vTextureCoord, 1.0)).xy;\r\n}\r\n`;\r\n","import { burnXFire } from '../glsl/fragmentshaders/xfire.js';\r\nimport { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\r\nimport { CustomFilter } from './CustomFilter.js';\r\nimport { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterXFire extends CustomFilter {\r\n\tconstructor(params) {\r\n\t\tlet {\r\n\t\t\ttime,\r\n\t\t\tcolor,\r\n\t\t\tcolor1,\r\n\t\t\tcolor2,\r\n\t\t\tcolor3,\r\n\t\t\tcolor4,\r\n\t\t\tamplitude,\r\n\t\t\tdispersion,\r\n\t\t\tblend,\r\n\t\t\tscaleX,\r\n\t\t\tscaleY,\r\n\t\t\talphaDiscard,\r\n\t\t\tdiscardThreshold,\r\n\t\t\tchromatic,\r\n\t\t\tinlay,\r\n\t\t} = Object.assign({}, FilterXFire.defaults, params);\r\n\r\n\t\t// using specific vertex shader and fragment shader\r\n\t\tsuper(customVertex2D, burnXFire);\r\n\r\n\t\tthis.uniforms.color = new Float32Array([1.0, 1.0, 1.0]);\r\n\t\tthis.uniforms.color1 = new Float32Array([1.0, 1.0, 1.0]);\r\n\t\tthis.uniforms.color2 = new Float32Array([1.0, 1.0, 1.0]);\r\n\t\tthis.uniforms.color3 = new Float32Array([1.0, 1.0, 1.0]);\r\n\t\tthis.uniforms.color4 = new Float32Array([1.0, 1.0, 1.0]);\r\n\t\tthis.uniforms.scale = new Float32Array([1.0, 1.0]);\r\n\r\n\t\tObject.assign(this, {\r\n\t\t\ttime,\r\n\t\t\tcolor,\r\n\t\t\tcolor1,\r\n\t\t\tcolor2,\r\n\t\t\tcolor3,\r\n\t\t\tcolor4,\r\n\t\t\tamplitude,\r\n\t\t\tdispersion,\r\n\t\t\tblend,\r\n\t\t\tscaleX,\r\n\t\t\tscaleY,\r\n\t\t\talphaDiscard,\r\n\t\t\tdiscardThreshold,\r\n\t\t\tchromatic,\r\n\t\t\tinlay,\r\n\t\t});\r\n\r\n\t\tthis.zOrder = 145;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\tget time() {\r\n\t\treturn this.uniforms.time;\r\n\t}\r\n\r\n\tset time(value) {\r\n\t\tthis.uniforms.time = value;\r\n\t}\r\n\r\n\tget color() {\r\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\r\n\t}\r\n\r\n\tset color(value) {\r\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\r\n\t}\r\n\r\n\tget color1() {\r\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color1);\r\n\t}\r\n\r\n\tset color1(value) {\r\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color1);\r\n\t}\r\n\r\n\tget color2() {\r\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color2);\r\n\t}\r\n\r\n\tset color2(value) {\r\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color2);\r\n\t}\r\n\r\n\tget color3() {\r\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color3);\r\n\t}\r\n\r\n\tset color3(value) {\r\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color3);\r\n\t}\r\n\r\n\tget color4() {\r\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color4);\r\n\t}\r\n\r\n\tset color4(value) {\r\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color4);\r\n\t}\r\n\r\n\tget amplitude() {\r\n\t\treturn this.uniforms.amplitude;\r\n\t}\r\n\r\n\tset amplitude(value) {\r\n\t\tthis.uniforms.amplitude = value;\r\n\t}\r\n\r\n\tget dispersion() {\r\n\t\treturn this.uniforms.dispersion;\r\n\t}\r\n\r\n\tset dispersion(value) {\r\n\t\tthis.uniforms.dispersion = value;\r\n\t}\r\n\r\n\tget blend() {\r\n\t\treturn this.uniforms.blend;\r\n\t}\r\n\r\n\tset blend(value) {\r\n\t\tthis.uniforms.blend = Math.floor(value);\r\n\t}\r\n\r\n\tget scaleX() {\r\n\t\treturn this.uniforms.scale[0];\r\n\t}\r\n\r\n\tset scaleX(value) {\r\n\t\tthis.uniforms.scale[0] = value;\r\n\t}\r\n\r\n\tget scaleY() {\r\n\t\treturn this.uniforms.scale[1];\r\n\t}\r\n\r\n\tset scaleY(value) {\r\n\t\tthis.uniforms.scale[1] = value;\r\n\t}\r\n\r\n\tget alphaDiscard() {\r\n\t\treturn this.uniforms.alphaDiscard;\r\n\t}\r\n\r\n\tset alphaDiscard(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis.uniforms.alphaDiscard = value;\r\n\t\t}\r\n\t}\r\n\r\n\tget discardThreshold() {\r\n\t\treturn this.uniforms.discardThreshold;\r\n\t}\r\n\r\n\tset discardThreshold(value) {\r\n\t\tthis.uniforms.discardThreshold = value;\r\n\t}\r\n\r\n\tget chromatic() {\r\n\t\treturn this.uniforms.chromatic;\r\n\t}\r\n\r\n\tset chromatic(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis.uniforms.chromatic = value;\r\n\t\t}\r\n\t}\r\n\r\n\tget inlay() {\r\n\t\treturn this.uniforms.inlay;\r\n\t}\r\n\r\n\tset inlay(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis.uniforms.inlay = value;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nFilterXFire.defaults = {\r\n\ttime: 0,\r\n\tcolor: 0x000000,\r\n\tcolor1: 0x250000,\r\n\tcolor2: 0xb20000,\r\n\tcolor3: 0x330000,\r\n\tcolor4: 0xffe500,\r\n\tamplitude: 1,\r\n\tdispersion: 0.25,\r\n\tblend: 2,\r\n\tscaleX: 1,\r\n\tscaleY: 1,\r\n\tdiscardThreshold: 0.1,\r\n\talphaDiscard: false,\r\n\tchromatic: false,\r\n\tinlay: false,\r\n};\r\n","export const burnXFire = `\r\nprecision mediump float;\r\n\r\nuniform float time;\r\nuniform float amplitude;\r\nuniform float dispersion;\r\nuniform float discardThreshold;\r\nuniform int blend;\r\nuniform bool alphaDiscard;\r\nuniform bool chromatic;\r\nuniform bool inlay;\r\nuniform vec2 scale;\r\nuniform vec3 color;\r\nuniform vec3 color1;\r\nuniform vec3 color2;\r\nuniform vec3 color3;\r\nuniform vec3 color4;\r\n\r\nuniform sampler2D uSampler;\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vFilterCoord;\r\n\r\nconst float MU_3 = 0.333333333334;\r\n\r\nfloat rand(vec2 n) { \r\n\treturn fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nfloat maxRgbIntensity(vec3 col) {\r\n    return max(max(col.r,col.g),col.b);\r\n}\r\n\r\nfloat colorIntensity(vec3 col) {\r\n    return clamp((col.r + col.g + col.b)*MU_3,0.,1.);\r\n}\r\n\r\nvec3 blendLinearDual(vec3 base, vec3 blend, float intensity) {\r\n    if (intensity < dispersion) {\r\n        return mix(base,blend,pow(abs((1.-dispersion)),clamp(10.*dispersion,1.,3.)));\r\n    } \r\n    return mix(blend,mix(blend,base,1.-pow(intensity*dispersion,0.5)),1.-pow(intensity,4.));\r\n}\r\n\r\nvec3 blendScreen(vec3 base, vec3 blend, float intensity) {\r\n    return vec3(1.)\r\n            -((1.-base*(intensity+dispersion))\r\n            *(1.-blend*clamp(pow(intensity,dispersion),0.,1.)));\r\n}\r\n\r\nfloat blendScreenPure(float base, float blend) {\r\n\treturn 1.0-((1.0-base)*(1.0-blend));\r\n}\r\n\r\nvec3 blendScreenPure(vec3 base, vec3 blend) {\r\n\treturn vec3(blendScreenPure(base.r,blend.r),blendScreenPure(base.g,blend.g),blendScreenPure(base.b,blend.b));\r\n}\r\n\r\nvec3 blendMix(vec3 base, vec3 blend) {\r\n\treturn mix(blendLinearDual(base, blend, smoothstep(0.35,0.6,1.-colorIntensity(blend))),\r\n\t           blendScreen(base, blend, smoothstep(0.,1.,1.-colorIntensity(blend))),\r\n\t           smoothstep(0.,1.,colorIntensity((base+blend)*0.5)));\r\n}\r\n\r\nfloat blendColorBurn(float base, float blend) {\r\n\treturn (blend==0.0)?blend:max((1.0-((1.0-base)/blend)),0.0);\r\n}\r\n\r\nvec3 blendColorBurn(vec3 base, vec3 blend) {\r\n\treturn vec3(blendColorBurn(base.r,blend.r),blendColorBurn(base.g,blend.g),blendColorBurn(base.b,blend.b));\r\n}\r\n\r\nfloat blendColorDodge(float base, float blend) {\r\n\treturn (blend==1.0)?blend:min(base/(1.0-blend),1.0);\r\n}\r\n\r\nvec3 blendColorDodge(vec3 base, vec3 blend) {\r\n\treturn vec3(blendColorDodge(base.r,blend.r),blendColorDodge(base.g,blend.g),blendColorDodge(base.b,blend.b));\r\n}\r\n\r\nfloat blendVividLight(float base, float blend) {\r\n\treturn (blend<0.5)?blendColorBurn(base,(2.0*blend)):blendColorDodge(base,(2.0*(blend-0.5)));\r\n}\r\n\r\nvec3 blendVividLight(vec3 base, vec3 blend) {\r\n\treturn vec3(blendVividLight(base.r,blend.r),blendVividLight(base.g,blend.g),blendVividLight(base.b,blend.b));\r\n}\r\n\r\nvec4 blender(int blend, vec3 scol, vec3 tcol) {\r\n    if (blend <= 1) {\r\n        scol = mix(scol, tcol, smoothstep(dispersion, 1., maxRgbIntensity(tcol)));\r\n    } else if (blend == 2) {\r\n        scol = blendLinearDual(scol, tcol, maxRgbIntensity(tcol));\r\n    } else if (blend == 3) {\r\n        scol = blendLinearDual(scol, tcol, colorIntensity(tcol));\r\n    } else if (blend == 4) {\r\n        scol = blendScreen(scol, tcol, maxRgbIntensity(tcol));\r\n    } else if (blend == 5) {\r\n        scol = blendScreen(scol, tcol, colorIntensity(tcol));\r\n    } else if (blend == 6) {\r\n        scol = blendVividLight(scol,tcol);\r\n    } else if (blend == 7) {\r\n        scol = blendColorDodge(scol,tcol);\r\n    } else if (blend == 8) {\r\n        scol = blendColorBurn(scol,tcol);\r\n    } else if (blend == 9) {\r\n        scol = blendScreen(scol, blendVividLight(scol,tcol), colorIntensity(tcol));\r\n    } else if (blend == 10) {\r\n        scol = blendScreen(scol, blendColorDodge(scol,tcol), colorIntensity(tcol));\r\n    } else if (blend == 11) {\r\n        scol = blendLinearDual(blendVividLight(scol,tcol), tcol, maxRgbIntensity(tcol));\r\n    } else if (blend == 12) {\r\n        scol = blendMix(scol,tcol);\r\n    } else if (blend == 13) {\r\n        scol = blendScreenPure(scol,tcol);\r\n    } else if (blend >= 14) {\r\n        scol = blendScreenPure(scol,tcol*0.5);\r\n    }\r\n\r\n    return vec4(scol,1.);\r\n}\r\n\r\nfloat noise(vec2 n) {\r\n\tconst vec2 d = vec2(0.0, 1.0);\r\n\tvec2 b = floor(n);\r\n\tvec2 f = smoothstep(vec2(0.), vec2(1.0), fract(n));\r\n\treturn mix(mix(rand(b), rand(b + d.yx), f.x), \r\n\t       mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\r\n}\r\n\r\nfloat fbm(vec2 n) {\r\n\tfloat total = 0.0, amp = amplitude;\r\n\tfor (int i = 0; i < 5; i++) {\r\n\t\ttotal += noise(n) * amp;\r\n\t\tn += n;\r\n\t\tamp *= 0.5;\r\n\t}\r\n\treturn total;\r\n}\r\n\r\nvec3 fire(in vec4 pixel) {\r\n    vec3 c1,c2,c3,c4;\r\n\r\n    if (chromatic) {\r\n        c1 = vec3(0.00, 0.50, 0.50);\r\n    \tc2 = vec3(0.60, 0.35, 0.70);\r\n    \tc3 = vec3(0.20, 0.90, 1.00);\r\n    \tc4 = vec3(0.90, 1.00, 0.60); \r\n    } else if ( any(greaterThan(color,vec3(0.))) ) {\r\n        c1 = vec3(0.10*color);\r\n    \tc2 = vec3(0.85*color);\r\n    \tc3 = vec3(0.35*color);\r\n    \tc4 = vec3(color);\r\n    } else {\r\n        c1 = color1;\r\n        c2 = color2;\r\n        c3 = color3;\r\n        c4 = color4;\r\n    }\r\n\r\n\tconst vec3 c5 = vec3(0.1);\r\n\tconst vec3 c6 = vec3(0.9);\r\n\tconst vec2 pivot = vec2(0.5);\r\n\t\r\n    vec2 uv = vFilterCoord;\r\n    uv -= pivot;\r\n\tvec2 p = uv * mat2(8.*scale.x,0.0,0.0,8.*scale.y);\r\n\tuv += pivot;\r\n\r\n    vec2 r;\r\n\tvec3 c;\r\n\tfloat t = time*0.1;\r\n\tfloat q = fbm(p - t);\r\n\r\n\tif (inlay) {\r\n\t    float sat = pixel.r + pixel.g + pixel.b;\r\n\t    float sat4 = sat*4.;\r\n\t    r = vec2(fbm(p + q + t - p.x - p.y - sat), fbm(p + q - t + sat4));\r\n\t    c = mix(c1, c2, fbm(p + r + sat4)) + mix(c3, c4, 1.4-pixel.rgb) - mix(c5, c6, r.y);\r\n\t} else {\r\n\t    r = vec2(fbm(p + q + time - p.x - p.y), fbm(p + q - t));\r\n\t    c = mix(c1, c2, fbm(p + r)) + mix(c3, c4, r.x) - mix(c5, c6, r.y);\r\n\t}\r\n\t\r\n\treturn clamp(c,0.,1.);\r\n}\r\n\r\nvoid main() {\r\n    vec4 pixel = texture2D(uSampler, vTextureCoord);\r\n    if (pixel.a==0.) {\r\n       gl_FragColor = pixel;\r\n       return;\r\n    }\r\n\r\n    vec3 fire = fire(pixel);\r\n    if (alphaDiscard && all(lessThanEqual(fire,vec3(discardThreshold))))  {\r\n        discard;\r\n    }\r\n\r\n    vec4 result = blender(blend, pixel.rgb, fire);\r\n\r\n\tgl_FragColor = result*pixel.a;\r\n}\r\n`;\r\n","import { sprite } from '../glsl/fragmentshaders/sprite.js';\r\nimport { customVertex2DSampler } from '../glsl/vertexshaders/customvertex2DSampler.js';\r\nimport { CustomFilter } from './CustomFilter.js';\r\nimport { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\nimport { fixPath } from '../../module/tokenmagic.js';\r\n\r\nexport class FilterSprite extends CustomFilter {\r\n\ttex = null;\r\n\r\n\tconstructor(params) {\r\n\t\tlet {\r\n\t\t\timagePath,\r\n\t\t\tcolor,\r\n\t\t\tcolorize,\r\n\t\t\tinverse,\r\n\t\t\talpha,\r\n\t\t\talphaDiscard,\r\n\t\t\trepeat,\r\n\t\t\ttop,\r\n\t\t\trotation,\r\n\t\t\ttwRadiusPercent,\r\n\t\t\ttwAngle,\r\n\t\t\ttwRotation,\r\n\t\t\tbpRadiusPercent,\r\n\t\t\tbpStrength,\r\n\t\t\tscale,\r\n\t\t\tscaleX,\r\n\t\t\tscaleY,\r\n\t\t\ttranslationX,\r\n\t\t\ttranslationY,\r\n\t\t\tplay,\r\n\t\t\tloop,\r\n\t\t\tmaintainAspectRatio,\r\n\t\t\tmaintainScale,\r\n\t\t} = Object.assign({}, FilterSprite.defaults, params);\r\n\r\n\t\tconst targetSpriteMatrix = new PIXI.Matrix();\r\n\r\n\t\t// using specific vertex shader and fragment shader\r\n\t\tsuper(customVertex2DSampler, sprite);\r\n\r\n\t\t// vertex uniforms\r\n\t\tthis.uniforms.targetUVMatrix = targetSpriteMatrix;\r\n\r\n\t\t// fragment uniforms\r\n\t\tthis.uniforms.inputClampTarget = new Float32Array([0, 0, 0, 0]);\r\n\t\tthis.uniforms.color = new Float32Array([0.0, 0.0, 0.0]);\r\n\t\tthis.uniforms.scale = new Float32Array([1.0, 1.0]);\r\n\t\tthis.uniforms.translation = new Float32Array([0.0, 0.0]);\r\n\r\n\t\t// to store sprite matrix from the filter manager (and send to vertex)\r\n\t\tthis.targetSpriteMatrix = targetSpriteMatrix;\r\n\r\n\t\tObject.assign(this, {\r\n\t\t\timagePath: fixPath(imagePath),\r\n\t\t\tcolor,\r\n\t\t\tcolorize,\r\n\t\t\tinverse,\r\n\t\t\talpha,\r\n\t\t\talphaDiscard,\r\n\t\t\trepeat,\r\n\t\t\ttop,\r\n\t\t\trotation,\r\n\t\t\ttwRadiusPercent,\r\n\t\t\ttwAngle,\r\n\t\t\ttwRotation,\r\n\t\t\tbpRadiusPercent,\r\n\t\t\tbpStrength,\r\n\t\t\tscale,\r\n\t\t\tscaleX,\r\n\t\t\tscaleY,\r\n\t\t\ttranslationX,\r\n\t\t\ttranslationY,\r\n\t\t\tplay,\r\n\t\t\tloop,\r\n\t\t\tmaintainAspectRatio,\r\n\t\t\tmaintainScale,\r\n\t\t});\r\n\r\n\t\tthis.zOrder = 0;\r\n\t\tthis.autoFit = false;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\tsetTMParams(params) {\r\n\t\tsuper.setTMParams(params);\r\n\t\tif (!this.dummy && 'imagePath' in params) {\r\n\t\t\tthis.assignTexture();\r\n\t\t}\r\n\t}\r\n\r\n\t_play = true;\r\n\t_loop = true;\r\n\t_maintainAspectRatio = false;\r\n\t_maintainScale = false;\r\n\r\n\tget play() {\r\n\t\treturn this._play;\r\n\t}\r\n\r\n\tset play(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis._play = value;\r\n\t\t\tthis._playVideo(this._play);\r\n\t\t}\r\n\t}\r\n\r\n\tget loop() {\r\n\t\treturn this._loop;\r\n\t}\r\n\r\n\tset loop(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis._loop = value;\r\n\t\t\tthis._playVideo(this._play);\r\n\t\t}\r\n\t}\r\n\r\n\tget maintainAspectRatio() {\r\n\t\treturn this._maintainAspectRatio;\r\n\t}\r\n\r\n\tset maintainAspectRatio(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis._maintainAspectRatio = value;\r\n\t\t}\r\n\t}\r\n\r\n\tget maintainScale() {\r\n\t\treturn this._maintainScale;\r\n\t}\r\n\r\n\tset maintainScale(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis._maintainScale = value;\r\n\t\t}\r\n\t}\r\n\r\n\tget color() {\r\n\t\treturn PIXI.utils.rgb2hex(this.uniforms.color);\r\n\t}\r\n\r\n\tset color(value) {\r\n\t\tnew PIXI.Color(value).toRgbArray(this.uniforms.color);\r\n\t}\r\n\r\n\tget colorize() {\r\n\t\treturn this.uniforms.colorize;\r\n\t}\r\n\r\n\tset colorize(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis.uniforms.colorize = value;\r\n\t\t}\r\n\t}\r\n\r\n\tget inverse() {\r\n\t\treturn this.uniforms.inverse;\r\n\t}\r\n\r\n\tset inverse(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis.uniforms.inverse = value;\r\n\t\t}\r\n\t}\r\n\r\n\tget alpha() {\r\n\t\treturn this.uniforms.alpha;\r\n\t}\r\n\r\n\tset alpha(value) {\r\n\t\tthis.uniforms.alpha = value;\r\n\t}\r\n\r\n\tget alphaDiscard() {\r\n\t\treturn this.uniforms.alphaDiscard;\r\n\t}\r\n\r\n\tset alphaDiscard(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis.uniforms.alphaDiscard = value;\r\n\t\t}\r\n\t}\r\n\r\n\tget repeat() {\r\n\t\treturn this.uniforms.repeat;\r\n\t}\r\n\r\n\tset repeat(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis.uniforms.repeat = value;\r\n\t\t}\r\n\t}\r\n\r\n\tget top() {\r\n\t\treturn this.uniforms.top;\r\n\t}\r\n\r\n\tset top(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis.uniforms.top = value;\r\n\t\t}\r\n\t}\r\n\r\n\tget rotation() {\r\n\t\treturn this.uniforms.rotation;\r\n\t}\r\n\r\n\tset rotation(value) {\r\n\t\tthis.uniforms.rotation = value;\r\n\t}\r\n\r\n\tget twRadiusPercent() {\r\n\t\treturn this.uniforms.twRadius * 200;\r\n\t}\r\n\r\n\tset twRadiusPercent(value) {\r\n\t\tthis.uniforms.twRadius = value / 200;\r\n\t}\r\n\r\n\tget twAngle() {\r\n\t\treturn this.uniforms.twAngle;\r\n\t}\r\n\r\n\tset twAngle(value) {\r\n\t\tthis.uniforms.twAngle = value;\r\n\t}\r\n\r\n\tget twRotation() {\r\n\t\treturn this.uniforms.twAngle * (180 / Math.PI);\r\n\t}\r\n\r\n\tset twRotation(value) {\r\n\t\tthis.uniforms.twAngle = value * (Math.PI / 180);\r\n\t}\r\n\r\n\tget bpRadiusPercent() {\r\n\t\treturn this.uniforms.bpRadius * 200;\r\n\t}\r\n\r\n\tset bpRadiusPercent(value) {\r\n\t\tthis.uniforms.bpRadius = value / 200;\r\n\t}\r\n\r\n\tget bpStrength() {\r\n\t\treturn this.uniforms.bpStrength;\r\n\t}\r\n\r\n\tset bpStrength(value) {\r\n\t\tthis.uniforms.bpStrength = value;\r\n\t}\r\n\r\n\tget scale() {\r\n\t\t// a little hack (we get only x)\r\n\t\treturn this.uniforms.scale[0];\r\n\t}\r\n\r\n\tset scale(value) {\r\n\t\tthis.uniforms.scale[1] = this.uniforms.scale[0] = value;\r\n\t}\r\n\r\n\tget scaleX() {\r\n\t\treturn this.uniforms.scale[0];\r\n\t}\r\n\r\n\tset scaleX(value) {\r\n\t\tthis.uniforms.scale[0] = value;\r\n\t}\r\n\r\n\tget scaleY() {\r\n\t\treturn this.uniforms.scale[1];\r\n\t}\r\n\r\n\tset scaleY(value) {\r\n\t\tthis.uniforms.scale[1] = value;\r\n\t}\r\n\r\n\tget translationX() {\r\n\t\treturn this.uniforms.translation[0];\r\n\t}\r\n\r\n\tset translationX(value) {\r\n\t\tthis.uniforms.translation[0] = value;\r\n\t}\r\n\r\n\tget translationY() {\r\n\t\treturn this.uniforms.translation[1];\r\n\t}\r\n\r\n\tset translationY(value) {\r\n\t\tthis.uniforms.translation[1] = value;\r\n\t}\r\n\r\n\tget uSamplerTarget() {\r\n\t\treturn this.uniforms.uSamplerTarget;\r\n\t}\r\n\r\n\tset uSamplerTarget(value) {\r\n\t\tthis.uniforms.uSamplerTarget = value;\r\n\t}\r\n\r\n\tasync _playVideo(value) {\r\n\t\t// Play if baseTexture resource is a video\r\n\t\tif (this.tex) {\r\n\t\t\tconst source = getProperty(this.tex, 'baseTexture.resource.source');\r\n\t\t\tif (source && source.tagName === 'VIDEO') {\r\n\t\t\t\tif (isNaN(source.duration)) {\r\n\t\t\t\t\tawait new Promise((resolve) => {\r\n\t\t\t\t\t\tsource.onloadedmetadata = () => resolve();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (value) game.video.play(source, { loop: this._loop, volume: 0 });\r\n\t\t\t\telse game.video.stop(source);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tassignTexture() {\r\n\t\tif (this.hasOwnProperty('imagePath')) {\r\n\t\t\t// Destroy the previous sprite\r\n\t\t\tif (this.targetSprite && !this.targetSprite.destroyed)\r\n\t\t\t\tthis.targetSprite.destroy({ children: true, texture: false, baseTexture: false });\r\n\t\t\tthis.tex = PIXI.Texture.from(this.imagePath);\r\n\r\n\t\t\tlet sprite = new PIXI.Sprite(this.tex);\r\n\r\n\t\t\tsprite.renderable = false;\r\n\t\t\tif (this.placeableImg._texture) {\r\n\t\t\t\tsprite.width = this.placeableImg._texture.baseTexture.realWidth;\r\n\t\t\t\tsprite.height = this.placeableImg._texture.baseTexture.realHeight;\r\n\t\t\t\tsprite.anchor.set(0.5);\r\n\t\t\t} else {\r\n\t\t\t\tsprite.width = this.placeableImg.width;\r\n\t\t\t\tsprite.height = this.placeableImg.height;\r\n\t\t\t}\r\n\r\n\t\t\tthis.targetSprite = sprite;\r\n\t\t\tthis.uSamplerTarget = sprite._texture;\r\n\t\t\tthis.placeableImg.addChild(sprite);\r\n\r\n\t\t\tthis._playVideo(this._play);\r\n\t\t}\r\n\t}\r\n\r\n\t// override\r\n\tapply(filterManager, input, output, clear) {\r\n\t\tconst targetSprite = this.targetSprite;\r\n\t\tconst tex = targetSprite._texture;\r\n\r\n\t\tif (tex.valid) {\r\n\t\t\tif (!tex.uvMatrix) tex.uvMatrix = new PIXI.TextureMatrix(tex, 0.0);\r\n\t\t\ttex.uvMatrix.update();\r\n\r\n\t\t\tthis.uniforms.uSamplerTarget = tex;\r\n\t\t\tif (this.maintainScale) {\r\n\t\t\t\tlet pScale = targetSprite.parent.scale;\r\n\t\t\t\ttargetSprite.scale.set(1 / pScale.x, 1 / pScale.y);\r\n\t\t\t}\r\n\r\n\t\t\tlet w = targetSprite.worldTransform;\r\n\t\t\tif (this.maintainAspectRatio) {\r\n\t\t\t\tlet scale = Math.min(w.a, w.d);\r\n\t\t\t\tw.set(scale, w.b, w.c, scale, w.tx, w.ty);\r\n\t\t\t}\r\n\r\n\t\t\tthis.uniforms.targetUVMatrix = filterManager.calculateSpriteMatrix(this.targetSpriteMatrix, targetSprite);\r\n\t\t\tthis.uniforms.inputClampTarget = tex.uvMatrix.uClampFrame;\r\n\t\t}\r\n\r\n\t\tsuper.apply(filterManager, input, output, clear);\r\n\t}\r\n\r\n\t// override\r\n\tdestroy() {\r\n\t\tsuper.destroy();\r\n\t\tif (!this.targetSprite.destroyed) this.targetSprite.destroy({ children: true, texture: false, baseTexture: false });\r\n\t}\r\n}\r\n\r\nFilterSprite.defaults = {\r\n\tcolor: 0x000000,\r\n\tcolorize: false,\r\n\tinverse: false,\r\n\talpha: 1,\r\n\talphaDiscard: false,\r\n\trepeat: false,\r\n\ttop: false,\r\n\trotation: 0.0,\r\n\ttwRadiusPercent: 0,\r\n\ttwAngle: 0,\r\n\tbpRadiusPercent: 0,\r\n\tbpStrength: 0,\r\n\tscaleX: 1,\r\n\tscaleY: 1,\r\n\ttranslationX: 0,\r\n\ttranslationY: 0,\r\n\tplay: true,\r\n\tloop: true,\r\n\tmaintainAspectRatio: false,\r\n\tmaintainScale: false,\r\n};\r\n","export const sprite = `#version 300 es\r\nprecision mediump float;\r\n\r\nuniform float rotation;\r\nuniform float twRadius;\r\nuniform float twAngle;\r\nuniform float bpRadius;\r\nuniform float bpStrength;\r\nuniform float alpha;\r\nuniform bool alphaDiscard;\r\n\r\nuniform bool inverse;\r\nuniform bool top;\r\nuniform bool colorize;\r\nuniform bool repeat;\r\n\r\nuniform vec2 scale;\r\nuniform vec2 translation;\r\n\r\nuniform vec3 color;\r\n\r\nuniform vec4 inputClamp;\r\nuniform vec4 inputClampTarget;\r\n\r\nuniform sampler2D uSampler;\r\nuniform sampler2D uSamplerTarget;\r\n\r\nin vec2 vTextureCoord;\r\nin vec2 vTextureCoordExtra;\r\nin vec2 vFilterCoord;\r\nin mat3 vTargetUVMatrix;\r\n\r\nout vec4 outputColor;\r\n\r\nconst float PI = 3.14159265358;\r\n\r\nfloat getClip(in vec2 uv) {\r\n    return step(3.5,\r\n       step(inputClampTarget.x, uv.x) +\r\n       step(inputClampTarget.y, uv.y) +\r\n       step(uv.x, inputClampTarget.z) +\r\n       step(uv.y, inputClampTarget.w));\r\n}\r\n\r\nvec2 morphing(in vec2 uv) {\r\n    float dist = length(uv);\r\n\r\n    // twist effect\r\n    if (dist < twRadius) {\r\n        float ratioDist = (twRadius - dist) / twRadius;\r\n        float angleMod = ratioDist * ratioDist * twAngle;\r\n        float s = sin(angleMod);\r\n        float c = cos(angleMod);\r\n        uv = vec2(uv.x * c - uv.y * s, uv.x * s + uv.y * c);\r\n    }\r\n\r\n    // bulge pinch effect\r\n    if (dist < bpRadius) {\r\n        float percent = dist / bpRadius;\r\n        if (bpStrength > 0.) {\r\n            uv *= mix(1.0, smoothstep(0., bpRadius / dist, percent), bpStrength * 0.75);\r\n        } else {\r\n            uv *= mix(1.0, pow(percent, 1.0 + bpStrength * 0.75) * bpRadius / dist, 1.0 - percent);\r\n        }\r\n    }\r\n\r\n    return uv;\r\n}\r\n\r\nvec4 colorization(in vec4 col) {\r\n    vec3 wcol = col.rgb;\r\n    if (inverse) {\r\n        wcol = (vec3(1.0) - wcol) * col.a;\r\n    }\r\n    float avg = (wcol.r + wcol.g + wcol.b) / 3.0;\r\n    return vec4(vec3(color * avg), col.a);\r\n}\r\n\r\nvec2 transform(in vec2 uv) {\r\n    float angle = -(PI * rotation * 0.005555555555);\r\n    uv -= 0.5;\r\n    uv *= mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\r\n    uv *= mat2(1.0 / scale.x, 0.0, 0.0, 1.0 / scale.y);\r\n    uv = morphing(uv);\r\n    uv += 0.5;\r\n\r\n    return uv;\r\n}\r\n\r\nvec4 getFromColor(in vec2 uv) {\r\n    return texture(uSampler, clamp(uv, inputClamp.xy, inputClamp.zw));\r\n}\r\n\r\nvec4 getToColor(in vec2 uv) {\r\n    return texture(uSamplerTarget, clamp(uv, inputClampTarget.xy, inputClampTarget.zw)) * getClip(uv);\r\n}\r\n\r\nvec4 getToColorFract(in vec2 uv) {\r\n    return textureGrad(uSamplerTarget, fract(uv), dFdx(uv), dFdy(uv));\r\n}\r\n\r\nvoid main() {\r\n\r\n    // UV transformations\r\n    vec2 uvTex = transform(vTextureCoordExtra);\r\n\r\n    // get samplers color\r\n    vec4 icolor = getFromColor(vTextureCoord);\r\n\r\n    vec4 tcolor;\r\n    if(repeat) {\r\n        tcolor = getToColorFract(uvTex + translation);\r\n    } else {\r\n        tcolor = getToColor(uvTex + translation);\r\n    }\r\n\r\n    tcolor.a *= alpha;\r\n    if(alphaDiscard) tcolor = mix(tcolor, icolor, 1.0 - icolor.a);\r\n\r\n    // colorize if necessary\r\n    if (colorize) {\r\n        tcolor = colorization(tcolor);\r\n    }\r\n\r\n    vec3 fcolor = tcolor.rgb;\r\n    if(top && icolor.a > 0.) fcolor = mix(tcolor.rgb, icolor.rgb, 1.0 - tcolor.a);\r\n    else if(!top) fcolor = mix(icolor.rgb, tcolor.rgb, 1.0 - icolor.a);\r\n   \r\n    outputColor = vec4(fcolor, max(tcolor.a, icolor.a));\r\n}\r\n`;\r\n","import { spritemask } from '../glsl/fragmentshaders/spritemask.js';\r\nimport { customVertex2DSampler } from '../glsl/vertexshaders/customvertex2DSampler.js';\r\nimport { CustomFilter } from './CustomFilter.js';\r\nimport { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\nimport { fixPath } from '../../module/tokenmagic.js';\r\n\r\nexport class FilterSpriteMask extends CustomFilter {\r\n\ttex = null;\r\n\r\n\tconstructor(params) {\r\n\t\tlet {\r\n\t\t\timagePath,\r\n\t\t\talpha,\r\n\t\t\trepeat,\r\n\t\t\trotation,\r\n\t\t\ttwRadiusPercent,\r\n\t\t\ttwAngle,\r\n\t\t\ttwRotation,\r\n\t\t\tbpRadiusPercent,\r\n\t\t\tbpStrength,\r\n\t\t\tscale,\r\n\t\t\tscaleX,\r\n\t\t\tscaleY,\r\n\t\t\ttranslationX,\r\n\t\t\ttranslationY,\r\n\t\t\tplay,\r\n\t\t\tloop,\r\n\t\t\tmaintainAspectRatio,\r\n\t\t\tmaintainScale,\r\n\t\t} = Object.assign({}, FilterSpriteMask.defaults, params);\r\n\r\n\t\tconst targetSpriteMatrix = new PIXI.Matrix();\r\n\r\n\t\t// using specific vertex shader and fragment shader\r\n\t\tsuper(customVertex2DSampler, spritemask);\r\n\r\n\t\t// vertex uniforms\r\n\t\tthis.uniforms.targetUVMatrix = targetSpriteMatrix;\r\n\r\n\t\t// fragment uniforms\r\n\t\tthis.uniforms.inputClampTarget = new Float32Array([0, 0, 0, 0]);\r\n\t\tthis.uniforms.color = new Float32Array([0.0, 0.0, 0.0]);\r\n\t\tthis.uniforms.scale = new Float32Array([1.0, 1.0]);\r\n\t\tthis.uniforms.translation = new Float32Array([0.0, 0.0]);\r\n\r\n\t\t// to store sprite matrix from the filter manager (and send to vertex)\r\n\t\tthis.targetSpriteMatrix = targetSpriteMatrix;\r\n\r\n\t\tObject.assign(this, {\r\n\t\t\timagePath: fixPath(imagePath),\r\n\t\t\talpha,\r\n\t\t\trepeat,\r\n\t\t\trotation,\r\n\t\t\ttwRadiusPercent,\r\n\t\t\ttwAngle,\r\n\t\t\ttwRotation,\r\n\t\t\tbpRadiusPercent,\r\n\t\t\tbpStrength,\r\n\t\t\tscale,\r\n\t\t\tscaleX,\r\n\t\t\tscaleY,\r\n\t\t\ttranslationX,\r\n\t\t\ttranslationY,\r\n\t\t\tplay,\r\n\t\t\tloop,\r\n\t\t\tmaintainAspectRatio,\r\n\t\t\tmaintainScale,\r\n\t\t});\r\n\r\n\t\tthis.zOrder = 0;\r\n\t\tthis.autoFit = false;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\tsetTMParams(params) {\r\n\t\tsuper.setTMParams(params);\r\n\t\tif (!this.dummy && 'imagePath' in params) {\r\n\t\t\tthis.assignTexture();\r\n\t\t}\r\n\t}\r\n\r\n\t_play = true;\r\n\t_loop = true;\r\n\t_maintainAspectRatio = false;\r\n\t_maintainScale = false;\r\n\r\n\tget play() {\r\n\t\treturn this._play;\r\n\t}\r\n\r\n\tset play(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis._play = value;\r\n\t\t\tthis._playVideo(this._play);\r\n\t\t}\r\n\t}\r\n\r\n\tget loop() {\r\n\t\treturn this._loop;\r\n\t}\r\n\r\n\tset loop(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis._loop = value;\r\n\t\t\tthis._playVideo(this._play);\r\n\t\t}\r\n\t}\r\n\r\n\tget maintainAspectRatio() {\r\n\t\treturn this._maintainAspectRatio;\r\n\t}\r\n\r\n\tset maintainAspectRatio(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis._maintainAspectRatio = value;\r\n\t\t}\r\n\t}\r\n\r\n\tget maintainScale() {\r\n\t\treturn this._maintainScale;\r\n\t}\r\n\r\n\tset maintainScale(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis._maintainScale = value;\r\n\t\t}\r\n\t}\r\n\r\n\tget alpha() {\r\n\t\treturn this.uniforms.alpha;\r\n\t}\r\n\r\n\tset alpha(value) {\r\n\t\tthis.uniforms.alpha = value;\r\n\t}\r\n\r\n\tget repeat() {\r\n\t\treturn this.uniforms.repeat;\r\n\t}\r\n\r\n\tset repeat(value) {\r\n\t\tif (!(value == null) && typeof value === 'boolean') {\r\n\t\t\tthis.uniforms.repeat = value;\r\n\t\t}\r\n\t}\r\n\r\n\tget rotation() {\r\n\t\treturn this.uniforms.rotation;\r\n\t}\r\n\r\n\tset rotation(value) {\r\n\t\tthis.uniforms.rotation = value;\r\n\t}\r\n\r\n\tget twRadiusPercent() {\r\n\t\treturn this.uniforms.twRadius * 200;\r\n\t}\r\n\r\n\tset twRadiusPercent(value) {\r\n\t\tthis.uniforms.twRadius = value / 200;\r\n\t}\r\n\r\n\tget twAngle() {\r\n\t\treturn this.uniforms.twAngle;\r\n\t}\r\n\r\n\tset twAngle(value) {\r\n\t\tthis.uniforms.twAngle = value;\r\n\t}\r\n\r\n\tget twRotation() {\r\n\t\treturn this.uniforms.twAngle * (180 / Math.PI);\r\n\t}\r\n\r\n\tset twRotation(value) {\r\n\t\tthis.uniforms.twAngle = value * (Math.PI / 180);\r\n\t}\r\n\r\n\tget bpRadiusPercent() {\r\n\t\treturn this.uniforms.bpRadius * 200;\r\n\t}\r\n\r\n\tset bpRadiusPercent(value) {\r\n\t\tthis.uniforms.bpRadius = value / 200;\r\n\t}\r\n\r\n\tget bpStrength() {\r\n\t\treturn this.uniforms.bpStrength;\r\n\t}\r\n\r\n\tset bpStrength(value) {\r\n\t\tthis.uniforms.bpStrength = value;\r\n\t}\r\n\r\n\tget scale() {\r\n\t\t// a little hack (we get only x)\r\n\t\treturn this.uniforms.scale[0];\r\n\t}\r\n\r\n\tset scale(value) {\r\n\t\tthis.uniforms.scale[1] = this.uniforms.scale[0] = value;\r\n\t}\r\n\r\n\tget scaleX() {\r\n\t\treturn this.uniforms.scale[0];\r\n\t}\r\n\r\n\tset scaleX(value) {\r\n\t\tthis.uniforms.scale[0] = value;\r\n\t}\r\n\r\n\tget scaleY() {\r\n\t\treturn this.uniforms.scale[1];\r\n\t}\r\n\r\n\tset scaleY(value) {\r\n\t\tthis.uniforms.scale[1] = value;\r\n\t}\r\n\r\n\tget translationX() {\r\n\t\treturn this.uniforms.translation[0];\r\n\t}\r\n\r\n\tset translationX(value) {\r\n\t\tthis.uniforms.translation[0] = value;\r\n\t}\r\n\r\n\tget translationY() {\r\n\t\treturn this.uniforms.translation[1];\r\n\t}\r\n\r\n\tset translationY(value) {\r\n\t\tthis.uniforms.translation[1] = value;\r\n\t}\r\n\r\n\tget uSamplerTarget() {\r\n\t\treturn this.uniforms.uSamplerTarget;\r\n\t}\r\n\r\n\tset uSamplerTarget(value) {\r\n\t\tthis.uniforms.uSamplerTarget = value;\r\n\t}\r\n\r\n\tasync _playVideo(value) {\r\n\t\t// Play if baseTexture resource is a video\r\n\t\tif (this.tex) {\r\n\t\t\tconst source = getProperty(this.tex, 'baseTexture.resource.source');\r\n\t\t\tif (source && source.tagName === 'VIDEO') {\r\n\t\t\t\tif (isNaN(source.duration)) {\r\n\t\t\t\t\tawait new Promise((resolve) => {\r\n\t\t\t\t\t\tsource.onloadedmetadata = () => resolve();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (value) game.video.play(source, { loop: this._loop, volume: 0 });\r\n\t\t\t\telse game.video.stop(source);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tassignTexture() {\r\n\t\tif (this.hasOwnProperty('imagePath')) {\r\n\t\t\t// Destroy the previous sprite\r\n\t\t\tif (this.targetSprite && !this.targetSprite.destroyed)\r\n\t\t\t\tthis.targetSprite.destroy({ children: true, texture: false, baseTexture: false });\r\n\t\t\tthis.tex = PIXI.Texture.from(this.imagePath);\r\n\r\n\t\t\tlet sprite = new PIXI.Sprite(this.tex);\r\n\r\n\t\t\tsprite.renderable = false;\r\n\t\t\tif (this.placeableImg._texture) {\r\n\t\t\t\tsprite.width = this.placeableImg._texture.baseTexture.realWidth;\r\n\t\t\t\tsprite.height = this.placeableImg._texture.baseTexture.realHeight;\r\n\t\t\t\tsprite.anchor.set(0.5);\r\n\t\t\t} else {\r\n\t\t\t\tsprite.width = this.placeableImg.width;\r\n\t\t\t\tsprite.height = this.placeableImg.height;\r\n\t\t\t}\r\n\r\n\t\t\tthis.targetSprite = sprite;\r\n\t\t\tthis.uSamplerTarget = sprite._texture;\r\n\t\t\tthis.placeableImg.addChild(sprite);\r\n\r\n\t\t\tthis._playVideo(this._play);\r\n\t\t}\r\n\t}\r\n\r\n\t// override\r\n\tapply(filterManager, input, output, clear) {\r\n\t\tconst targetSprite = this.targetSprite;\r\n\t\tconst tex = targetSprite._texture;\r\n\r\n\t\tif (tex.valid) {\r\n\t\t\tif (!tex.uvMatrix) tex.uvMatrix = new PIXI.TextureMatrix(tex, 0.0);\r\n\t\t\ttex.uvMatrix.update();\r\n\r\n\t\t\tthis.uniforms.uSamplerTarget = tex;\r\n\t\t\tif (this.maintainScale) {\r\n\t\t\t\tlet pScale = targetSprite.parent.scale;\r\n\t\t\t\ttargetSprite.scale.set(1 / pScale.x, 1 / pScale.y);\r\n\t\t\t}\r\n\r\n\t\t\tlet w = targetSprite.worldTransform;\r\n\t\t\tif (this.maintainAspectRatio) {\r\n\t\t\t\tlet scale = Math.min(w.a, w.d);\r\n\t\t\t\tw.set(scale, w.b, w.c, scale, w.tx, w.ty);\r\n\t\t\t}\r\n\r\n\t\t\tthis.uniforms.targetUVMatrix = filterManager.calculateSpriteMatrix(this.targetSpriteMatrix, targetSprite);\r\n\t\t\tthis.uniforms.inputClampTarget = tex.uvMatrix.uClampFrame;\r\n\t\t}\r\n\r\n\t\tsuper.apply(filterManager, input, output, clear);\r\n\t}\r\n\r\n\t// override\r\n\tdestroy() {\r\n\t\tsuper.destroy();\r\n\t\tif (!this.targetSprite.destroyed) this.targetSprite.destroy({ children: true, texture: false, baseTexture: false });\r\n\t}\r\n}\r\n\r\nFilterSpriteMask.defaults = {\r\n\talpha: 1,\r\n\trepeat: false,\r\n\trotation: 0.0,\r\n\ttwRadiusPercent: 0,\r\n\ttwAngle: 0,\r\n\tbpRadiusPercent: 0,\r\n\tbpStrength: 0,\r\n\tscaleX: 1,\r\n\tscaleY: 1,\r\n\ttranslationX: 0,\r\n\ttranslationY: 0,\r\n\tplay: true,\r\n\tloop: true,\r\n\tmaintainAspectRatio: false,\r\n\tmaintainScale: false,\r\n};\r\n","export const spritemask = `#version 300 es\r\nprecision mediump float;\r\n\r\nuniform float rotation;\r\nuniform float twRadius;\r\nuniform float twAngle;\r\nuniform float bpRadius;\r\nuniform float bpStrength;\r\nuniform float alpha;\r\n\r\nuniform bool repeat;\r\n\r\nuniform vec2 scale;\r\nuniform vec2 translation;\r\n\r\nuniform vec4 inputClamp;\r\nuniform vec4 inputClampTarget;\r\n\r\nuniform sampler2D uSampler;\r\nuniform sampler2D uSamplerTarget;\r\n\r\nin vec2 vTextureCoord;\r\nin vec2 vTextureCoordExtra;\r\nin vec2 vFilterCoord;\r\nin mat3 vTargetUVMatrix;\r\n\r\nout vec4 outputColor;\r\n\r\nconst float PI = 3.14159265358;\r\n\r\nfloat getClip(in vec2 uv) {\r\n    return step(3.5,\r\n       step(inputClampTarget.x, uv.x) +\r\n       step(inputClampTarget.y, uv.y) +\r\n       step(uv.x, inputClampTarget.z) +\r\n       step(uv.y, inputClampTarget.w));\r\n}\r\n\r\nvec2 morphing(in vec2 uv) {\r\n    float dist = length(uv);\r\n\r\n    // twist effect\r\n    if (dist < twRadius) {\r\n        float ratioDist = (twRadius - dist) / twRadius;\r\n        float angleMod = ratioDist * ratioDist * twAngle;\r\n        float s = sin(angleMod);\r\n        float c = cos(angleMod);\r\n        uv = vec2(uv.x * c - uv.y * s, uv.x * s + uv.y * c);\r\n    }\r\n\r\n    // bulge pinch effect\r\n    if (dist < bpRadius) {\r\n        float percent = dist / bpRadius;\r\n        if (bpStrength > 0.) {\r\n            uv *= mix(1.0, smoothstep(0., bpRadius / dist, percent), bpStrength * 0.75);\r\n        } else {\r\n            uv *= mix(1.0, pow(percent, 1.0 + bpStrength * 0.75) * bpRadius / dist, 1.0 - percent);\r\n        }\r\n    }\r\n\r\n    return uv;\r\n}\r\n\r\nvec2 transform(in vec2 uv) {\r\n    float angle = -(PI * rotation * 0.005555555555);\r\n    uv -= 0.5;\r\n    uv *= mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\r\n    uv *= mat2(1.0 / scale.x, 0.0, 0.0, 1.0 / scale.y);\r\n    uv = morphing(uv);\r\n    uv += 0.5;\r\n\r\n    return uv;\r\n}\r\n\r\nvec4 getFromColor(in vec2 uv) {\r\n    return texture(uSampler, clamp(uv, inputClamp.xy, inputClamp.zw));\r\n}\r\n\r\nvec4 getToColor(in vec2 uv) {\r\n    return texture(uSamplerTarget, clamp(uv, inputClampTarget.xy, inputClampTarget.zw)) * getClip(uv);\r\n}\r\n\r\nvec4 getToColorFract(in vec2 uv) {\r\n    return textureGrad(uSamplerTarget, fract(uv), dFdx(uv), dFdy(uv));\r\n}\r\n\r\nvoid main() {\r\n\r\n    // UV transformations\r\n    vec2 uvTex = transform(vTextureCoordExtra);\r\n\r\n    // get samplers color\r\n    vec4 icolor = getFromColor(vTextureCoord);\r\n\r\n    vec4 tcolor;\r\n    if(repeat) tcolor = getToColorFract(uvTex + translation);\r\n    else tcolor = getToColor(uvTex + translation);\r\n\r\n    outputColor = icolor * (tcolor.a * alpha);\r\n}\r\n`;\r\n","import { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterReplaceColor extends PIXI.filters.ColorReplaceFilter {\r\n\tconstructor(params) {\r\n\t\tsuper();\r\n\t\tthis.originalColor = [1, 0, 0];\r\n\t\tthis.newColor = [0, 1, 0];\r\n\t\tthis.epsilon = 0.7;\r\n\t\tthis.zOrder = 100;\r\n\t\tthis.animating = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n}\r\n","import { customVertex2D } from '../glsl/vertexshaders/customvertex2D.js';\r\nimport { CustomFilter } from './CustomFilter.js';\r\nimport { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\nimport { ddTint } from '../glsl/fragmentshaders/ddtint.js';\r\n\r\nexport class FilterDDTint extends CustomFilter {\r\n\tconstructor(params) {\r\n\t\tsuper(customVertex2D, ddTint);\r\n\t\tthis.tint = [1, 0, 0];\r\n\t\tthis.zOrder = 100;\r\n\t\tthis.animating = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\tget tint() {\r\n\t\treturn this.uniforms.tint;\r\n\t}\r\n\r\n\tset tint(value) {\r\n\t\tthis.uniforms.tint = value;\r\n\t}\r\n}\r\n","export const ddTint = `\r\nvarying vec2 vTextureCoord;\r\nuniform sampler2D uSampler;\r\nuniform vec3 tint;\r\nvoid main() {\r\n    vec4 color = texture2D(uSampler, vTextureCoord);\r\n    float lesser = min(color.g,color.b);\r\n    float bigger = max(color.g,color.b);\r\n    if ((bigger - lesser < 0.1) && (color.r > 1.5 * bigger)) {\r\n        float primary = color.r;\r\n        float range = primary - lesser;\r\n        color.r = lesser + range * tint.r;\r\n        color.g = lesser + range * tint.g;\r\n        color.b = lesser + range * tint.b;\r\n    }\r\n    gl_FragColor = color;\r\n}`;\r\n","export const PresetsLibrary = {\r\n\tMAIN: 'tmfx-main',\r\n\tTEMPLATE: 'tmfx-template',\r\n};\r\n\r\nexport var presets = [];\r\n\r\nlet params = [\r\n\t{\r\n\t\tfilterType: 'bevel',\r\n\t\tfilterId: 'bevel',\r\n\t\trotation: 0,\r\n\t\tthickness: 5,\r\n\t\tlightColor: 0xff0000,\r\n\t\tlightAlpha: 0.8,\r\n\t\tshadowColor: 0x00ff00,\r\n\t\tshadowAlpha: 0.5,\r\n\t\tanimated: {\r\n\t\t\trotation: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tclockWise: true,\r\n\t\t\t\tloopDuration: 1600,\r\n\t\t\t\tanimType: 'syncRotation',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\nvar presetObject = {};\r\npresetObject.name = 'bevel';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'adjustment',\r\n\t\tfilterId: 'adjustment',\r\n\t\tsaturation: 1.5,\r\n\t\tbrightness: 1.5,\r\n\t\tcontrast: 2,\r\n\t\tgamma: 2,\r\n\t\tred: 4,\r\n\t\tgreen: 0.25,\r\n\t\tblue: 0.25,\r\n\t\talpha: 1,\r\n\t\tanimated: {\r\n\t\t\talpha: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tloopDuration: 5000,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t\tval1: 0.15,\r\n\t\t\t\tval2: 1,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'adjustment';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'shadow',\r\n\t\tfilterId: 'dropshadow',\r\n\t\trotation: 35,\r\n\t\tblur: 2,\r\n\t\tquality: 5,\r\n\t\tdistance: 20,\r\n\t\talpha: 0.7,\r\n\t\tpadding: 10,\r\n\t\tshadowOnly: false,\r\n\t\tcolor: 0x000000,\r\n\t\tanimated: {\r\n\t\t\tblur: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tloopDuration: 1500,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t\tval1: 2,\r\n\t\t\t\tval2: 3,\r\n\t\t\t},\r\n\t\t\trotation: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tloopDuration: 150,\r\n\t\t\t\tanimType: 'syncSinOscillation',\r\n\t\t\t\tval1: 33,\r\n\t\t\t\tval2: 35,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'dropshadow';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'outline',\r\n\t\tfilterId: 'outline',\r\n\t\tpadding: 10,\r\n\t\tcolor: 0xee6035,\r\n\t\tthickness: 1,\r\n\t\tquality: 5,\r\n\t\tanimated: {\r\n\t\t\tthickness: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tloopDuration: 800,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t\tval1: 1,\r\n\t\t\t\tval2: 6,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'outline';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'glow',\r\n\t\tfilterId: 'glow',\r\n\t\touterStrength: 7,\r\n\t\tinnerStrength: 0,\r\n\t\tcolor: 0x006000,\r\n\t\tquality: 0.5,\r\n\t\tpadding: 10,\r\n\t\tanimated: {\r\n\t\t\tcolor: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tloopDuration: 3000,\r\n\t\t\t\tanimType: 'colorOscillation',\r\n\t\t\t\tval1: 0x003000,\r\n\t\t\t\tval2: 0x00ff00,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'glow';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'xbloom',\r\n\t\tfilterId: 'bloom',\r\n\t\tthreshold: 0.35,\r\n\t\tbloomScale: 0,\r\n\t\tbrightness: 1,\r\n\t\tblur: 0.1,\r\n\t\tpadding: 10,\r\n\t\tquality: 15,\r\n\t\tblendMode: 0,\r\n\t\tanimated: {\r\n\t\t\tbloomScale: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tloopDuration: 2000,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t\tval1: 0,\r\n\t\t\t\tval2: 2.1,\r\n\t\t\t},\r\n\t\t\tthreshold: {\r\n\t\t\t\tactive: false,\r\n\t\t\t\tloopDuration: 1000,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t\tval1: 0.0,\r\n\t\t\t\tval2: 1.9,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'bloom';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'distortion',\r\n\t\tfilterId: 'distortion',\r\n\t\tmaskPath: 'modules/tokenmagic/fx/assets/distortion-1.png',\r\n\t\tmaskSpriteScaleX: 5,\r\n\t\tmaskSpriteScaleY: 5,\r\n\t\tpadding: 20,\r\n\t\tanimated: {\r\n\t\t\tmaskSpriteX: { active: true, speed: 0.05, animType: 'move' },\r\n\t\t\tmaskSpriteY: { active: true, speed: 0.07, animType: 'move' },\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'distortion';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'oldfilm',\r\n\t\tfilterId: 'oldfilm',\r\n\t\tsepia: 0.6,\r\n\t\tnoise: 0.2,\r\n\t\tnoiseSize: 1.0,\r\n\t\tscratch: 0.8,\r\n\t\tscratchDensity: 0.5,\r\n\t\tscratchWidth: 1.2,\r\n\t\tvignetting: 0.9,\r\n\t\tvignettingAlpha: 0.6,\r\n\t\tvignettingBlur: 0.2,\r\n\t\tanimated: {\r\n\t\t\tseed: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tanimType: 'randomNumber',\r\n\t\t\t\tval1: 0,\r\n\t\t\t\tval2: 1,\r\n\t\t\t},\r\n\t\t\tvignetting: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t\tloopDuration: 2000,\r\n\t\t\t\tval1: 0.2,\r\n\t\t\t\tval2: 0.4,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tfilterType: 'outline',\r\n\t\tfilterId: 'oldfilm',\r\n\t\tcolor: 0x000000,\r\n\t\tthickness: 0,\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'oldfilm';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'twist',\r\n\t\tfilterId: 'twist',\r\n\t\tradiusPercent: 120,\r\n\t\tangle: 0,\r\n\t\tanimated: {\r\n\t\t\tangle: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tanimType: 'sinOscillation',\r\n\t\t\t\tloopDuration: 10000,\r\n\t\t\t\tval1: -0.6 * Math.PI,\r\n\t\t\t\tval2: +0.6 * Math.PI,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'twist';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'bulgepinch',\r\n\t\tfilterId: 'bulge',\r\n\t\tpadding: 150,\r\n\t\tstrength: 0,\r\n\t\tzIndex: 2,\r\n\t\tradiusPercent: 200,\r\n\t\tanimated: {\r\n\t\t\tstrength: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tanimType: 'cosOscillation',\r\n\t\t\t\tloopDuration: 2000,\r\n\t\t\t\tval1: 0,\r\n\t\t\t\tval2: 0.45,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'bulge';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'blur',\r\n\t\tfilterId: 'blur',\r\n\t\tpadding: 10,\r\n\t\tquality: 4.0,\r\n\t\tblur: 0,\r\n\t\tblurX: 0,\r\n\t\tblurY: 0,\r\n\t\tanimated: {\r\n\t\t\tblurX: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t\tloopDuration: 500,\r\n\t\t\t\tval1: 0,\r\n\t\t\t\tval2: 6,\r\n\t\t\t},\r\n\t\t\tblurY: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t\tloopDuration: 750,\r\n\t\t\t\tval1: 0,\r\n\t\t\t\tval2: 6,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'blur';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'zoomblur',\r\n\t\tfilterId: 'zoomblur',\r\n\t\tstrength: 0.15,\r\n\t\tinnerRadiusPercent: 65,\r\n\t\tradiusPercent: 100,\r\n\t\tpadding: 30,\r\n\t\tanimated: {\r\n\t\t\tinnerRadiusPercent: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tanimType: 'sinOscillation',\r\n\t\t\t\tloopDuration: 500,\r\n\t\t\t\tval1: 65,\r\n\t\t\t\tval2: 75,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'zoomblur';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'shockwave',\r\n\t\tfilterId: 'shockwave',\r\n\t\ttime: 0,\r\n\t\tamplitude: 8,\r\n\t\twavelength: 75,\r\n\t\tradius: 500,\r\n\t\tbrightness: 1.5,\r\n\t\tspeed: 25,\r\n\t\tpadding: 0,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tanimType: 'cosOscillation',\r\n\t\t\t\tactive: true,\r\n\t\t\t\tloopDuration: 1800,\r\n\t\t\t\tval1: 0,\r\n\t\t\t\tval2: 10,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'shockwave';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'zapshadow',\r\n\t\tfilterId: 'zapshadow',\r\n\t\talphaTolerance: 0.45,\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'zapshadow';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'ray',\r\n\t\tfilterId: 'rays',\r\n\t\ttime: 0,\r\n\t\tcolor: 0xcf8000,\r\n\t\talpha: 0.5,\r\n\t\tdivisor: 32,\r\n\t\tanchorX: 0,\r\n\t\tanchorY: 0,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0005,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'rays';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'fog',\r\n\t\tfilterId: 'fog',\r\n\t\tcolor: 0x000000,\r\n\t\tdensity: 0.65,\r\n\t\ttime: 0,\r\n\t\tdimX: 1,\r\n\t\tdimY: 1,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 2.2,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'fog';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'fumes',\r\n\t\tfilterId: 'fumes',\r\n\t\tcolor: 0x808080,\r\n\t\ttime: 0,\r\n\t\tblend: 8,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.001,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'fumes';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'electric',\r\n\t\tfilterId: 'electric',\r\n\t\tcolor: 0xffffff,\r\n\t\ttime: 0,\r\n\t\tblend: 1,\r\n\t\tintensity: 5,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.002,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'electric';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'fire',\r\n\t\tfilterId: 'fire',\r\n\t\tintensity: 1,\r\n\t\tcolor: 0xffffff,\r\n\t\tamplitude: 1,\r\n\t\ttime: 0,\r\n\t\tblend: 2,\r\n\t\tfireBlend: 1,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: -0.0024,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t\tintensity: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tloopDuration: 15000,\r\n\t\t\t\tval1: 0.8,\r\n\t\t\t\tval2: 2,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t},\r\n\t\t\tamplitude: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tloopDuration: 4400,\r\n\t\t\t\tval1: 1,\r\n\t\t\t\tval2: 1.4,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'fire';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'wave',\r\n\t\tfilterId: 'waves',\r\n\t\ttime: 0,\r\n\t\tanchorX: 0.5,\r\n\t\tanchorY: 0.5,\r\n\t\tstrength: 0.015,\r\n\t\tfrequency: 120,\r\n\t\tcolor: 0xffffff,\r\n\t\tmaxIntensity: 2.5,\r\n\t\tminIntensity: 0.9,\r\n\t\tpadding: 10,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0085,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t\tanchorX: {\r\n\t\t\t\tactive: false,\r\n\t\t\t\tval1: 0.15,\r\n\t\t\t\tval2: 0.85,\r\n\t\t\t\tanimType: 'syncChaoticOscillation',\r\n\t\t\t\tloopDuration: 20000,\r\n\t\t\t},\r\n\t\t\tanchorY: {\r\n\t\t\t\tactive: false,\r\n\t\t\t\tval1: 0.15,\r\n\t\t\t\tval2: 0.85,\r\n\t\t\t\tanimType: 'syncSinOscillation',\r\n\t\t\t\tloopDuration: 20000,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'waves';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'flood',\r\n\t\tfilterId: 'flood',\r\n\t\ttime: 0,\r\n\t\tcolor: 0x0020bb,\r\n\t\tbillowy: 0.43,\r\n\t\ttintIntensity: 0.72,\r\n\t\tglint: 0.31,\r\n\t\tscale: 70,\r\n\t\tpadding: 10,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0006,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'flood';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'smoke',\r\n\t\tfilterId: 'smoke',\r\n\t\tcolor: 0x5099dd,\r\n\t\ttime: 0,\r\n\t\tblend: 2,\r\n\t\tdimX: 0.1,\r\n\t\tdimY: 1,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.009,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'smoke';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'images',\r\n\t\tfilterId: 'images',\r\n\t\ttime: 0,\r\n\t\tnbImage: 4,\r\n\t\talphaImg: 1.0,\r\n\t\talphaChr: 0.0,\r\n\t\tblend: 4,\r\n\t\tampX: 0.1,\r\n\t\tampY: 0.1,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.001,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'images';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'images',\r\n\t\tfilterId: 'chaos-images',\r\n\t\ttime: 0,\r\n\t\tnbImage: 4,\r\n\t\talphaImg: 1.0,\r\n\t\talphaChr: 0.0,\r\n\t\tblend: 4,\r\n\t\tampX: 0.1,\r\n\t\tampY: 0.1,\r\n\t\tpadding: 80,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.001,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t\tampX: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tval1: 0.0,\r\n\t\t\t\tval2: 0.3,\r\n\t\t\t\tchaosFactor: 0.03,\r\n\t\t\t\tanimType: 'syncChaoticOscillation',\r\n\t\t\t\tloopDuration: 2000,\r\n\t\t\t},\r\n\t\t\tampY: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tval1: 0.0,\r\n\t\t\t\tval2: 0.3,\r\n\t\t\t\tchaosFactor: 0.04,\r\n\t\t\t\tanimType: 'syncChaoticOscillation',\r\n\t\t\t\tloopDuration: 1650,\r\n\t\t\t},\r\n\t\t\talphaChr: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tanimType: 'randomNumberPerLoop',\r\n\t\t\t\tval1: 0.0,\r\n\t\t\t\tval2: 1,\r\n\t\t\t\tloopDuration: 250,\r\n\t\t\t},\r\n\t\t\talphaImg: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tanimType: 'randomNumberPerLoop',\r\n\t\t\t\tval1: 0.8,\r\n\t\t\t\tval2: 1,\r\n\t\t\t\tloopDuration: 250,\r\n\t\t\t},\r\n\t\t\tnbImage: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tval1: 1,\r\n\t\t\t\tval2: 9,\r\n\t\t\t\tanimType: 'syncSinOscillation',\r\n\t\t\t\tloopDuration: 1400,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'chaos-images';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'images',\r\n\t\tfilterId: 'spectral-images',\r\n\t\ttime: 0,\r\n\t\tblend: 4,\r\n\t\tnbImage: 4,\r\n\t\tpadding: 100,\r\n\t\talphaImg: 0.5,\r\n\t\talphaChr: 0.0,\r\n\t\tampX: 0.1,\r\n\t\tampY: 0.1,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tspeed: 0.001,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t\tampX: {\r\n\t\t\t\tval1: 0,\r\n\t\t\t\tval2: 0.22,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t\tloopDuration: 2500,\r\n\t\t\t},\r\n\t\t\tampY: {\r\n\t\t\t\tval1: 0,\r\n\t\t\t\tval2: 0.24,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t\tloopDuration: 2500,\r\n\t\t\t\tpauseBetweenDuration: 2500,\r\n\t\t\t},\r\n\t\t\talphaChr: {\r\n\t\t\t\tval1: 1,\r\n\t\t\t\tval2: 0,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t\tloopDuration: 2500,\r\n\t\t\t},\r\n\t\t\talphaImg: {\r\n\t\t\t\tval1: 0.2,\r\n\t\t\t\tval2: 0.8,\r\n\t\t\t\tanimType: 'syncSinOscillation',\r\n\t\t\t\tloopDuration: 2500,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'spectral-images';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'field',\r\n\t\tfilterId: 'hexa-field',\r\n\t\tshieldType: 2,\r\n\t\tgridPadding: 1.5,\r\n\t\tcolor: 0xcc00cc,\r\n\t\ttime: 0,\r\n\t\tblend: 3,\r\n\t\tintensity: 1,\r\n\t\tlightAlpha: 0.5,\r\n\t\tlightSize: 0.5,\r\n\t\tscale: 1,\r\n\t\tradius: 1,\r\n\t\tchromatic: false,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0015,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'hexa-field';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'field',\r\n\t\tfilterId: 'fire-field',\r\n\t\tshieldType: 1,\r\n\t\tgridPadding: 2,\r\n\t\tcolor: 0xe58550,\r\n\t\ttime: 0,\r\n\t\tblend: 2,\r\n\t\tintensity: 1.15,\r\n\t\tlightAlpha: 2,\r\n\t\tlightSize: 0.7,\r\n\t\tscale: 1,\r\n\t\tradius: 1,\r\n\t\tchromatic: false,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0015,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'fire-field';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'field',\r\n\t\tfilterId: 'smoke-field',\r\n\t\tshieldType: 3,\r\n\t\tgridPadding: 1.5,\r\n\t\tcolor: 0x60cc70,\r\n\t\ttime: 0,\r\n\t\tblend: 2,\r\n\t\tintensity: 0.9,\r\n\t\tlightAlpha: 1,\r\n\t\tlightSize: 0.7,\r\n\t\tscale: 1,\r\n\t\tradius: 1,\r\n\t\tchromatic: false,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0015,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'smoke-field';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'field',\r\n\t\tfilterId: 'earth-field',\r\n\t\tshieldType: 4,\r\n\t\tgridPadding: 2,\r\n\t\tcolor: 0xbb9070,\r\n\t\ttime: 0,\r\n\t\tblend: 1,\r\n\t\tintensity: 1.25,\r\n\t\tlightAlpha: 1,\r\n\t\tlightSize: 0.7,\r\n\t\tscale: 1,\r\n\t\tradius: 1,\r\n\t\tchromatic: false,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0015,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'earth-field';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'field',\r\n\t\tfilterId: 'earth-field-top',\r\n\t\tshieldType: 5,\r\n\t\tgridPadding: 3,\r\n\t\tcolor: 0xaaaaaa,\r\n\t\ttime: 0,\r\n\t\tblend: 5,\r\n\t\tintensity: 1.9,\r\n\t\tlightAlpha: 1,\r\n\t\tlightSize: 0.7,\r\n\t\tscale: 1,\r\n\t\tradius: 1,\r\n\t\tzIndex: 5,\r\n\t\tchromatic: true,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0015,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'earth-field-top';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'field',\r\n\t\tfilterId: 'air-field',\r\n\t\tshieldType: 6,\r\n\t\tgridPadding: 1.2,\r\n\t\tcolor: 0x7090aa,\r\n\t\ttime: 0,\r\n\t\tblend: 14,\r\n\t\tintensity: 1,\r\n\t\tlightAlpha: 1,\r\n\t\tlightSize: 0.7,\r\n\t\tscale: 1,\r\n\t\tradius: 1,\r\n\t\tchromatic: false,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0015,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'air-field';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'field',\r\n\t\tfilterId: 'magic-field',\r\n\t\tshieldType: 7,\r\n\t\tgridPadding: 1,\r\n\t\tcolor: 0xffffff,\r\n\t\ttime: 0,\r\n\t\tblend: 10,\r\n\t\tintensity: 0.8,\r\n\t\tlightAlpha: 1,\r\n\t\tlightSize: 0.45,\r\n\t\tscale: 1,\r\n\t\tradius: 1,\r\n\t\tchromatic: false,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0015,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'magic-field';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'field',\r\n\t\tfilterId: 'chromatic-field',\r\n\t\tshieldType: 8,\r\n\t\tgridPadding: 2,\r\n\t\tcolor: 0xaaaaaa,\r\n\t\ttime: 0,\r\n\t\tblend: 0,\r\n\t\tintensity: 1,\r\n\t\tlightAlpha: 0,\r\n\t\tlightSize: 0,\r\n\t\tscale: 1,\r\n\t\tradius: 1,\r\n\t\tchromatic: true,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0045,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'chromatic-field';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'field',\r\n\t\tfilterId: 'water-field',\r\n\t\tshieldType: 9,\r\n\t\tgridPadding: 1.2,\r\n\t\tcolor: 0x20bbee,\r\n\t\ttime: 0,\r\n\t\tblend: 4,\r\n\t\tintensity: 1,\r\n\t\tlightAlpha: 0.7,\r\n\t\tlightSize: 0.5,\r\n\t\tscale: 0.6,\r\n\t\tradius: 1,\r\n\t\tchromatic: false,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0015,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'water-field';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'field',\r\n\t\tfilterId: 'evil-field',\r\n\t\tshieldType: 9,\r\n\t\tgridPadding: 2,\r\n\t\tcolor: 0xff3010,\r\n\t\ttime: 0,\r\n\t\tblend: 5,\r\n\t\tintensity: 1,\r\n\t\tlightAlpha: 4,\r\n\t\tlightSize: 0.8,\r\n\t\tscale: 0.5,\r\n\t\tradius: 1,\r\n\t\tchromatic: false,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0012,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t\tlightSize: {\r\n\t\t\t\tval1: 0.4,\r\n\t\t\t\tval2: 1.5,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t\tloopDuration: 5000,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'evil-field';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'field',\r\n\t\tfilterId: 'grid-field',\r\n\t\tshieldType: 11,\r\n\t\tgridPadding: 2,\r\n\t\tcolor: 0x00cccc,\r\n\t\ttime: 0,\r\n\t\tblend: 2,\r\n\t\tintensity: 1,\r\n\t\tlightAlpha: 1,\r\n\t\tlightSize: 0.3,\r\n\t\tscale: 0.5,\r\n\t\tradius: 1,\r\n\t\tchromatic: false,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0009,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'grid-field';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'field',\r\n\t\tfilterId: 'warp-field',\r\n\t\tshieldType: 12,\r\n\t\tgridPadding: 2,\r\n\t\tcolor: 0xffffff,\r\n\t\ttime: 0,\r\n\t\tblend: 2,\r\n\t\tintensity: 1,\r\n\t\tlightAlpha: 0.8,\r\n\t\tlightSize: 0.5,\r\n\t\tscale: 0.9,\r\n\t\tradius: 1,\r\n\t\tchromatic: false,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0009,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'warp-field';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'field',\r\n\t\tfilterId: 'color-field',\r\n\t\tshieldType: 13,\r\n\t\tgridPadding: 2,\r\n\t\tcolor: 0x00cc00,\r\n\t\ttime: 0,\r\n\t\tblend: 14,\r\n\t\tintensity: 1,\r\n\t\tlightAlpha: 0,\r\n\t\tlightSize: 0,\r\n\t\tscale: 1,\r\n\t\tradius: 1,\r\n\t\tchromatic: false,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0009,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'color-field';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'xray',\r\n\t\tfilterId: 'sunburst',\r\n\t\ttime: 0,\r\n\t\tcolor: 0xffbb00,\r\n\t\tblend: 9,\r\n\t\tdimX: 1,\r\n\t\tdimY: 1,\r\n\t\tanchorX: 0,\r\n\t\tanchorY: 0,\r\n\t\tdivisor: 36,\r\n\t\tintensity: 4,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0012,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t\tanchorX: {\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t\tloopDuration: 6000,\r\n\t\t\t\tval1: 0.4,\r\n\t\t\t\tval2: 0.6,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'sunburst';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'xray',\r\n\t\tfilterId: 'clover',\r\n\t\ttime: 0,\r\n\t\tcolor: 0x00ff00,\r\n\t\tblend: 9,\r\n\t\tdimX: 0.05,\r\n\t\tdimY: 0.05,\r\n\t\tanchorX: 0.5,\r\n\t\tanchorY: 0.5,\r\n\t\tdivisor: 4,\r\n\t\tintensity: 1,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0012,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t\tanchorX: {\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t\tloopDuration: 6000,\r\n\t\t\t\tval1: 0.4,\r\n\t\t\t\tval2: 0.6,\r\n\t\t\t},\r\n\t\t\tanchorY: {\r\n\t\t\t\tanimType: 'syncSinOscillation',\r\n\t\t\t\tloopDuration: 6000,\r\n\t\t\t\tval1: 0.4,\r\n\t\t\t\tval2: 0.6,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'clover';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'xray',\r\n\t\tfilterId: 'scan',\r\n\t\ttime: 0,\r\n\t\tcolor: 0xffffff,\r\n\t\tblend: 5,\r\n\t\tdimX: 20,\r\n\t\tdimY: 20,\r\n\t\tanchorX: 0.5,\r\n\t\tanchorY: 0,\r\n\t\tdivisor: 8,\r\n\t\tintensity: 1,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0005,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'scan';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'xray',\r\n\t\tfilterId: 'blue-rays',\r\n\t\ttime: 0,\r\n\t\tcolor: 0x1030ff,\r\n\t\tblend: 9,\r\n\t\tdimX: 1,\r\n\t\tdimY: 1,\r\n\t\tanchorX: 0,\r\n\t\tanchorY: 0,\r\n\t\tdivisor: 24,\r\n\t\tintensity: 1,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0002,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t\tanchorX: {\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t\tloopDuration: 18000,\r\n\t\t\t\tval1: 0.05,\r\n\t\t\t\tval2: 0.95,\r\n\t\t\t},\r\n\t\t\tanchorY: {\r\n\t\t\t\tanimType: 'syncSinOscillation',\r\n\t\t\t\tloopDuration: 18000,\r\n\t\t\t\tval1: 0.05,\r\n\t\t\t\tval2: 0.95,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'blue-rays';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'liquid',\r\n\t\tfilterId: 'spectral-body',\r\n\t\tcolor: 0x20aaee,\r\n\t\ttime: 0,\r\n\t\tblend: 8,\r\n\t\tintensity: 4,\r\n\t\tspectral: true,\r\n\t\tscale: 0.9,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.001,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t\tcolor: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tloopDuration: 6000,\r\n\t\t\t\tanimType: 'colorOscillation',\r\n\t\t\t\tval1: 0xffffff,\r\n\t\t\t\tval2: 0x00aaff,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'spectral-body';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'liquid',\r\n\t\tfilterId: 'mantle-of-madness',\r\n\t\tcolor: 0x0090ff,\r\n\t\ttime: 0,\r\n\t\tblend: 5,\r\n\t\tintensity: 0.0001,\r\n\t\tspectral: false,\r\n\t\tscale: 7,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0015,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t\tintensity: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t\tloopDuration: 30000,\r\n\t\t\t\tval1: 0.0001,\r\n\t\t\t\tval2: 4,\r\n\t\t\t},\r\n\t\t\tscale: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t\tloopDuration: 30000,\r\n\t\t\t\tval1: 7,\r\n\t\t\t\tval2: 1,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'mantle-of-madness';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'wave',\r\n\t\tfilterId: 'drift-in-plans',\r\n\t\ttime: 0,\r\n\t\tanchorX: 0.5,\r\n\t\tanchorY: 0.5,\r\n\t\tstrength: 0.035,\r\n\t\tfrequency: 80,\r\n\t\tcolor: 0xffffff,\r\n\t\tmaxIntensity: 1.5,\r\n\t\tminIntensity: 0.5,\r\n\t\tpadding: 10,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0085,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t\tanchorX: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tval1: 0.35,\r\n\t\t\t\tval2: 0.65,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t\tloopDuration: 10000,\r\n\t\t\t},\r\n\t\t\tanchorY: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tval1: 0.35,\r\n\t\t\t\tval2: 0.65,\r\n\t\t\t\tanimType: 'syncSinOscillation',\r\n\t\t\t\tloopDuration: 10000,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tfilterType: 'liquid',\r\n\t\tfilterId: 'drift-in-plans',\r\n\t\tcolor: 0xff0000,\r\n\t\ttime: 0,\r\n\t\tblend: 6,\r\n\t\tintensity: 5,\r\n\t\tspectral: false,\r\n\t\tscale: 2.5,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0018,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t\tcolor: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tloopDuration: 9000,\r\n\t\t\t\tanimType: 'colorOscillation',\r\n\t\t\t\tval1: 0xff0000,\r\n\t\t\t\tval2: 0xffffff,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'drift-in-plans';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'zapshadow',\r\n\t\tfilterId: 'fire-aura',\r\n\t\talphaTolerance: 0.5,\r\n\t},\r\n\t{\r\n\t\tfilterType: 'xglow',\r\n\t\tfilterId: 'fire-aura',\r\n\t\tauraType: 2,\r\n\t\tcolor: 0x903010,\r\n\t\tthickness: 9.8,\r\n\t\tscale: 4,\r\n\t\ttime: 0,\r\n\t\tauraIntensity: 2,\r\n\t\tsubAuraIntensity: 1.5,\r\n\t\tthreshold: 0.4,\r\n\t\tdiscard: true,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0027,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t\tthickness: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tloopDuration: 3000,\r\n\t\t\t\tanimType: 'cosOscillation',\r\n\t\t\t\tval1: 2,\r\n\t\t\t\tval2: 5,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'fire-aura';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'zapshadow',\r\n\t\tfilterId: 'glacial-aura',\r\n\t\talphaTolerance: 0.5,\r\n\t},\r\n\t{\r\n\t\tfilterType: 'xglow',\r\n\t\tfilterId: 'glacial-aura',\r\n\t\tauraType: 1,\r\n\t\tcolor: 0x5099dd,\r\n\t\tthickness: 4.5,\r\n\t\tscale: 3,\r\n\t\ttime: 0,\r\n\t\tauraIntensity: 0.8,\r\n\t\tsubAuraIntensity: 0.25,\r\n\t\tthreshold: 0.5,\r\n\t\tdiscard: false,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0018,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t\tthickness: {\r\n\t\t\t\tval1: 2,\r\n\t\t\t\tval2: 4.7,\r\n\t\t\t\tanimType: 'cosOscillation',\r\n\t\t\t\tloopDuration: 3000,\r\n\t\t\t},\r\n\t\t\tsubAuraIntensity: {\r\n\t\t\t\tval1: 0.45,\r\n\t\t\t\tval2: 0.65,\r\n\t\t\t\tanimType: 'cosOscillation',\r\n\t\t\t\tloopDuration: 6000,\r\n\t\t\t},\r\n\t\t\tauraIntensity: {\r\n\t\t\t\tval1: 0.9,\r\n\t\t\t\tval2: 2.2,\r\n\t\t\t\tanimType: 'cosOscillation',\r\n\t\t\t\tloopDuration: 3000,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'glacial-aura';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'zapshadow',\r\n\t\tfilterId: 'anti-aura',\r\n\t\talphaTolerance: 0.5,\r\n\t},\r\n\t{\r\n\t\tfilterType: 'xglow',\r\n\t\tfilterId: 'anti-aura',\r\n\t\tauraType: 2,\r\n\t\tcolor: 0x050505,\r\n\t\tthickness: 2.7,\r\n\t\tscale: 7,\r\n\t\ttime: 0,\r\n\t\tauraIntensity: 5,\r\n\t\tsubAuraIntensity: 2,\r\n\t\tthreshold: 0.08,\r\n\t\tdiscard: false,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0012,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t\tauraIntensity: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tloopDuration: 3000,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t\tval1: 5,\r\n\t\t\t\tval2: 0,\r\n\t\t\t},\r\n\t\t\tsubAuraIntensity: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tloopDuration: 3000,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t\tval1: 2,\r\n\t\t\t\tval2: 0,\r\n\t\t\t},\r\n\t\t\tcolor: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tloopDuration: 6000,\r\n\t\t\t\tanimType: 'syncColorOscillation',\r\n\t\t\t\tval1: 0x050505,\r\n\t\t\t\tval2: 0x200000,\r\n\t\t\t},\r\n\t\t\tthreshold: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tloopDuration: 1500,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t\tval1: 0.02,\r\n\t\t\t\tval2: 0.5,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'anti-aura';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'fire',\r\n\t\tfilterId: 'pure-fire-aura',\r\n\t\tintensity: 1,\r\n\t\tcolor: 0xffffff,\r\n\t\tamplitude: 1,\r\n\t\ttime: 0,\r\n\t\tblend: 2,\r\n\t\tfireBlend: 1,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: -0.0024,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t\tintensity: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tloopDuration: 15000,\r\n\t\t\t\tval1: 0.8,\r\n\t\t\t\tval2: 2,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t},\r\n\t\t\tamplitude: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tloopDuration: 4400,\r\n\t\t\t\tval1: 1,\r\n\t\t\t\tval2: 1.4,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tfilterType: 'zapshadow',\r\n\t\tfilterId: 'pure-fire-aura',\r\n\t\talphaTolerance: 0.5,\r\n\t},\r\n\t{\r\n\t\tfilterType: 'xglow',\r\n\t\tfilterId: 'pure-fire-aura',\r\n\t\tauraType: 2,\r\n\t\tcolor: 0x903010,\r\n\t\tthickness: 9.8,\r\n\t\tscale: 4,\r\n\t\ttime: 0,\r\n\t\tauraIntensity: 2,\r\n\t\tsubAuraIntensity: 1.5,\r\n\t\tthreshold: 0.4,\r\n\t\tdiscard: true,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0027,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t\tthickness: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tloopDuration: 3000,\r\n\t\t\t\tanimType: 'cosOscillation',\r\n\t\t\t\tval1: 2,\r\n\t\t\t\tval2: 5,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'pure-fire-aura';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'zapshadow',\r\n\t\tfilterId: 'pure-fire-aura-2',\r\n\t\talphaTolerance: 0.5,\r\n\t},\r\n\t{\r\n\t\tfilterType: 'xglow',\r\n\t\tfilterId: 'pure-fire-aura-2',\r\n\t\tauraType: 2,\r\n\t\tcolor: 0x903010,\r\n\t\tthickness: 9.8,\r\n\t\tscale: 4,\r\n\t\ttime: 0,\r\n\t\tauraIntensity: 1,\r\n\t\tsubAuraIntensity: 0.3,\r\n\t\tthreshold: 0.5,\r\n\t\tdiscard: true,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0027,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t\tthickness: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tloopDuration: 3000,\r\n\t\t\t\tanimType: 'cosOscillation',\r\n\t\t\t\tval1: 2,\r\n\t\t\t\tval2: 3.6,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tfilterType: 'fire',\r\n\t\tfilterId: 'pure-fire-aura-2',\r\n\t\tintensity: 1,\r\n\t\tcolor: 0xffffff,\r\n\t\tamplitude: 1,\r\n\t\ttime: 0,\r\n\t\tblend: 2,\r\n\t\tfireBlend: 1,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: -0.0024,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t\tintensity: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tloopDuration: 15000,\r\n\t\t\t\tval1: 0.8,\r\n\t\t\t\tval2: 3,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t},\r\n\t\t\tamplitude: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tloopDuration: 4400,\r\n\t\t\t\tval1: 1,\r\n\t\t\t\tval2: 1.6,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'pure-fire-aura-2';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'zapshadow',\r\n\t\tfilterId: 'pure-ice-aura',\r\n\t\talphaTolerance: 0.5,\r\n\t},\r\n\t{\r\n\t\tfilterType: 'xglow',\r\n\t\tfilterId: 'pure-ice-aura',\r\n\t\tauraType: 1,\r\n\t\tcolor: 0x5099dd,\r\n\t\tthickness: 4.5,\r\n\t\tscale: 10,\r\n\t\ttime: 0,\r\n\t\tauraIntensity: 0.25,\r\n\t\tsubAuraIntensity: 1,\r\n\t\tthreshold: 0.5,\r\n\t\tdiscard: false,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0018,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t\tthickness: {\r\n\t\t\t\tval1: 2,\r\n\t\t\t\tval2: 3.3,\r\n\t\t\t\tanimType: 'cosOscillation',\r\n\t\t\t\tloopDuration: 3000,\r\n\t\t\t},\r\n\t\t\tsubAuraIntensity: {\r\n\t\t\t\tval1: 0.45,\r\n\t\t\t\tval2: 0.65,\r\n\t\t\t\tanimType: 'cosOscillation',\r\n\t\t\t\tloopDuration: 6000,\r\n\t\t\t},\r\n\t\t\tauraIntensity: {\r\n\t\t\t\tval1: 0.9,\r\n\t\t\t\tval2: 2.2,\r\n\t\t\t\tanimType: 'cosOscillation',\r\n\t\t\t\tloopDuration: 3000,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tfilterType: 'smoke',\r\n\t\tfilterId: 'pure-ice-aura',\r\n\t\tcolor: 0x80ccff,\r\n\t\ttime: 0,\r\n\t\tblend: 2,\r\n\t\tdimX: 0.3,\r\n\t\tdimY: 1,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: -0.006,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t\tdimX: {\r\n\t\t\t\tval1: 0.4,\r\n\t\t\t\tval2: 0.2,\r\n\t\t\t\tanimType: 'cosOscillation',\r\n\t\t\t\tloopDuration: 3000,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'pure-ice-aura';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'pixel',\r\n\t\tfilterId: 'pixelate',\r\n\t\tsizeX: 2.5,\r\n\t\tsizeY: 2.5,\r\n\t},\r\n];\r\n\r\npresetObject = new Object();\r\npresetObject.name = 'pixelate';\r\npresetObject.library = PresetsLibrary.MAIN;\r\npresetObject.params = params;\r\npresets.push(presetObject);\r\n\r\nexport var templatePresets = [];\r\n\r\n// white : **electric , **waves, ***xrays, **liquid (normal), (clover)\r\n// black : **liquid (protoplasm), **smoke, **rays, outline, **fumes, **fog, **flood, **fire\r\n// no texture : **glow, **bulge, **blur, **bloom\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'flood',\r\n\t\tfilterId: 'Watery Surface',\r\n\t\ttime: 0,\r\n\t\tcolor: 0x0020bb,\r\n\t\tbillowy: 0.43,\r\n\t\ttintIntensity: 0.72,\r\n\t\tglint: 0.31,\r\n\t\tscale: 70,\r\n\t\tpadding: 10,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0006,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = {};\r\npresetObject.name = 'Watery Surface';\r\npresetObject.library = PresetsLibrary.TEMPLATE;\r\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png';\r\npresetObject.params = params;\r\ntemplatePresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'liquid',\r\n\t\tfilterId: 'Protoplasm',\r\n\t\tcolor: 0x20aaee,\r\n\t\ttime: 0,\r\n\t\tblend: 8,\r\n\t\tintensity: 4,\r\n\t\tspectral: true,\r\n\t\tscale: 1.4,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.001,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = {};\r\npresetObject.name = 'Protoplasm';\r\npresetObject.library = PresetsLibrary.TEMPLATE;\r\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png';\r\npresetObject.params = params;\r\ntemplatePresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'liquid',\r\n\t\tfilterId: 'Watery Surface 2',\r\n\t\tcolor: 0x20aaee,\r\n\t\ttime: 0,\r\n\t\tblend: 8,\r\n\t\tintensity: 4,\r\n\t\tspectral: false,\r\n\t\tscale: 1.4,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.001,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = {};\r\npresetObject.name = 'Watery Surface 2';\r\npresetObject.library = PresetsLibrary.TEMPLATE;\r\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png';\r\npresetObject.params = params;\r\ntemplatePresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'smoke',\r\n\t\tfilterId: 'Smoky Area',\r\n\t\tcolor: 0xaaaaaa,\r\n\t\ttime: 0,\r\n\t\tblend: 2,\r\n\t\tdimX: 1,\r\n\t\tdimY: 1,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.002,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = {};\r\npresetObject.name = 'Smoky Area';\r\npresetObject.library = PresetsLibrary.TEMPLATE;\r\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png';\r\npresetObject.params = params;\r\ntemplatePresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'electric',\r\n\t\tfilterId: 'Shock',\r\n\t\tcolor: 0xffffff,\r\n\t\ttime: 0,\r\n\t\tblend: 1,\r\n\t\tintensity: 5,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.002,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = {};\r\npresetObject.name = 'Shock';\r\npresetObject.library = PresetsLibrary.TEMPLATE;\r\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png';\r\npresetObject.params = params;\r\ntemplatePresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'xray',\r\n\t\tfilterId: 'Annihilating Rays',\r\n\t\ttime: 0,\r\n\t\tcolor: 0xffbb00,\r\n\t\tblend: 9,\r\n\t\tdimX: 1,\r\n\t\tdimY: 1,\r\n\t\tanchorX: 0,\r\n\t\tanchorY: 0,\r\n\t\tdivisor: 6,\r\n\t\tintensity: 4,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0012,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = {};\r\npresetObject.name = 'Annihilating Rays';\r\npresetObject.library = PresetsLibrary.TEMPLATE;\r\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png';\r\npresetObject.params = params;\r\ntemplatePresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'ray',\r\n\t\tfilterId: 'Classic Rays',\r\n\t\ttime: 0,\r\n\t\tcolor: 0xcf8000,\r\n\t\talpha: 0.5,\r\n\t\tdivisor: 32,\r\n\t\tanchorX: 0,\r\n\t\tanchorY: 0,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0005,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = {};\r\npresetObject.name = 'Classic Rays';\r\npresetObject.library = PresetsLibrary.TEMPLATE;\r\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png';\r\npresetObject.params = params;\r\ntemplatePresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'fumes',\r\n\t\tfilterId: 'Smoke Filaments',\r\n\t\tcolor: 0x808080,\r\n\t\ttime: 0,\r\n\t\tblend: 8,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.001,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = {};\r\npresetObject.name = 'Smoke Filaments';\r\npresetObject.library = PresetsLibrary.TEMPLATE;\r\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png';\r\npresetObject.params = params;\r\ntemplatePresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'fire',\r\n\t\tfilterId: 'Flames',\r\n\t\tintensity: 1.5,\r\n\t\tcolor: 0xffffff,\r\n\t\tamplitude: 1.3,\r\n\t\ttime: 0,\r\n\t\tblend: 2,\r\n\t\tfireBlend: 1,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: -0.0016,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = {};\r\npresetObject.name = 'Flames';\r\npresetObject.library = PresetsLibrary.TEMPLATE;\r\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png';\r\npresetObject.params = params;\r\ntemplatePresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'xfog',\r\n\t\tfilterId: 'Thick Fog',\r\n\t\tautoFit: false,\r\n\t\tcolor: 0x3090ff,\r\n\t\ttime: 0,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0006,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = {};\r\npresetObject.name = 'Thick Fog';\r\npresetObject.library = PresetsLibrary.TEMPLATE;\r\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/black-tone-vstrong-opacity.png';\r\npresetObject.params = params;\r\ntemplatePresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'glow',\r\n\t\tfilterId: 'Glowing Outline',\r\n\t\touterStrength: 5.5,\r\n\t\tinnerStrength: 0,\r\n\t\tcolor: 0x006000,\r\n\t\tquality: 0.5,\r\n\t\tpadding: 10,\r\n\t\tanimated: {\r\n\t\t\touterStrength: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tloopDuration: 3000,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t\tval1: 5.5,\r\n\t\t\t\tval2: 1.5,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = {};\r\npresetObject.name = 'Glowing Outline';\r\npresetObject.library = PresetsLibrary.TEMPLATE;\r\npresetObject.params = params;\r\ntemplatePresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'wave',\r\n\t\tfilterId: 'Waves',\r\n\t\ttime: 0,\r\n\t\tanchorX: 0.5,\r\n\t\tanchorY: 0.5,\r\n\t\tstrength: 0.015,\r\n\t\tfrequency: 120,\r\n\t\tcolor: 0xffffff,\r\n\t\tmaxIntensity: 2.5,\r\n\t\tminIntensity: 0.9,\r\n\t\tpadding: 10,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0085,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = {};\r\npresetObject.name = 'Waves';\r\npresetObject.library = PresetsLibrary.TEMPLATE;\r\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png';\r\npresetObject.params = params;\r\ntemplatePresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'wave',\r\n\t\tfilterId: 'Waves 2',\r\n\t\ttime: 0,\r\n\t\tanchorX: 0.5,\r\n\t\tanchorY: 0.5,\r\n\t\tstrength: 0.014,\r\n\t\tfrequency: 400,\r\n\t\tcolor: 0xffffff,\r\n\t\tmaxIntensity: 2.4,\r\n\t\tminIntensity: 0.8,\r\n\t\tpadding: 10,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0385,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = {};\r\npresetObject.name = 'Waves 2';\r\npresetObject.library = PresetsLibrary.TEMPLATE;\r\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png';\r\npresetObject.params = params;\r\ntemplatePresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'wave',\r\n\t\tfilterId: 'Waves 3',\r\n\t\ttime: 0,\r\n\t\tanchorX: 0.5,\r\n\t\tanchorY: 0.5,\r\n\t\tstrength: 0.017,\r\n\t\tfrequency: 35,\r\n\t\tcolor: 0xffffff,\r\n\t\tmaxIntensity: 2.6,\r\n\t\tminIntensity: 0.9,\r\n\t\tpadding: 20,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0085,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = {};\r\npresetObject.name = 'Waves 3';\r\npresetObject.library = PresetsLibrary.TEMPLATE;\r\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png';\r\npresetObject.params = params;\r\ntemplatePresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'xglow',\r\n\t\tfilterId: 'Zone : Fire',\r\n\t\tauraType: 1,\r\n\t\tcolor: 0x903010,\r\n\t\tscale: 1.5,\r\n\t\ttime: 0,\r\n\t\tauraIntensity: 1.8,\r\n\t\tsubAuraIntensity: 0.25,\r\n\t\tthreshold: 0.6,\r\n\t\tdiscard: false,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0027,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t\tthickness: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tloopDuration: 3000,\r\n\t\t\t\tanimType: 'cosOscillation',\r\n\t\t\t\tval1: 2,\r\n\t\t\t\tval2: 5,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tfilterType: 'fire',\r\n\t\tfilterId: 'Zone : Fire',\r\n\t\tintensity: 1.5,\r\n\t\tcolor: 0xffffff,\r\n\t\tamplitude: 1,\r\n\t\ttime: 0,\r\n\t\tblend: 2,\r\n\t\tfireBlend: 1,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: -0.0015,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = {};\r\npresetObject.name = 'Zone : Fire';\r\npresetObject.library = PresetsLibrary.TEMPLATE;\r\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png';\r\npresetObject.params = params;\r\ntemplatePresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'xglow',\r\n\t\tfilterId: 'Zone : Electricity',\r\n\t\tauraType: 2,\r\n\t\tcolor: 0x303030,\r\n\t\tscale: 1.5,\r\n\t\ttime: 0,\r\n\t\tauraIntensity: 1,\r\n\t\tsubAuraIntensity: 0.9,\r\n\t\tthreshold: 0,\r\n\t\tdiscard: true,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0027,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t\tthickness: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tloopDuration: 3000,\r\n\t\t\t\tanimType: 'cosOscillation',\r\n\t\t\t\tval1: 1,\r\n\t\t\t\tval2: 2,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tfilterType: 'electric',\r\n\t\tfilterId: 'Zone : Electricity',\r\n\t\tcolor: 0xffffff,\r\n\t\ttime: 0,\r\n\t\tblend: 1,\r\n\t\tintensity: 5,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.002,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = {};\r\npresetObject.name = 'Zone : Electricity';\r\npresetObject.library = PresetsLibrary.TEMPLATE;\r\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/white-tone-strong-opacity.png';\r\npresetObject.params = params;\r\ntemplatePresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'xglow',\r\n\t\tfilterId: 'Zone : Blizzard',\r\n\t\tauraType: 1,\r\n\t\tcolor: 0x5099dd,\r\n\t\tthickness: 4.5,\r\n\t\tscale: 5,\r\n\t\ttime: 0,\r\n\t\tauraIntensity: 0.25,\r\n\t\tsubAuraIntensity: 1,\r\n\t\tthreshold: 0.5,\r\n\t\tdiscard: false,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0018,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t\tthickness: {\r\n\t\t\t\tval1: 2,\r\n\t\t\t\tval2: 3.3,\r\n\t\t\t\tanimType: 'cosOscillation',\r\n\t\t\t\tloopDuration: 3000,\r\n\t\t\t},\r\n\t\t\tsubAuraIntensity: {\r\n\t\t\t\tval1: 0.05,\r\n\t\t\t\tval2: 0.1,\r\n\t\t\t\tanimType: 'cosOscillation',\r\n\t\t\t\tloopDuration: 6000,\r\n\t\t\t},\r\n\t\t\tauraIntensity: {\r\n\t\t\t\tval1: 0.9,\r\n\t\t\t\tval2: 2.2,\r\n\t\t\t\tanimType: 'cosOscillation',\r\n\t\t\t\tloopDuration: 3000,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tfilterType: 'smoke',\r\n\t\tfilterId: 'Zone : Blizzard',\r\n\t\tcolor: 0x80ccff,\r\n\t\ttime: 0,\r\n\t\tblend: 2,\r\n\t\tdimY: 1,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: -0.005,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t\tdimX: {\r\n\t\t\t\tval1: 0.4,\r\n\t\t\t\tval2: 0.2,\r\n\t\t\t\tanimType: 'cosOscillation',\r\n\t\t\t\tloopDuration: 3000,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = {};\r\npresetObject.name = 'Zone : Blizzard';\r\npresetObject.library = PresetsLibrary.TEMPLATE;\r\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png';\r\npresetObject.params = params;\r\ntemplatePresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'bulgepinch',\r\n\t\tfilterId: 'Bulging Out',\r\n\t\tpadding: 150,\r\n\t\tstrength: 0,\r\n\t\tradiusPercent: 200,\r\n\t\tanimated: {\r\n\t\t\tstrength: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tanimType: 'cosOscillation',\r\n\t\t\t\tloopDuration: 2000,\r\n\t\t\t\tval1: 0,\r\n\t\t\t\tval2: 0.45,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = {};\r\npresetObject.name = 'Bulging Out';\r\npresetObject.library = PresetsLibrary.TEMPLATE;\r\npresetObject.params = params;\r\ntemplatePresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'blur',\r\n\t\tfilterId: 'Blurred Texture',\r\n\t\tpadding: 25,\r\n\t\tquality: 4.0,\r\n\t\tblur: 0,\r\n\t\tblurX: 0,\r\n\t\tblurY: 0,\r\n\t\tanimated: {\r\n\t\t\tblurX: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t\tloopDuration: 500,\r\n\t\t\t\tval1: 0,\r\n\t\t\t\tval2: 6,\r\n\t\t\t},\r\n\t\t\tblurY: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t\tloopDuration: 750,\r\n\t\t\t\tval1: 0,\r\n\t\t\t\tval2: 6,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = {};\r\npresetObject.name = 'Blurred Texture';\r\npresetObject.library = PresetsLibrary.TEMPLATE;\r\npresetObject.params = params;\r\ntemplatePresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'xbloom',\r\n\t\tfilterId: 'Bloomed Texture',\r\n\t\tthreshold: 0.35,\r\n\t\tbloomScale: 0,\r\n\t\tbrightness: 1,\r\n\t\tblur: 0.1,\r\n\t\tpadding: 10,\r\n\t\tquality: 15,\r\n\t\tblendMode: 0,\r\n\t\tanimated: {\r\n\t\t\tbloomScale: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tloopDuration: 2000,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t\tval1: 0,\r\n\t\t\t\tval2: 2.1,\r\n\t\t\t},\r\n\t\t\tthreshold: {\r\n\t\t\t\tactive: false,\r\n\t\t\t\tloopDuration: 1000,\r\n\t\t\t\tanimType: 'syncCosOscillation',\r\n\t\t\t\tval1: 0.0,\r\n\t\t\t\tval2: 1.9,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = {};\r\npresetObject.name = 'Bloomed Texture';\r\npresetObject.library = PresetsLibrary.TEMPLATE;\r\npresetObject.params = params;\r\ntemplatePresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'liquid',\r\n\t\tfilterId: 'Wild Magic',\r\n\t\tcolor: 0xff0000,\r\n\t\ttime: 0,\r\n\t\tblend: 6,\r\n\t\tintensity: 5,\r\n\t\tspectral: false,\r\n\t\tscale: 2.5,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0018,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tfilterType: 'wave',\r\n\t\tfilterId: 'Wild Magic',\r\n\t\ttime: 0,\r\n\t\tanchorX: 0.5,\r\n\t\tanchorY: 0.5,\r\n\t\tstrength: 0.014,\r\n\t\tfrequency: 10,\r\n\t\tcolor: 0xffffff,\r\n\t\tmaxIntensity: 1.3,\r\n\t\tminIntensity: 0.6,\r\n\t\tpadding: 10,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0065,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = {};\r\npresetObject.name = 'Wild Magic';\r\npresetObject.library = PresetsLibrary.TEMPLATE;\r\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png';\r\npresetObject.params = params;\r\ntemplatePresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'web',\r\n\t\tfilterId: 'Spider Web 1',\r\n\t\tanchorX: 0.5,\r\n\t\tanchorY: 0.5,\r\n\t\tcolor: 0xffffff,\r\n\t\tthickness: 2,\r\n\t\tdiv2: 5,\r\n\t\ttime: 98.8,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tloopDuration: 5000,\r\n\t\t\t\tanimType: 'cosOscillation',\r\n\t\t\t\tval1: 98.8,\r\n\t\t\t\tval2: 99.7,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = {};\r\npresetObject.name = 'Spider Web 1';\r\npresetObject.library = PresetsLibrary.TEMPLATE;\r\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png';\r\npresetObject.params = params;\r\ntemplatePresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'web',\r\n\t\tfilterId: 'Spider Web 2',\r\n\t\tanchorX: 0.5,\r\n\t\tanchorY: 0.5,\r\n\t\tcolor: 0xcccccc,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0005,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tfilterType: 'liquid',\r\n\t\tfilterId: 'Spider Web 2',\r\n\t\tcolor: 0xff0000,\r\n\t\ttime: 0,\r\n\t\tblend: 4,\r\n\t\tintensity: 8,\r\n\t\tspectral: false,\r\n\t\tscale: 0.2,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0005,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = {};\r\npresetObject.name = 'Spider Web 2';\r\npresetObject.library = PresetsLibrary.TEMPLATE;\r\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png';\r\npresetObject.params = params;\r\ntemplatePresets.push(presetObject);\r\n\r\nparams = [\r\n\t{\r\n\t\tfilterType: 'web',\r\n\t\tfilterId: 'Spider Web 3',\r\n\t\tanchorX: 0.5,\r\n\t\tanchorY: 0.5,\r\n\t\tcolor: 0xcccccc,\r\n\t\ttime: 100,\r\n\t},\r\n\t{\r\n\t\tfilterType: 'liquid',\r\n\t\tfilterId: 'Spider Web 3',\r\n\t\tcolor: 0xff0000,\r\n\t\ttime: 0,\r\n\t\tblend: 1,\r\n\t\tintensity: 4,\r\n\t\tspectral: true,\r\n\t\tscale: 0.2,\r\n\t\tanimated: {\r\n\t\t\ttime: {\r\n\t\t\t\tactive: true,\r\n\t\t\t\tspeed: 0.0005,\r\n\t\t\t\tanimType: 'move',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n];\r\n\r\npresetObject = {};\r\npresetObject.name = 'Spider Web 3';\r\npresetObject.library = PresetsLibrary.TEMPLATE;\r\npresetObject.defaultTexture = 'modules/tokenmagic/fx/assets/templates/black-tone-strong-opacity.png';\r\npresetObject.params = params;\r\ntemplatePresets.push(presetObject);\r\n\r\nexport var allPresets = presets.concat(templatePresets);\r\n","import { TokenMagic, isTheOne, log, warn, error } from '../module/tokenmagic.js';\r\nimport { PresetsLibrary, templatePresets } from '../fx/presets/defaultpresets.js';\r\n\r\nconst Magic = TokenMagic();\r\n\r\n// TODO create a generic function to import JSON by version\r\n\r\nexport const DataVersion = {\r\n\tARCHAIC: '',\r\n\tV030: '0.3.0',\r\n\tV040: '0.4.0',\r\n\tV040b: '0.4.0b',\r\n\tV041: '0.4.1',\r\n\tV043: '0.4.3',\r\n};\r\n\r\n// migration function - will evolve constantly\r\nexport async function tmfxDataMigration() {\r\n\tif (isTheOne()) {\r\n\t\tvar dataVersionNow;\r\n\t\ttry {\r\n\t\t\tdataVersionNow = game.settings.get('tokenmagic', 'migration');\r\n\t\t} catch (e) {\r\n\t\t\tdataVersionNow = DataVersion.ARCHAIC;\r\n\t\t}\r\n\t\tif (dataVersionNow < DataVersion.V030) {\r\n\t\t\tawait updatePresetsV030();\r\n\t\t}\r\n\t\tif (dataVersionNow < DataVersion.V040) {\r\n\t\t\tawait updatePresetsV040();\r\n\t\t}\r\n\t\tif (dataVersionNow < DataVersion.V040b) {\r\n\t\t\tawait updatePresetsV040b();\r\n\t\t}\r\n\t\tif (dataVersionNow < DataVersion.V041) {\r\n\t\t\tawait updatePresetsV041();\r\n\t\t}\r\n\t\tif (dataVersionNow < DataVersion.V043) {\r\n\t\t\tawait updatePresetsV043();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// migrating to the new presets data\r\nasync function updatePresetsV030() {\r\n\tvar presets = game.settings.get('tokenmagic', 'presets');\r\n\r\n\tif (!(presets == null)) {\r\n\t\tlog(`Migration 0.3.0 - Launching presets data migration...`);\r\n\r\n\t\tlet foundTemplateLibrary = false;\r\n\r\n\t\tfor (const preset of presets) {\r\n\t\t\tif (!preset.hasOwnProperty('library')) {\r\n\t\t\t\tpreset.library = PresetsLibrary.MAIN;\r\n\t\t\t\tlog(`Migration 0.3.0 - Adding ${preset.name} to ${PresetsLibrary.MAIN}`);\r\n\t\t\t} else if (preset.library === PresetsLibrary.TEMPLATE && !foundTemplateLibrary) {\r\n\t\t\t\tfoundTemplateLibrary = true;\r\n\t\t\t\tlog(`Migration 0.3.0 - Found template presets. Templates will not be added.`);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!foundTemplateLibrary) log(`Migration 0.3.0 - Merging templates presets.`);\r\n\r\n\t\tlet newPresets = foundTemplateLibrary ? presets : presets.concat(templatePresets);\r\n\r\n\t\ttry {\r\n\t\t\tawait game.settings.set('tokenmagic', 'presets', newPresets);\r\n\t\t\tawait game.settings.set('tokenmagic', 'migration', DataVersion.V030);\r\n\t\t\tlog(`Migration 0.3.0 - Migration successful!`);\r\n\t\t} catch (e) {\r\n\t\t\terror(`Migration 0.3.0 - Migration failed.`);\r\n\t\t\terror(e);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nasync function updatePresetsV040() {\r\n\tvar presets = game.settings.get('tokenmagic', 'presets');\r\n\r\n\tif (!(presets == null)) {\r\n\t\tlog(`Migration 0.4.0 - Launching presets data migration...`);\r\n\r\n\t\t// Adding zOrder for the template presets only\r\n\t\t// Does not break visuals\r\n\t\tfor (const preset of presets) {\r\n\t\t\tif (preset.library === PresetsLibrary.TEMPLATE) {\r\n\t\t\t\tlog(`Migration 0.4.0 - Checking template preset ${preset.name}...`);\r\n\t\t\t\tlet zOrder = 1;\r\n\t\t\t\tfor (const filter of preset.params) {\r\n\t\t\t\t\tif (!filter.hasOwnProperty('zOrder')) {\r\n\t\t\t\t\t\tfilter.zOrder = zOrder;\r\n\t\t\t\t\t\tlog(`Migration 0.4.0 - Updating ${filter.filterType} in ${preset.name}...`);\r\n\t\t\t\t\t\tzOrder++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tawait game.settings.set('tokenmagic', 'presets', presets);\r\n\t\t\tlog(`Migration 0.4.0 - Importing new template presets...`);\r\n\t\t\tawait Magic.importPresetLibraryFromPath('modules/tokenmagic/import/TMFX-update-presets-v040.json', {\r\n\t\t\t\toverwrite: false,\r\n\t\t\t});\r\n\t\t\tawait game.settings.set('tokenmagic', 'migration', DataVersion.V040);\r\n\t\t\tlog(`Migration 0.4.0 - Migration successful!`);\r\n\t\t} catch (e) {\r\n\t\t\terror(`Migration 0.4.0 - Migration failed.`);\r\n\t\t\terror(e);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nasync function updatePresetsV040b() {\r\n\tvar presets = game.settings.get('tokenmagic', 'presets');\r\n\r\n\tif (!(presets == null)) {\r\n\t\tlog(`Migration 0.4.0b - Launching presets data migration...`);\r\n\r\n\t\ttry {\r\n\t\t\tawait game.settings.set('tokenmagic', 'presets', presets);\r\n\t\t\tlog(`Migration 0.4.0b - updating template presets...`);\r\n\t\t\tawait Magic.importPresetLibraryFromPath('modules/tokenmagic/import/TMFX-update-presets-v040b.json', {\r\n\t\t\t\toverwrite: true,\r\n\t\t\t});\r\n\t\t\tawait game.settings.set('tokenmagic', 'migration', DataVersion.V040b);\r\n\t\t\tlog(`Migration 0.4.0b - Migration successful!`);\r\n\t\t} catch (e) {\r\n\t\t\terror(`Migration 0.4.0b - Migration failed.`);\r\n\t\t\terror(e);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nasync function updatePresetsV041() {\r\n\tvar presets = game.settings.get('tokenmagic', 'presets');\r\n\r\n\tif (!(presets == null)) {\r\n\t\tlog(`Migration 0.4.1 - Launching presets data migration...`);\r\n\r\n\t\ttry {\r\n\t\t\tawait game.settings.set('tokenmagic', 'presets', presets);\r\n\t\t\tlog(`Migration 0.4.1 - updating template presets...`);\r\n\t\t\tawait Magic.importPresetLibraryFromPath('modules/tokenmagic/import/TMFX-update-presets-v041.json', {\r\n\t\t\t\toverwrite: true,\r\n\t\t\t});\r\n\t\t\tawait game.settings.set('tokenmagic', 'migration', DataVersion.V041);\r\n\t\t\tlog(`Migration 0.4.1 - Migration successful!`);\r\n\t\t} catch (e) {\r\n\t\t\terror(`Migration 0.4.1 - Migration failed.`);\r\n\t\t\terror(e);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nasync function updatePresetsV043() {\r\n\tvar presets = game.settings.get('tokenmagic', 'presets');\r\n\r\n\tif (!(presets == null)) {\r\n\t\tlog(`Migration 0.4.3 - Launching presets data migration...`);\r\n\r\n\t\ttry {\r\n\t\t\tawait game.settings.set('tokenmagic', 'presets', presets);\r\n\t\t\tlog(`Migration 0.4.3 - updating template presets...`);\r\n\t\t\tawait Magic.importPresetLibraryFromPath('modules/tokenmagic/import/TMFX-update-presets-v043.json', {\r\n\t\t\t\toverwrite: true,\r\n\t\t\t});\r\n\t\t\tawait game.settings.set('tokenmagic', 'migration', DataVersion.V043);\r\n\t\t\tlog(`Migration 0.4.3 - Migration successful!`);\r\n\t\t} catch (e) {\r\n\t\t\terror(`Migration 0.4.3 - Migration failed.`);\r\n\t\t\terror(e);\r\n\t\t}\r\n\t}\r\n}\r\n","import { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterCRT extends PIXI.filters.CRTFilter {\r\n\tconstructor(params) {\r\n\t\tsuper();\r\n\t\tthis.curvature = 1.0;\r\n\t\tthis.lineWidth = 1.0;\r\n\t\tthis.lineContrast = 0.25;\r\n\t\tthis.verticalLine = false;\r\n\t\tthis.noise = 0.08;\r\n\t\tthis.noiseSize = 1.0;\r\n\t\tthis.seed = 0;\r\n\t\tthis.vignetting = 0;\r\n\t\tthis.zOrder = 320;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n}\r\n","import { Anime } from '../Anime.js';\r\nimport './proto/FilterProto.js';\r\n\r\nexport class FilterRGBSplit extends PIXI.filters.RGBSplitFilter {\r\n\tconstructor(params) {\r\n\t\tsuper();\r\n\t\tthis.red = new Float32Array([-10, 0]);\r\n\t\tthis.green = new Float32Array([0, 10]);\r\n\t\tthis.blue = new Float32Array([0, 0]);\r\n\t\tthis.zOrder = 340;\r\n\t\tthis.animated = {};\r\n\t\tthis.setTMParams(params);\r\n\t\tif (!this.dummy) {\r\n\t\t\tthis.anime = new Anime(this);\r\n\t\t\tthis.normalizeTMParams();\r\n\t\t}\r\n\t}\r\n\r\n\tget redX() {\r\n\t\treturn this.uniforms.red[0];\r\n\t}\r\n\r\n\tset redX(value) {\r\n\t\tthis.uniforms.red[0] = value;\r\n\t}\r\n\r\n\tget redY() {\r\n\t\treturn this.uniforms.red[1];\r\n\t}\r\n\r\n\tset redY(value) {\r\n\t\tthis.uniforms.red[1] = value;\r\n\t}\r\n\r\n\tget greenX() {\r\n\t\treturn this.uniforms.green[0];\r\n\t}\r\n\r\n\tset greenX(value) {\r\n\t\tthis.uniforms.green[0] = value;\r\n\t}\r\n\r\n\tget greenY() {\r\n\t\treturn this.uniforms.green[1];\r\n\t}\r\n\r\n\tset greenY(value) {\r\n\t\tthis.uniforms.green[1] = value;\r\n\t}\r\n\r\n\tget blueX() {\r\n\t\treturn this.uniforms.blue[0];\r\n\t}\r\n\r\n\tset blueX(value) {\r\n\t\tthis.uniforms.blue[0] = value;\r\n\t}\r\n\r\n\tget blueY() {\r\n\t\treturn this.uniforms.blue[1];\r\n\t}\r\n\r\n\tset blueY(value) {\r\n\t\tthis.uniforms.blue[1] = value;\r\n\t}\r\n}\r\n","import { presets as defaultPresets, PresetsLibrary } from '../fx/presets/defaultpresets.js';\r\nimport { DataVersion } from '../migration/migration.js';\r\nimport { TokenMagic, isVideoDisabled, fixPath } from './tokenmagic.js';\r\nimport { dnd5eTemplates } from './autoTemplate/dnd5e.js';\r\nimport { pf2eTemplates } from './autoTemplate/pf2e.js';\r\nimport { witcherTemplates } from './autoTemplate/TheWitcherTRPG.js';\r\nimport { defaultOpacity, emptyPreset } from './constants.js';\r\n\r\nconst Magic = TokenMagic();\r\n\r\nexport class TokenMagicSettings extends FormApplication {\r\n\tconstructor(object = {}, options) {\r\n\t\tsuper(object, options);\r\n\t}\r\n\r\n\t/** @override */\r\n\tstatic get defaultOptions() {\r\n\t\treturn {\r\n\t\t\t...super.defaultOptions,\r\n\t\t\ttemplate: 'modules/tokenmagic/templates/settings/settings.html',\r\n\t\t\theight: 'auto',\r\n\t\t\ttitle: game.i18n.localize('TMFX.settings.autoTemplateSettings.dialog.title'),\r\n\t\t\twidth: 600,\r\n\t\t\tclasses: ['tokenmagic', 'settings'],\r\n\t\t\ttabs: [\r\n\t\t\t\t{\r\n\t\t\t\t\tnavSelector: '.tabs',\r\n\t\t\t\t\tcontentSelector: 'form',\r\n\t\t\t\t\tinitial: 'name',\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\tsubmitOnClose: false,\r\n\t\t};\r\n\t}\r\n\r\n\tstatic init() {\r\n\t\tconst menuAutoTemplateSettings = {\r\n\t\t\tkey: 'autoTemplateSettings',\r\n\t\t\tconfig: {\r\n\t\t\t\tname: game.i18n.localize('TMFX.settings.autoTemplateSettings.button.name'),\r\n\t\t\t\tlabel: game.i18n.localize('TMFX.settings.autoTemplateSettings.button.label'),\r\n\t\t\t\thint: game.i18n.localize('TMFX.settings.autoTemplateSettings.button.hint'),\r\n\t\t\t\ttype: TokenMagicSettings,\r\n\t\t\t\trestricted: true,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst settingAutoTemplateSettings = {\r\n\t\t\tkey: 'autoTemplateSettings',\r\n\t\t\tconfig: {\r\n\t\t\t\tname: game.i18n.localize('TMFX.settings.autoTemplateSettings.name'),\r\n\t\t\t\thint: game.i18n.localize('TMFX.settings.autoTemplateSettings.hint'),\r\n\t\t\t\tscope: 'world',\r\n\t\t\t\tconfig: false,\r\n\t\t\t\tdefault: {},\r\n\t\t\t\ttype: Object,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst templates = this.getSystemTemplates();\r\n\t\tlet hasAutoTemplates = !!templates;\r\n\t\tif (templates) {\r\n\t\t\tgame.settings.registerMenu('tokenmagic', menuAutoTemplateSettings.key, menuAutoTemplateSettings.config);\r\n\t\t\tgame.settings.register(\r\n\t\t\t\t'tokenmagic',\r\n\t\t\t\tsettingAutoTemplateSettings.key,\r\n\t\t\t\tmergeObject(\r\n\t\t\t\t\tsettingAutoTemplateSettings.config,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdefault: templates.constructor.defaultConfiguration,\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttrue,\r\n\t\t\t\t\ttrue\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tgame.settings.register('tokenmagic', 'autoTemplateEnabled', {\r\n\t\t\tname: game.i18n.localize('TMFX.settings.autoTemplateEnabled.name'),\r\n\t\t\thint: game.i18n.localize('TMFX.settings.autoTemplateEnabled.hint'),\r\n\t\t\tscope: 'world',\r\n\t\t\tconfig: hasAutoTemplates,\r\n\t\t\tdefault: hasAutoTemplates,\r\n\t\t\ttype: Boolean,\r\n\t\t\tonChange: (value) => TokenMagicSettings.configureAutoTemplate(value),\r\n\t\t});\r\n\r\n\t\tgame.settings.register('tokenmagic', 'defaultTemplateOnHover', {\r\n\t\t\tname: game.i18n.localize('TMFX.settings.defaultTemplateOnHover.name'),\r\n\t\t\thint: game.i18n.localize('TMFX.settings.defaultTemplateOnHover.hint'),\r\n\t\t\tscope: 'world',\r\n\t\t\tconfig: true,\r\n\t\t\tdefault: hasAutoTemplates,\r\n\t\t\ttype: Boolean,\r\n\t\t\tonChange: () => window.location.reload(),\r\n\t\t});\r\n\r\n\t\tgame.settings.register('tokenmagic', 'autohideTemplateElements', {\r\n\t\t\tname: game.i18n.localize('TMFX.settings.autohideTemplateElements.name'),\r\n\t\t\thint: game.i18n.localize('TMFX.settings.autohideTemplateElements.hint'),\r\n\t\t\tscope: 'world',\r\n\t\t\tconfig: true,\r\n\t\t\tdefault: true,\r\n\t\t\ttype: Boolean,\r\n\t\t\tonChange: () => window.location.reload(),\r\n\t\t});\r\n\r\n\t\tgame.settings.register('tokenmagic', 'useAdditivePadding', {\r\n\t\t\tname: game.i18n.localize('TMFX.settings.useMaxPadding.name'),\r\n\t\t\thint: game.i18n.localize('TMFX.settings.useMaxPadding.hint'),\r\n\t\t\tscope: 'world',\r\n\t\t\tconfig: true,\r\n\t\t\tdefault: false,\r\n\t\t\ttype: Boolean,\r\n\t\t});\r\n\r\n\t\tgame.settings.register('tokenmagic', 'minPadding', {\r\n\t\t\tname: game.i18n.localize('TMFX.settings.minPadding.name'),\r\n\t\t\thint: game.i18n.localize('TMFX.settings.minPadding.hint'),\r\n\t\t\tscope: 'world',\r\n\t\t\tconfig: true,\r\n\t\t\tdefault: 50,\r\n\t\t\ttype: Number,\r\n\t\t});\r\n\r\n\t\tgame.settings.register('tokenmagic', 'fxPlayerPermission', {\r\n\t\t\tname: game.i18n.localize('TMFX.settings.fxPlayerPermission.name'),\r\n\t\t\thint: game.i18n.localize('TMFX.settings.fxPlayerPermission.hint'),\r\n\t\t\tscope: 'world',\r\n\t\t\tconfig: true,\r\n\t\t\tdefault: false,\r\n\t\t\ttype: Boolean,\r\n\t\t});\r\n\r\n\t\tgame.settings.register('tokenmagic', 'importOverwrite', {\r\n\t\t\tname: game.i18n.localize('TMFX.settings.importOverwrite.name'),\r\n\t\t\thint: game.i18n.localize('TMFX.settings.importOverwrite.hint'),\r\n\t\t\tscope: 'world',\r\n\t\t\tconfig: true,\r\n\t\t\tdefault: false,\r\n\t\t\ttype: Boolean,\r\n\t\t});\r\n\r\n\t\tgame.settings.register('tokenmagic', 'useZOrder', {\r\n\t\t\tname: game.i18n.localize('TMFX.settings.useZOrder.name'),\r\n\t\t\thint: game.i18n.localize('TMFX.settings.useZOrder.hint'),\r\n\t\t\tscope: 'world',\r\n\t\t\tconfig: true,\r\n\t\t\tdefault: false,\r\n\t\t\ttype: Boolean,\r\n\t\t});\r\n\r\n\t\tgame.settings.register('tokenmagic', 'disableAnimations', {\r\n\t\t\tname: game.i18n.localize('TMFX.settings.disableAnimations.name'),\r\n\t\t\thint: game.i18n.localize('TMFX.settings.disableAnimations.hint'),\r\n\t\t\tscope: 'client',\r\n\t\t\tconfig: true,\r\n\t\t\tdefault: false,\r\n\t\t\ttype: Boolean,\r\n\t\t\tonChange: () => window.location.reload(),\r\n\t\t});\r\n\r\n\t\tgame.settings.register('tokenmagic', 'disableCaching', {\r\n\t\t\tname: game.i18n.localize('TMFX.settings.disableCaching.name'),\r\n\t\t\thint: game.i18n.localize('TMFX.settings.disableCaching.hint'),\r\n\t\t\tscope: 'client',\r\n\t\t\tconfig: true,\r\n\t\t\tdefault: true,\r\n\t\t\ttype: Boolean,\r\n\t\t});\r\n\r\n\t\tgame.settings.register('tokenmagic', 'disableVideo', {\r\n\t\t\tname: game.i18n.localize('TMFX.settings.disableVideo.name'),\r\n\t\t\thint: game.i18n.localize('TMFX.settings.disableVideo.hint'),\r\n\t\t\tscope: 'world',\r\n\t\t\tconfig: true,\r\n\t\t\tdefault: false,\r\n\t\t\ttype: Boolean,\r\n\t\t\tonChange: () => window.location.reload(),\r\n\t\t});\r\n\r\n\t\tgame.settings.register('tokenmagic', 'presets', {\r\n\t\t\tname: 'Token Magic FX presets',\r\n\t\t\thint: 'Token Magic FX presets',\r\n\t\t\tscope: 'world',\r\n\t\t\tconfig: false,\r\n\t\t\tdefault: defaultPresets,\r\n\t\t\ttype: Object,\r\n\t\t});\r\n\r\n\t\tgame.settings.register('tokenmagic', 'migration', {\r\n\t\t\tname: 'TMFX Data Version',\r\n\t\t\thint: 'TMFX Data Version',\r\n\t\t\tscope: 'world',\r\n\t\t\tconfig: false,\r\n\t\t\tdefault: DataVersion.ARCHAIC,\r\n\t\t\ttype: String,\r\n\t\t});\r\n\r\n\t\tloadTemplates([\r\n\t\t\t'modules/tokenmagic/templates/settings/settings.html',\r\n\t\t\t'modules/tokenmagic/templates/settings/dnd5e/categories.html',\r\n\t\t\t'modules/tokenmagic/templates/settings/dnd5e/overrides.html',\r\n\t\t\t'modules/tokenmagic/templates/settings/pf2e/categories.html',\r\n\t\t\t'modules/tokenmagic/templates/settings/pf2e/overrides.html',\r\n\t\t\t'modules/tokenmagic/templates/settings/TheWitcherTRPG/categories.html',\r\n\t\t\t'modules/tokenmagic/templates/settings/TheWitcherTRPG/overrides.html',\r\n\t\t]);\r\n\t}\r\n\r\n\tstatic configureAutoTemplate(enabled = false) {\r\n\t\tthis.getSystemTemplates()?.configure(enabled);\r\n\t}\r\n\r\n\tstatic getSystemTemplates() {\r\n\t\tswitch (game.system.id) {\r\n\t\t\tcase 'dnd5e':\r\n\t\t\t\treturn dnd5eTemplates;\r\n\t\t\tcase 'pf2e':\r\n\t\t\t\treturn pf2eTemplates;\r\n\t\t\tcase 'TheWitcherTRPG':\r\n\t\t\t\treturn witcherTemplates;\r\n\t\t\tdefault:\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tgetSettingsData() {\r\n\t\tlet settingsData = {\r\n\t\t\tautoTemplateEnable: game.settings.get('tokenmagic', 'autoTemplateEnabled'),\r\n\t\t};\r\n\t\tif (TokenMagicSettings.getSystemTemplates()) {\r\n\t\t\tsettingsData['autoTemplateSettings'] = game.settings.get('tokenmagic', 'autoTemplateSettings');\r\n\t\t}\r\n\t\treturn settingsData;\r\n\t}\r\n\r\n\t/** @override */\r\n\tgetData() {\r\n\t\tlet data = super.getData();\r\n\t\tdata.hasAutoTemplates = false;\r\n\t\tdata.emptyPreset = emptyPreset;\r\n\t\tconst templates = TokenMagicSettings.getSystemTemplates();\r\n\t\tif (templates) {\r\n\t\t\tmergeObject(data, templates.getData());\r\n\t\t}\r\n\r\n\t\tdata.presets = Magic.getPresets(PresetsLibrary.TEMPLATE).sort(function (a, b) {\r\n\t\t\tif (a.name < b.name) return -1;\r\n\t\t\tif (a.name > b.name) return 1;\r\n\t\t\treturn 0;\r\n\t\t});\r\n\t\tdata.system = { id: game.system.id, title: game.system.title };\r\n\t\tdata.settings = this.getSettingsData();\r\n\t\tdata.submitText = game.i18n.localize('TMFX.save');\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/** @override */\r\n\tasync _updateObject(_, formData) {\r\n\t\tconst data = expandObject(formData);\r\n\t\tfor (let [key, value] of Object.entries(data)) {\r\n\t\t\tif (key === 'autoTemplateSettings' && value.overrides) {\r\n\t\t\t\tconst compacted = {};\r\n\t\t\t\tObject.values(value.overrides).forEach((val, idx) => (compacted[idx] = val));\r\n\t\t\t\tvalue.overrides = compacted;\r\n\t\t\t}\r\n\t\t\tawait game.settings.set('tokenmagic', key, value);\r\n\t\t}\r\n\t}\r\n\r\n\t/** @override */\r\n\tactivateListeners(html) {\r\n\t\tsuper.activateListeners(html);\r\n\r\n\t\thtml.find('button.add-override').click(this._onAddOverride.bind(this));\r\n\t\thtml.find('button.remove-override').click(this._onRemoveOverride.bind(this));\r\n\t}\r\n\r\n\tasync _onAddOverride(event) {\r\n\t\tevent.preventDefault();\r\n\t\tlet idx = 0;\r\n\t\tconst entries = event.target.closest('div.tab').querySelectorAll('div.override-entry');\r\n\t\tconst last = entries[entries.length - 1];\r\n\t\tif (last) {\r\n\t\t\tidx = last.dataset.idx + 1;\r\n\t\t}\r\n\t\tlet updateData = {};\r\n\t\tupdateData[`autoTemplateSettings.overrides.${idx}.target`] = '';\r\n\t\tupdateData[`autoTemplateSettings.overrides.${idx}.opacity`] = defaultOpacity;\r\n\t\tupdateData[`autoTemplateSettings.overrides.${idx}.tint`] = null;\r\n\t\tupdateData[`autoTemplateSettings.overrides.${idx}.preset`] = emptyPreset;\r\n\t\tupdateData[`autoTemplateSettings.overrides.${idx}.texture`] = null;\r\n\t\tawait this._onSubmit(event, { updateData: updateData, preventClose: true });\r\n\t\tthis.render();\r\n\t}\r\n\r\n\tasync _onRemoveOverride(event) {\r\n\t\tevent.preventDefault();\r\n\t\tlet idx = event.target.dataset.idx;\r\n\t\tconst el = event.target.closest(`div[data-idx=\"${idx}\"]`);\r\n\t\tif (!el) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tel.remove();\r\n\t\tawait this._onSubmit(event, { preventClose: true });\r\n\t\tthis.render();\r\n\t}\r\n}\r\n\r\nHooks.once('init', () => {\r\n\t// Extracted from https://github.com/leapfrogtechnology/just-handlebars-helpers/\r\n\tHandlebars.registerHelper('concat', function (...params) {\r\n\t\t// Ignore the object appended by handlebars.\r\n\t\tif (typeof params[params.length - 1] === 'object') {\r\n\t\t\tparams.pop();\r\n\t\t}\r\n\r\n\t\treturn params.join('');\r\n\t});\r\n\tTokenMagicSettings.init();\r\n\tTokenMagicSettings.configureAutoTemplate(game.settings.get('tokenmagic', 'autoTemplateEnabled'));\r\n\r\n\tconst wmtdUpdate = async function (wrapped, ...args) {\r\n\t\tconst [document] = args;\r\n\t\tlet preset, hasPresetData;\r\n\r\n\t\tconst tex = document.texture ?? '';\r\n\t\tconst hasTexture = !!document.texture;\r\n\t\tconst opt = document.flags?.tokenmagic?.options ?? null;\r\n\t\tif (!opt) {\r\n\t\t\tpreset = document['flags.tokenmagic.templateData.preset'];\r\n\t\t}\r\n\t\thasPresetData = !!preset;\r\n\r\n\t\t//const hasOpt = data[\"flags.tokenmagic\"]?.options ?? null;\r\n\r\n\t\tif (hasTexture) {\r\n\t\t\tdocument.texture = fixPath(document.texture);\r\n\t\t}\r\n\r\n\t\tif (opt == null) {\r\n\t\t\tif (hasPresetData && preset !== emptyPreset) {\r\n\t\t\t\tlet defaultTexture = Magic._getPresetTemplateDefaultTexture(preset);\r\n\t\t\t\tif (!(defaultTexture == null)) {\r\n\t\t\t\t\tif (tex === '' || tex.startsWith('modules/tokenmagic/fx/assets/templates/'))\r\n\t\t\t\t\t\tdocument.texture = defaultTexture;\r\n\t\t\t\t}\r\n\t\t\t} else if (\r\n\t\t\t\thasTexture &&\r\n\t\t\t\ttex.startsWith('modules/tokenmagic/fx/assets/templates/') &&\r\n\t\t\t\thasPresetData &&\r\n\t\t\t\tpreset === emptyPreset\r\n\t\t\t) {\r\n\t\t\t\tdocument.texture = '';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn await wrapped(...args);\r\n\t};\r\n\r\n\tconst wmtDraw = async function (wrapped, ...args) {\r\n\t\tif (this.document.texture) {\r\n\t\t\tthis.document.texture = fixPath(this.document.texture);\r\n\t\t}\r\n\t\tconst retVal = await wrapped(...args);\r\n\t\tthis.template.alpha = this.document.getFlag('tokenmagic', 'templateData')?.opacity ?? 1;\r\n\t\treturn retVal;\r\n\t};\r\n\r\n\tlet wmtApplyRenderFlags;\r\n\tlet wmtApplyRenderFlagsType;\r\n\r\n\tlet wmtRefreshTemplate;\r\n\tlet wmtRefreshTemplateType;\r\n\r\n\tif (!isVideoDisabled()) {\r\n\t\tconst toRadians = Math.toRadians;\r\n\r\n\t\twmtApplyRenderFlagsType = 'WRAPPER';\r\n\r\n\t\twmtApplyRenderFlags = function (wrapped, ...args) {\r\n\t\t\tconst [flags] = args;\r\n\t\t\tif (flags?.refreshShape) flags.refreshShape = this.template && !this.template._destroyed;\r\n\t\t\treturn wrapped(...args);\r\n\t\t};\r\n\r\n\t\t/* ------------------------------------------------------------------------------------ */\r\n\r\n\t\twmtRefreshTemplateType = 'OVERRIDE';\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t * @return {wmtRefreshTemplate}\r\n\t\t */\r\n\t\twmtRefreshTemplate = function () {\r\n\t\t\tconst t = this.template.clear();\r\n\t\t\tif (!this.isVisible) return;\r\n\r\n\t\t\t// Draw the Template outline\r\n\t\t\tt.lineStyle(this._borderThickness, this.borderColor, 0.75).beginFill(0x000000, 0.0);\r\n\r\n\t\t\t// Fill Color or Texture\r\n\t\t\tif (this.texture) {\r\n\t\t\t\tlet mat = PIXI.Matrix.IDENTITY;\r\n\t\t\t\t// rectangle\r\n\t\t\t\tif (this.shape.width && this.shape.height)\r\n\t\t\t\t\tmat.scale(this.shape.width / this.texture.width, this.shape.height / this.texture.height);\r\n\t\t\t\telse if (this.shape.radius) {\r\n\t\t\t\t\tmat.scale((this.shape.radius * 2) / this.texture.height, (this.shape.radius * 2) / this.texture.width);\r\n\t\t\t\t\t// Circle center is texture start...\r\n\t\t\t\t\tmat.translate(-this.shape.radius, -this.shape.radius);\r\n\t\t\t\t} else if (this.document.t === 'ray') {\r\n\t\t\t\t\tconst d = canvas.dimensions,\r\n\t\t\t\t\t\theight = (this.document.width * d.size) / d.distance,\r\n\t\t\t\t\t\twidth = (this.document.distance * d.size) / d.distance;\r\n\t\t\t\t\tmat.scale(width / this.texture.width, height / this.texture.height);\r\n\t\t\t\t\tmat.translate(0, -height * 0.5);\r\n\r\n\t\t\t\t\tmat.rotate(toRadians(this.document.direction));\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// cone\r\n\t\t\t\t\tconst d = canvas.dimensions;\r\n\r\n\t\t\t\t\t// Extract and prepare data\r\n\t\t\t\t\tlet { direction, distance, angle } = this.document;\r\n\t\t\t\t\tdistance *= d.size / d.distance;\r\n\t\t\t\t\tdirection = Math.toRadians(direction);\r\n\t\t\t\t\tconst width = (this.document.distance * d.size) / d.distance;\r\n\r\n\t\t\t\t\tconst angles = [angle / -2, angle / 2];\r\n\t\t\t\t\tdistance = distance / Math.cos(Math.toRadians(angle / 2));\r\n\r\n\t\t\t\t\t// Get the cone shape as a polygon\r\n\t\t\t\t\tconst rays = angles.map((a) => Ray.fromAngle(0, 0, direction + Math.toRadians(a), distance + 1));\r\n\t\t\t\t\tconst height = Math.sqrt(\r\n\t\t\t\t\t\t(rays[0].B.x - rays[1].B.x) * (rays[0].B.x - rays[1].B.x) +\r\n\t\t\t\t\t\t\t(rays[0].B.y - rays[1].B.y) * (rays[0].B.y - rays[1].B.y)\r\n\t\t\t\t\t);\r\n\t\t\t\t\tmat.scale(width / this.texture.width, height / this.texture.height);\r\n\t\t\t\t\tmat.translate(0, -height / 2);\r\n\t\t\t\t\tmat.rotate(toRadians(this.document.direction));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tt.beginTextureFill({\r\n\t\t\t\t\ttexture: this.texture,\r\n\t\t\t\t\tmatrix: mat,\r\n\t\t\t\t\talpha: 1.0,\r\n\t\t\t\t});\r\n\t\t\t\tconst source = getProperty(this.texture, 'baseTexture.resource.source');\r\n\t\t\t\tif (source && source.tagName === 'VIDEO') {\r\n\t\t\t\t\tsource.loop = true;\r\n\t\t\t\t\tsource.muted = true;\r\n\t\t\t\t\tgame.video.play(source);\r\n\t\t\t\t}\r\n\t\t\t} else t.beginFill(0x000000, 0.0);\r\n\r\n\t\t\t// Draw the shape\r\n\t\t\tt.drawShape(this.shape);\r\n\r\n\t\t\t// Draw origin and destination points\r\n\t\t\tt.lineStyle(this._borderThickness, 0x000000)\r\n\t\t\t\t.beginFill(0x000000, 0.5)\r\n\t\t\t\t.drawCircle(0, 0, 6)\r\n\t\t\t\t.drawCircle(this.ray.dx, this.ray.dy, 6);\r\n\r\n\t\t\t// Update visibility\r\n\t\t\tthis.controlIcon.visible = !!this.layer.active;\r\n\t\t\tthis.controlIcon.border.visible = !!this.hover;\r\n\t\t\tconst alpha = this.document.getFlag('tokenmagic', 'templateData')?.opacity ?? 1;\r\n\t\t\tt.alpha = this.hover ? alpha / 1.25 : alpha;\r\n\r\n\t\t\treturn this;\r\n\t\t};\r\n\r\n\t\t/* ------------------------------------------------------------------------------------ */\r\n\t}\r\n\r\n\tif (game.settings.get('tokenmagic', 'autohideTemplateElements')) {\r\n\t\t/**\r\n\t\t *\r\n\t\t * @param wrapped\r\n\t\t * @param args\r\n\t\t * @return {*}\r\n\t\t */\r\n\t\tconst autohideTemplateElements = function (wrapped, ...args) {\r\n\t\t\t// Save texture and border thickness\r\n\t\t\tconst texture = this.texture;\r\n\t\t\tconst borderThickness = this._borderThickness;\r\n\r\n\t\t\t// Hide template texture while moving\r\n\t\t\tif (this._original || this.parent === canvas.templates.preview) {\r\n\t\t\t\tthis.texture = null;\r\n\t\t\t}\r\n\r\n\t\t\t// Show border outline only on hover if the template is textured\r\n\t\t\tif (this.texture && this.texture !== '' && !this._hover) {\r\n\t\t\t\tthis._borderThickness = 0;\r\n\t\t\t}\r\n\r\n\t\t\tconst retVal = wrapped(...args);\r\n\r\n\t\t\t// Restore texture and border thickness\r\n\t\t\tthis.texture = texture;\r\n\t\t\tthis._borderThickness = borderThickness;\r\n\r\n\t\t\t{\r\n\t\t\t\t// Show the origin/destination points and ruler text only on hover or while creating but not while moving\r\n\t\t\t\tconst template = this._original ?? this;\r\n\t\t\t\tconst show = !this._original && (this._hover || this.parent === canvas.templates.preview);\r\n\r\n\t\t\t\tif (!show && template.template?.geometry) {\r\n\t\t\t\t\t// Hide origin and destination points, i.e., hide everything except the template shape\r\n\t\t\t\t\tfor (const document of template.template.geometry.graphicsData) {\r\n\t\t\t\t\t\tif (document.shape !== template.shape) {\r\n\t\t\t\t\t\t\tdocument.fillStyle.visible = false;\r\n\t\t\t\t\t\t\tdocument.lineStyle.visible = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttemplate.template.geometry.invalidate();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (template.ruler) template.ruler.renderable = show;\r\n\t\t\t\tif (template.controlIcon) template.controlIcon.renderable = template.owner;\r\n\t\t\t\tif (template.handle) template.handle.renderable = template.owner;\r\n\t\t\t}\r\n\t\t\treturn retVal;\r\n\t\t};\r\n\r\n\t\t/* ------------------------------------------------------------------------------------ */\r\n\r\n\t\tif (wmtApplyRenderFlags) {\r\n\t\t\tconst _wmtApplyRenderFlags = wmtApplyRenderFlags;\r\n\t\t\twmtApplyRenderFlags = function () {\r\n\t\t\t\treturn autohideTemplateElements.call(this, _wmtApplyRenderFlags.bind(this), ...arguments);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\twmtApplyRenderFlagsType = 'WRAPPER';\r\n\t\t\twmtApplyRenderFlags = autohideTemplateElements;\r\n\t\t}\r\n\t}\r\n\r\n\tif (game.settings.get('tokenmagic', 'defaultTemplateOnHover')) {\r\n\t\tHooks.on('canvasReady', () => {\r\n\t\t\tcanvas.stage.on('mousemove', (event) => {\r\n\t\t\t\tconst { x: mx, y: my } = event.data.getLocalPosition(canvas.templates);\r\n\t\t\t\tfor (const template of canvas.templates.placeables) {\r\n\t\t\t\t\tconst hl = canvas.grid.getHighlightLayer(`MeasuredTemplate.${template.id}`);\r\n\t\t\t\t\tconst opacity = template.document.getFlag('tokenmagic', 'templateData')?.opacity ?? 1;\r\n\t\t\t\t\tif (template.texture && template.texture !== '') {\r\n\t\t\t\t\t\tconst { x: cx, y: cy } = template.center;\r\n\t\t\t\t\t\tconst mouseover = template.shape?.contains(mx - cx, my - cy);\r\n\t\t\t\t\t\thl.renderable = mouseover;\r\n\t\t\t\t\t\ttemplate.template.alpha = (mouseover ? 0.5 : 1.0) * opacity;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\thl.renderable = true;\r\n\t\t\t\t\t\ttemplate.template.alpha = opacity;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tif (game.modules.get('lib-wrapper')?.active) {\r\n\t\tlibWrapper.register('tokenmagic', 'MeasuredTemplateDocument.prototype.update', wmtdUpdate, 'WRAPPER');\r\n\t\tlibWrapper.register('tokenmagic', 'MeasuredTemplate.prototype._draw', wmtDraw, 'WRAPPER');\r\n\t\tif (wmtApplyRenderFlags)\r\n\t\t\tlibWrapper.register(\r\n\t\t\t\t'tokenmagic',\r\n\t\t\t\t'MeasuredTemplate.prototype._applyRenderFlags',\r\n\t\t\t\twmtApplyRenderFlags,\r\n\t\t\t\twmtApplyRenderFlagsType\r\n\t\t\t);\r\n\t\tif (wmtRefreshTemplate)\r\n\t\t\tlibWrapper.register(\r\n\t\t\t\t'tokenmagic',\r\n\t\t\t\t'MeasuredTemplate.prototype._refreshTemplate',\r\n\t\t\t\twmtRefreshTemplate,\r\n\t\t\t\twmtRefreshTemplateType\r\n\t\t\t);\r\n\t} else {\r\n\t\tconst cmtdUpdate = MeasuredTemplateDocument.prototype.update;\r\n\t\tMeasuredTemplateDocument.prototype.update = function () {\r\n\t\t\treturn wmtdUpdate.call(this, cmtdUpdate.bind(this), ...arguments);\r\n\t\t};\r\n\t\tconst cmtDraw = MeasuredTemplate.prototype._draw;\r\n\t\tMeasuredTemplate.prototype._draw = function () {\r\n\t\t\treturn wmtDraw.call(this, cmtDraw.bind(this), ...arguments);\r\n\t\t};\r\n\r\n\t\tif (wmtApplyRenderFlags) {\r\n\t\t\tif (wmtApplyRenderFlagsType && wmtApplyRenderFlagsType !== 'OVERRIDE') {\r\n\t\t\t\tconst cmtApplyRenderFlags = MeasuredTemplate.prototype._applyRenderFlags;\r\n\t\t\t\tMeasuredTemplate.prototype._applyRenderFlags = function () {\r\n\t\t\t\t\treturn wmtApplyRenderFlags.call(this, cmtApplyRenderFlags.bind(this), ...arguments);\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tMeasuredTemplate.prototype._applyRenderFlags = wmtApplyRenderFlags;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (wmtRefreshTemplate) {\r\n\t\t\tif (wmtRefreshTemplateType && wmtRefreshTemplateType !== 'OVERRIDE') {\r\n\t\t\t\tconst cmtRefreshTemplate = MeasuredTemplate.prototype._refreshTemplate;\r\n\t\t\t\tMeasuredTemplate.prototype._refreshTemplate = function () {\r\n\t\t\t\t\treturn wmtRefreshTemplate.call(this, cmtRefreshTemplate.bind(this), ...arguments);\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tMeasuredTemplate.prototype._refreshTemplate = wmtRefreshTemplate;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n","import { defaultOpacity, emptyPreset } from '../constants.js';\r\n\r\nexport class AutoTemplateDND5E {\r\n\tstatic get defaultConfiguration() {\r\n\t\tconst defaultConfig = {\r\n\t\t\tcategories: {},\r\n\t\t\toverrides: {\r\n\t\t\t\t0: {\r\n\t\t\t\t\ttarget: 'Stinking Cloud',\r\n\t\t\t\t\topacity: 0.5,\r\n\t\t\t\t\ttint: '#00a80b',\r\n\t\t\t\t\tpreset: 'Smoky Area',\r\n\t\t\t\t\ttexture: null,\r\n\t\t\t\t},\r\n\t\t\t\t1: {\r\n\t\t\t\t\ttarget: 'Web',\r\n\t\t\t\t\topacity: 0.5,\r\n\t\t\t\t\ttint: '#808080',\r\n\t\t\t\t\tpreset: 'Spider Web 2',\r\n\t\t\t\t\ttexture: null,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tObject.keys(CONFIG.DND5E.damageTypes).forEach((dmgType) => {\r\n\t\t\tif (defaultConfig.categories[dmgType] == undefined) {\r\n\t\t\t\tconst config = { opacity: defaultOpacity, tint: null };\r\n\t\t\t\tswitch (dmgType.toLowerCase()) {\r\n\t\t\t\t\tcase 'acid':\r\n\t\t\t\t\t\tconfig.tint = '#2d8000';\r\n\t\t\t\t\t\tconfig.opacity = 0.6;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'cold':\r\n\t\t\t\t\t\tconfig.tint = '#47b3ff';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'necrotic':\r\n\t\t\t\t\t\tconfig.tint = '#502673';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'poison':\r\n\t\t\t\t\t\tconfig.tint = '#00a80b';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'psychic':\r\n\t\t\t\t\t\tconfig.tint = '#8000ff';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'thunder':\r\n\t\t\t\t\t\tconfig.tint = '#0060ff';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tdefaultConfig.categories[dmgType] = config;\r\n\t\t\t}\r\n\t\t\tObject.keys(CONFIG.MeasuredTemplate.types).forEach((tplType) => {\r\n\t\t\t\tconst config = { preset: emptyPreset, texture: null };\r\n\t\t\t\tswitch (dmgType.toLowerCase()) {\r\n\t\t\t\t\tcase 'acid':\r\n\t\t\t\t\t\tconfig.preset = 'Watery Surface 2';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'cold':\r\n\t\t\t\t\t\tconfig.preset = 'Thick Fog';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'fire':\r\n\t\t\t\t\t\tconfig.preset = 'Flames';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'force':\r\n\t\t\t\t\t\tconfig.preset = 'Waves 3';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'lightning':\r\n\t\t\t\t\t\tconfig.preset = 'Shock';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'necrotic':\r\n\t\t\t\t\t\tconfig.preset = 'Smoke Filaments';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'poison':\r\n\t\t\t\t\t\tconfig.preset = 'Smoky Area';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'psychic':\r\n\t\t\t\t\t\tconfig.preset = 'Classic Rays';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'radiant':\r\n\t\t\t\t\t\tconfig.preset = 'Annihilating Rays';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'thunder':\r\n\t\t\t\t\t\tconfig.preset = 'Waves';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tdefaultConfig.categories[dmgType][tplType] = config;\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn defaultConfig;\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tthis._enabled = false;\r\n\t}\r\n\r\n\tget enabled() {\r\n\t\treturn this._enabled;\r\n\t}\r\n\r\n\tconfigure(enabled = false) {\r\n\t\tif (game.system.id !== 'dnd5e') return;\r\n\r\n\t\tif (!enabled) {\r\n\t\t\tif (this._enabled) {\r\n\t\t\t\tif (game.modules.get('lib-wrapper')?.active) {\r\n\t\t\t\t\tlibWrapper.unregister('tokenmagic', 'game.dnd5e.canvas.AbilityTemplate.fromItem');\r\n\t\t\t\t} else {\r\n\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (!this._enabled) {\r\n\t\t\t\tif (game.modules.get('lib-wrapper')?.active) {\r\n\t\t\t\t\tlibWrapper.register('tokenmagic', 'game.dnd5e.canvas.AbilityTemplate.fromItem', fromItem, 'WRAPPER');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst origFromItem = game.dnd5e.canvas.AbilityTemplate.fromItem;\r\n\t\t\t\t\tgame.dnd5e.canvas.AbilityTemplate.fromItem = function () {\r\n\t\t\t\t\t\treturn fromItem.call(this, origFromItem.bind(this), ...arguments);\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._enabled = enabled;\r\n\t}\r\n\r\n\tgetData() {\r\n\t\treturn {\r\n\t\t\thasAutoTemplates: true,\r\n\t\t\tdmgTypes: CONFIG.DND5E.damageTypes,\r\n\t\t\ttemplateTypes: CONFIG.MeasuredTemplate.types,\r\n\t\t};\r\n\t}\r\n}\r\n\r\nfunction fromConfig(config, template) {\r\n\tconst o = { tokenmagic: { options: {} } };\r\n\tif (config.preset && config.preset !== '' && config.preset !== emptyPreset) {\r\n\t\to.tokenmagic.options.tmfxPreset = config.preset;\r\n\t}\r\n\tif (config.texture && config.texture !== '') {\r\n\t\to.tokenmagic.options.tmfxTexture = config.texture;\r\n\t}\r\n\tif (config.tint && config.tint !== '') {\r\n\t\to.tokenmagic.options.tmfxTint = config.tint;\r\n\t}\r\n\to.tokenmagic.options.tmfxTextureAlpha = config.opacity;\r\n\ttemplate.document.updateSource({ flags: { tokenmagic: o.tokenmagic } });\r\n}\r\n\r\nfunction fromOverrides(overrides = [], item, template) {\r\n\tlet config = overrides.find((el) => el.target.toLowerCase() === item.name.toLowerCase());\r\n\tif (!config) {\r\n\t\treturn false;\r\n\t}\r\n\tfromConfig(config, template);\r\n\treturn true;\r\n}\r\n\r\nfunction fromCategories(categories = {}, item, template) {\r\n\tif (!item.hasDamage) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tlet config, dmgSettings;\r\n\r\n\t// some items/spells have multiple damage types\r\n\t// this loop looks over all the types until it finds one with a valid fx preset\r\n\tfor (const [_, dmgType] of item.data.data.damage.parts) {\r\n\t\tdmgSettings = categories[dmgType] || {};\r\n\t\tconfig = dmgSettings[template.data.t];\r\n\r\n\t\tif (config && config.preset !== emptyPreset) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tif (!config) {\r\n\t\treturn false;\r\n\t}\r\n\tfromConfig(mergeObject(config, { opacity: dmgSettings.opacity, tint: dmgSettings.tint }, true, true), template);\r\n\treturn true;\r\n}\r\n\r\nfunction fromItem(wrapped, ...args) {\r\n\tconst [item] = args;\r\n\tconst template = wrapped(...args);\r\n\tif (!template) {\r\n\t\treturn template;\r\n\t}\r\n\tlet hasPreset = template.hasOwnProperty('tmfxPreset');\r\n\tif (hasPreset) {\r\n\t\treturn template;\r\n\t}\r\n\tconst settings = game.settings.get('tokenmagic', 'autoTemplateSettings');\r\n\tlet updated = settings.overrides ? fromOverrides(Object.values(settings.overrides), item, template) : false;\r\n\tif (!updated) {\r\n\t\tfromCategories(settings.categories, item, template);\r\n\t}\r\n\treturn template;\r\n}\r\n\r\nexport const dnd5eTemplates = new AutoTemplateDND5E();\r\n","import { defaultOpacity, emptyPreset } from '../constants.js';\r\n\r\nexport class AutoTemplatePF2E {\r\n\tstatic get defaultConfiguration() {\r\n\t\tconst defaultConfig = {\r\n\t\t\tcategories: {},\r\n\t\t\toverrides: {\r\n\t\t\t\t0: {\r\n\t\t\t\t\ttarget: 'Stinking Cloud',\r\n\t\t\t\t\topacity: 0.5,\r\n\t\t\t\t\ttint: '#00a80b',\r\n\t\t\t\t\tpreset: 'Smoky Area',\r\n\t\t\t\t\ttexture: null,\r\n\t\t\t\t},\r\n\t\t\t\t1: {\r\n\t\t\t\t\ttarget: 'Sanguine Mist',\r\n\t\t\t\t\topacity: 0.6,\r\n\t\t\t\t\ttint: '#c41212',\r\n\t\t\t\t\tpreset: 'Smoky Area',\r\n\t\t\t\t},\r\n\t\t\t\t2: {\r\n\t\t\t\t\ttarget: 'Web',\r\n\t\t\t\t\topacity: 0.5,\r\n\t\t\t\t\ttint: '#808080',\r\n\t\t\t\t\tpreset: 'Spider Web 2',\r\n\t\t\t\t\ttexture: null,\r\n\t\t\t\t},\r\n\t\t\t\t3: {\r\n\t\t\t\t\ttarget: 'Incendiary Aura',\r\n\t\t\t\t\topacity: 0.2,\r\n\t\t\t\t\ttint: '#b12910',\r\n\t\t\t\t\tpreset: 'Smoke Filaments',\r\n\t\t\t\t\ttexture: null,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tObject.keys(CONFIG.PF2E.damageTraits).forEach((dmgType) => {\r\n\t\t\tif (defaultConfig.categories[dmgType] == undefined) {\r\n\t\t\t\tconst config = { opacity: defaultOpacity, tint: null };\r\n\t\t\t\tswitch (dmgType.toLowerCase()) {\r\n\t\t\t\t\tcase 'acid':\r\n\t\t\t\t\t\tconfig.tint = '#2d8000';\r\n\t\t\t\t\t\tconfig.opacity = 0.6;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'cold':\r\n\t\t\t\t\t\tconfig.tint = '#47b3ff';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'electricity':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'fire':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'force':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mental':\r\n\t\t\t\t\t\tconfig.tint = '#8000ff';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'negative':\r\n\t\t\t\t\t\tconfig.tint = '#502673';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'poison':\r\n\t\t\t\t\t\tconfig.tint = '#00a80b';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'positive':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'sonic':\r\n\t\t\t\t\t\tconfig.tint = '#0060ff';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tdefaultConfig.categories[dmgType] = config;\r\n\t\t\t}\r\n\t\t\tObject.keys(CONFIG.MeasuredTemplate.types).forEach((tplType) => {\r\n\t\t\t\tconst config = { preset: emptyPreset, texture: null };\r\n\t\t\t\tswitch (dmgType.toLowerCase()) {\r\n\t\t\t\t\tcase 'acid':\r\n\t\t\t\t\t\tconfig.preset = 'Watery Surface 2';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'cold':\r\n\t\t\t\t\t\tconfig.preset = 'Thick Fog';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'electricity':\r\n\t\t\t\t\t\tconfig.preset = 'Shock';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'fire':\r\n\t\t\t\t\t\tconfig.preset = 'Flames';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'force':\r\n\t\t\t\t\t\tconfig.preset = 'Waves 3';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mental':\r\n\t\t\t\t\t\tconfig.preset = 'Classic Rays';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'negative':\r\n\t\t\t\t\t\tconfig.preset = 'Smoke Filaments';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'poison':\r\n\t\t\t\t\t\tconfig.preset = 'Smoky Area';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'positive':\r\n\t\t\t\t\t\tconfig.preset = 'Annihilating Rays';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'sonic':\r\n\t\t\t\t\t\tconfig.preset = 'Waves';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tdefaultConfig.categories[dmgType][tplType] = config;\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn defaultConfig;\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tthis._enabled = false;\r\n\t}\r\n\r\n\tconfigure(enabled = false) {\r\n\t\tif (game.system.id !== 'pf2e') return;\r\n\t\tthis._enabled = enabled;\r\n\t}\r\n\r\n\tget enabled() {\r\n\t\treturn this._enabled;\r\n\t}\r\n\r\n\tset enabled(value) {}\r\n\r\n\tgetData() {\r\n\t\treturn {\r\n\t\t\thasAutoTemplates: true,\r\n\t\t\tdmgTypes: CONFIG.PF2E.damageTraits,\r\n\t\t\ttemplateTypes: CONFIG.MeasuredTemplate.types,\r\n\t\t};\r\n\t}\r\n\r\n\tpreCreateMeasuredTemplate(template) {\r\n\t\tlet hasPreset = template.hasOwnProperty('tmfxPreset');\r\n\t\tif (hasPreset) {\r\n\t\t\treturn template;\r\n\t\t}\r\n\r\n\t\tconst origin = template.flags?.pf2e?.origin;\r\n\t\tconst settings = game.settings.get('tokenmagic', 'autoTemplateSettings');\r\n\t\tlet updated = settings.overrides ? fromOverrides(Object.values(settings.overrides), origin, template) : false;\r\n\t\tif (!updated) {\r\n\t\t\tfromCategories(settings.categories, origin, template);\r\n\t\t}\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\nfunction fromConfig(config, template) {\r\n\tconst o = { tokenmagic: { options: {} } };\r\n\tif (config.preset && config.preset !== '' && config.preset !== emptyPreset) {\r\n\t\to.tokenmagic.options.tmfxPreset = config.preset;\r\n\t}\r\n\tif (config.texture && config.texture !== '') {\r\n\t\to.tokenmagic.options.tmfxTexture = config.texture;\r\n\t}\r\n\tif (config.tint && config.tint !== '') {\r\n\t\to.tokenmagic.options.tmfxTint = config.tint;\r\n\t}\r\n\to.tokenmagic.options.tmfxTextureAlpha = config.opacity;\r\n\ttemplate.updateSource({ flags: { tokenmagic: o.tokenmagic } });\r\n}\r\n\r\nfunction fromOverrides(overrides = [], origin, template) {\r\n\tconst { name, slug } = origin;\r\n\r\n\tlet config = overrides.find((el) => el.target.toLowerCase() === name?.toLowerCase());\r\n\tif (!config) {\r\n\t\treturn false;\r\n\t}\r\n\tfromConfig(config, template);\r\n\treturn true;\r\n}\r\n\r\nfunction fromCategories(categories = {}, origin, template) {\r\n\tif (!origin.traits?.length) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tlet config, dmgSettings;\r\n\r\n\t// some templates may have multiple traits\r\n\t// this loop looks over all of them until it finds one with a valid fx preset\r\n\tfor (const trait of origin.traits) {\r\n\t\tdmgSettings = categories[trait.toLowerCase()] || {};\r\n\t\tconfig = dmgSettings[template.t];\r\n\r\n\t\tif (config && config.preset !== emptyPreset) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tif (!config) {\r\n\t\treturn false;\r\n\t}\r\n\tfromConfig(mergeObject(config, { opacity: dmgSettings.opacity, tint: dmgSettings.tint }, true, true), template);\r\n\treturn true;\r\n}\r\n\r\nexport const pf2eTemplates = new AutoTemplatePF2E();\r\n","import { defaultOpacity, emptyPreset } from '../constants.js';\r\n\r\nexport class AutoTemplateTheWitcherTRPG {\r\n\tstatic get defaultConfiguration() {\r\n\t\tconst defaultConfig = {\r\n\t\t\tcategories: {},\r\n\t\t\toverrides: {\r\n\t\t\t\t0: {\r\n\t\t\t\t\ttarget: 'Игни',\r\n\t\t\t\t\topacity: 0.5,\r\n\t\t\t\t\ttint: '#00a80b',\r\n\t\t\t\t\tpreset: 'Flames',\r\n\t\t\t\t\ttexture: null,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tObject.keys(CONFIG.witcher.meleeSkills).forEach((meleeSkillType) => {\r\n\t\t\tif (defaultConfig.categories[meleeSkillType] == undefined) {\r\n\t\t\t\tconst config = { opacity: defaultOpacity, tint: null };\r\n\t\t\t\tswitch (meleeSkillType.toLowerCase()) {\r\n\t\t\t\t\tcase 'brawling':\r\n\t\t\t\t\t\tconfig.tint = '#2d8000';\r\n\t\t\t\t\t\tconfig.opacity = 0.6;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'melee':\r\n\t\t\t\t\t\tconfig.tint = '#47b3ff';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'small blades':\r\n\t\t\t\t\t\tconfig.tint = '#502673';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'staff/spear':\r\n\t\t\t\t\t\tconfig.tint = '#00a80b';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'swordsmanship':\r\n\t\t\t\t\t\tconfig.tint = '#8000ff';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'athletics':\r\n\t\t\t\t\t\tconfig.tint = '#0060ff';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tdefaultConfig.categories[meleeSkillType] = config;\r\n\t\t\t}\r\n\t\t\tObject.keys(CONFIG.MeasuredTemplate.types).forEach((tplType) => {\r\n\t\t\t\tconst config = { preset: emptyPreset, texture: null };\r\n\t\t\t\tswitch (meleeSkillType.toLowerCase()) {\r\n\t\t\t\t\tcase 'acid':\r\n\t\t\t\t\t\tconfig.preset = 'slashing';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'cold':\r\n\t\t\t\t\t\tconfig.preset = 'bludgeoning';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'fire':\r\n\t\t\t\t\t\tconfig.preset = 'piercing';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'force':\r\n\t\t\t\t\t\tconfig.preset = 'elemental';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tdefaultConfig.categories[meleeSkillType][tplType] = config;\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn defaultConfig;\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tthis._enabled = false;\r\n\t}\r\n\r\n\tget enabled() {\r\n\t\treturn this._enabled;\r\n\t}\r\n\r\n\tconfigure(enabled = false) {\r\n\t\tif (game.system.id !== 'TheWitcherTRPG') return;\r\n\t\tthis._enabled = enabled;\r\n\t}\r\n\r\n\tgetData() {\r\n\t\treturn {\r\n\t\t\thasAutoTemplates: true,\r\n\t\t\tmeleeSkills: CONFIG.witcher.meleeSkills,\r\n\t\t\ttemplateTypes: CONFIG.MeasuredTemplate.types,\r\n\t\t};\r\n\t}\r\n\r\n\tpreCreateMeasuredTemplate(template) {\r\n\t\tlet hasPreset = template.hasOwnProperty('tmfxPreset');\r\n\t\tif (hasPreset) {\r\n\t\t\treturn template;\r\n\t\t}\r\n\t\tconst settings = game.settings.get('tokenmagic', 'autoTemplateSettings');\r\n\t\tlet updated = settings.overrides ? fromOverrides(Object.values(settings.overrides), template) : false;\r\n\t\tif (!updated) {\r\n\t\t\tfromCategories(settings.categories, template);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction fromConfig(config, templateData) {\r\n\tconst o = { tokenmagic: { options: {} } };\r\n\tif (config.preset && config.preset !== '' && config.preset !== emptyPreset) {\r\n\t\to.tokenmagic.options.tmfxPreset = config.preset;\r\n\t}\r\n\tif (config.texture && config.texture !== '') {\r\n\t\to.tokenmagic.options.tmfxTexture = config.texture;\r\n\t}\r\n\tif (config.tint && config.tint !== '') {\r\n\t\to.tokenmagic.options.tmfxTint = config.tint;\r\n\t}\r\n\to.tokenmagic.options.tmfxTextureAlpha = config.opacity;\r\n\tmergeObject(templateData, { 'flags.tokenmagic': o.tokenmagic });\r\n}\r\n\r\nfunction fromOverrides(overrides = [], templateData) {\r\n\tconst name = templateData.flags.witcher?.origin?.name;\r\n\tlet config = overrides.find((el) => el.target.toLowerCase() === name?.toLowerCase());\r\n\tif (!config) {\r\n\t\treturn false;\r\n\t}\r\n\tfromConfig(config, templateData);\r\n\treturn true;\r\n}\r\n\r\nfunction fromCategories(categories = {}, templateData) {\r\n\tconst traits = templateData.flags.witcher?.origin?.traits ?? [];\r\n\r\n\tlet config, dmgSettings;\r\n\tfor (const trait of traits) {\r\n\t\tdmgSettings = categories[trait] || {};\r\n\t\tconfig = dmgSettings[templateData.t];\r\n\r\n\t\tif (config && config.preset !== emptyPreset) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tif (!config) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfromConfig(mergeObject(config, { opacity: dmgSettings.opacity, tint: dmgSettings.tint }, true, true), templateData);\r\n\treturn true;\r\n}\r\n\r\nexport const witcherTemplates = new AutoTemplateTheWitcherTRPG();\r\n"],"names":["$b144ce1eeabb28ed$export$b229f242afc35ae9","constructor","puppet","animated","animeId","randomID","frameTime","elapsedTime","loopElapsedTime","loops","internalLoops","ping","pauseBetweenElapsedTime","pauseBetween","shutdown","hasOwnProperty","Object","keys","length","initAnimatedInternals","addAnimation","rgbToValue","r","g","b","valueToRgb","bin","oscillation","elapsed","loopDuration","syncShift","val1","val2","func","isSync","xpi","twoPi","getSynchronizedTime","colOscillation","rgbValue1","rgbValue2","Math","floor","cos","_lastTime","getSynchronizedRotation","getPuppetsByParams","params","puppetArray","_animeMap","forEach","anime","id","placeableId","filterId","filterInternalId","push","set","_resumeAnimation","removeAnimation","delete","size","_suspendAnimation","removeAnimationByFilterId","resetAnimation","Map","_suspended","tick","canvas","app","ticker","lastTime","_frameTime","_prevTime","enabled","placeableImg","preComputation","animate","_activated","$843aec23ddc05ff2$export$4876a704e2bf90fb","_detachFromTicker","_attachToTicker","activateAnimation","deactivateAnimation","add","PIXI","UPDATE_PRIORITY","LOW","remove","getAnimeMap","effect","initInternals","hasInternals","active","cycleCheck","animType","persistTerminatedEffect","autoDisableCheck","isPauseBetweenLoop","Infinity","pauseBetweenDuration","animeInfo","filterOwner","game","data","userId","doInit","flag","targetPlaceable","document","getFlag","animeinfo","values","tmFilterId","tmFilterInternalId","tmFilterEffect","tmFilterEffectValue","concat","duplicate","_TMFXsetAnimeFlag","autoDisable","autoDestroy","every","animeEffect","disableOrDestroy","placeable","window","TokenMagic","deleteFilters","filterType","updateFiltersByPlaceable","frametime","pauseBetweenCheck","pauseStart","pauseStartDuration","pauseStartElapsedTime","moveToward","colorOscillation","halfColorOscillation","PI","syncColorOscillation","cosOscillation","halfCosOscillation","sinOscillation","sin","halfSinOscillation","chaoticOscillation","random","chaosFactor","syncCosOscillation","syncSinOscillation","syncChaoticOscillation","rotation","computedRotation","clockWise","syncRotation","randomNumber","wantInteger","randomNumberPerLoop","_ringing","randomColor","randomColorPerLoop","move","speed","$2a8e669d7b55d798$export$680af52575be3523","$f6b03d27daf6262f$export$5b94be486bc63144","PlaceableObject","prototype","TMFXaddFilters","paramsArray","replace","$843aec23ddc05ff2$export$480e4c19201e4e74","addFilters","TMFXupdateFilters","TMFXaddUpdateFilters","addUpdateFilters","TMFXdeleteFilters","TMFXhasFilterType","hasFilterType","TMFXhasFilterId","hasFilterId","_TMFXsetFlag","$843aec23ddc05ff2$export$ae4b89d79d01bd2b","$843aec23ddc05ff2$export$24d33a6f4bffea69","$843aec23ddc05ff2$export$157d7b8c087faa7b","SET_FLAG","setFlag","SET_ANIME_FLAG","_TMFXunsetFlag","unsetFlag","_TMFXunsetAnimeFlag","_TMFXgetSprite","type","_TMFXgetPlaceableType","$843aec23ddc05ff2$export$f2f6f02affe07ab5","TOKEN","mesh","TILE","bg","TEMPLATE","template","DRAWING","hasText","text","shape","_TMFXgetPlaceablePadding","accPadding","filters","Array","filter","renderer","useMaxPadding","max","padding","_TMFXcheckSprite","_TMFXgetMaxFilterRank","sprite","map","f","rank","_TMFXsetRawFilters","isZOrder","$843aec23ddc05ff2$export$222530a21fa4a417","insertFilter","maxRank","sort","a","zOrder","_TMFXunsetRawFilters","includes","embeddedName","NOT_SUPPORTED","Filter","setTMParams","gridPadding","boundsPadding","Point","currentPadding","recalculatePadding","dummy","foundry","utils","mergeObject","apply","filterManager","input","output","clear","applyFilter","rawPadding","originalPadding","$843aec23ddc05ff2$export$a3e1d0865041c250","assignPlaceable","activateTransform","defineProperty","get","calculatePadding","getPlaceable","$843aec23ddc05ff2$export$5008448b4c27fa2b","placeableType","getPlaceableType","width","height","target","ang","sticky","abs","gridSize","dimensions","x","y","scale","worldTransform","filterTransform","state","handleTransform","arguments","zIndex","normalizeTMParams","undefined","$b18b66f231b68d33$export$1545cd3bbac349ce","AdjustmentFilter","gamma","saturation","contrast","brightness","red","green","blue","alpha","animating","$266d272be8565e9a$export$1efdcfd4cb16ac29","AsciiFilter","$03f77eb51ab54ef5$export$e7bbc116d34f17bc","AdvancedBloomFilter","threshold","bloomScale","blur","quality","$66f275f0cec2a609$export$d75528d01a211954","DotFilter","angle","grayscale","$3bd1625f35d5c5ab$export$2d59c37be5e749a7","DisplacementFilter","displacementSpriteMask","spriteMaskPath","Sprite","from","$843aec23ddc05ff2$export$3bebb302ab08af33","maskPath","wrapMode","WRAP_MODES","REPEAT","position","skew","pivot","anchorSet","transition","maskSpriteX","maskSpriteY","maskSpriteScaleX","maskSpriteScaleY","maskSpriteSkewX","maskSpriteSkewY","maskSpriteRotation","anchor","texture","baseTexture","value","maskSpritePivotX","maskSpritePivotY","transform","updateTransform","stage","uniforms","filterMatrix","calculateSpriteMatrix","maskMatrix","maskSprite","wt","c","d","$8d4366a6c959b91c$export$2094be6cc744d7bc","OldFilmFilter","vignetting","noise","scratch","scratchDensity","seed","$8260b0df112cbb55$export$3ea2d657d9f1c2fe","GlowFilter","innerStrength","outerStrength","color","distance","$d5c2fdb7e9f35bb9$export$c04494508d798797","OutlineFilter","blendMode","BLEND_MODES","NORMAL","thickness","$edefbbc41be796fb$export$bcacf43f99a4009b","BevelFilter","lightColor","lightAlpha","shadowColor","shadowAlpha","$d39b4acfbdc1a130$var$_tempRect","Rectangle","$d39b4acfbdc1a130$export$c042bd0ff4d3251b","args","filterMatrixInverse","Matrix","sourceFrame","destinationFrame","activeState","TEMP_MATRIX","localBounds","getLocalBounds","copyFrom","invert","scaleX","hypot","scaleY","pad","tx","ty","prepend","parent","translate","$1a41de9de96a61b4$export$93b7586d956c930e","$7b2095add72e19b6$export$c6eb01d07cc2e1e8","$7e8c6d1eefd54dec$export$f371526a665ed48","shadowOnly","_distance","_resolution","settings","FILTER_RESOLUTION","_tintFilter","_blurFilter","options","opt","defaults","kernels","resolution","Float32Array","shift","KawaseBlurFilter","_pixelSize","_updateShiftAndScale","getFilterTexture","returnFilterTexture","DEG_TO_RAD","rgb2hex","Color","toRgbArray","pixelSize","$8704f3a7b8eb8233$export$f4e603bceef0312b","TwistFilter","radiusPercent","offset","autoFit","radius","$3592e136c2b5345d$export$767afdf6d9357594","ZoomBlurFilter","strength","innerRadiusPercent","center","innerRadius","$3bfb825742152616$export$680aca7df3d87905","blurXFilter","blurYFilter","_repeatEdgePixels","kernelSize","$3bfb825742152616$export$7c9ef492c949f871","repeatEdgePixels","clearMode","xStrength","yStrength","renderTarget","CLEAR_MODES","CLEAR","updatePadding","blurX","blurY","horizontal","passes","_quality","vertSrc","$3bfb825742152616$export$7a7fb9d9d09c33af","halfLength","ceil","vertSource","$3bfb825742152616$var$vertTemplate","blurLoop","i","toString","fragSrc","$3bfb825742152616$export$1b0dcf101eb6a1c9","kernel","$3bfb825742152616$var$GAUSSIAN_VALUES","fragSource","flip","flop","blend","bindAndClear","BLIT","uSampler","temp","shader","bind","geometry","draw","$9bb93ce0cae67db4$export$985076e41ccfd508","ShockwaveFilter","time","amplitude","wavelength","$b0a48ef8c9dc39a0$export$c1f4d37fd591fb01","BulgePinchFilter","$e5b4e186501e4ef7$export$1cb17df05ce7da23","$4681772edff39fb8$export$228231731d6adde3","alphaTolerance","assign","$4a5ad26bdc269910$export$9d94b322741e1813","$7eb8251b5cefe8f6$export$1992e0dceaf7be8","divisor","anchorX","anchorY","dimX","dimY","alphaDiscard","$77fe101b8af69ecc$export$cfdade87b894d58e","$68fc188eb5f24493$export$f17580ed76af4408","density","$4132b0ad2bf00551$export$562c6f8151c36426","$dc989832d8d10a8f$export$da3eec8748131849","$e9df73d5fa4b7fb2$export$196e9e3d20e4131","$e083d04444045e2e$export$22f86bc7a100befc","intensity","shaderFragment","intensityVal","$38cc928533bc7765$export$9f7639465b88ec7f","$052a5b7ae09fb485$export$4eeb783ef7c17da8","inward","frequency","minIntensity","maxIntensity","$bbce82a8fa9c759b$export$a47a7c04f1bc8ac","$6c6645b82b61bc37$export$fd0af22b8dd4eb46","fireBlend","$4d6b31e6ad31979e$export$73c22863fbcd15d3","$74f580247129123a$export$60b593b6124d1ebc","$c9111877e9b99e22$export$9fa5c76e40adf3ca","$763101d941baf02d$export$bf2c97ada2c2b329","glint","billowy","shiftX","shiftY","tintIntensity","waterColor","$0a6ff0f4b9e266f1$export$cc1bb59c1623a9ed","$2259918ac189db3e$export$2ba7369b7ae4551b","$db84269c965d5c17$export$74eae7f690aa2952","$dd7b8e7fa7881c81$export$8353bd967bf6b04d","shieldType","posLightX","posLightY","lightSize","hideRadius","chromatic","discardThreshold","posLight","lightColorAlpha","$b5124a750151fbc2$export$29635fcc44af7f32","$ff9a4870337c9c29$export$7f3e808c6a96411c","alphaImg","alphaChr","nbImage","ampX","ampY","$0e5e009646f2ae02$export$b460b340f858a038","$6cd542ba64bf5f03$export$a909c602e4f39889","$7fc747f1b273d1f6$export$28b3a3501a7f949","$2d15a583bccdfdfc$export$76689802e4398e92","spectral","$198405fa67e91b85$export$7d6ef12f70fa5332","$3ad5a82bb0e54e91$export$dbf4d88a9f2fd9e6","auraIntensity","subAuraIntensity","discard","auraType","holes","_frame","$b42aa7ecb9ad892d$export$26c3bdb8b50816cc","PixelateFilter","sizeX","sizeY","$69e7dce7ecc59e3a$export$ee64fcda6bb0a01b","$6fa7336a3977e368$export$be2f10404718dbad","div1","div2","tear","$f3670dae3dbde56b$export$ddb966d307e896d5","$f18e6ec0a88cc5a8$export$3f7eb987d91438a2","_octaves","_octave","$8de1ea40f1e953f4$export$59ce548d84b541a8","$73f856fafa2246eb$export$dd8c8c08b796f015","distortion","$39326b17c0d8eafc$export$9bdad1ae37d738e0","$6e4bf56a3bec8613$export$e8341be799357874","twRadiusPercent","twAngle","twRotation","bpRadiusPercent","bpStrength","pivotX","pivotY","translationX","translationY","translation","twRadius","bpRadius","$3916b8f3970cb9e8$export$a55475809cca74a","$8a211ec6959a309d$export$df3de41f3315cb09","spread","splashFactor","cut","textureAlphaBlend","$fd64db06168e0f7f$export$981b7ede7b45eb87","$7bc465f1b3307540$export$935bdd8d48f63a2e","$8b6bb088e94ffbdd$export$cf7260b11c6fd85d","imagePath","progress","magnify","targetSpriteMatrix","targetUVMatrix","inputClampTarget","assignTexture","min","uSamplerTarget","_setTargetSpriteSize","targetSprite","ratioW","_texture","realWidth","realHeight","tex","Texture","renderable","valid","on","addChild","uvMatrix","TextureMatrix","update","mapCoord","uClampFrame","destroy","removeChild","children","$93115343eec87627$export$3d2732364cd434b5","$3f0e291067dda99d$export$f5292971f4ab78f9","color1","color2","color3","color4","dispersion","inlay","$4d3a3734a8d2c466$export$9f64abe9148df1d","$6ec6ac6f8551358e$export$96f9417ff369e52","colorize","inverse","repeat","top","play","loop","maintainAspectRatio","maintainScale","_play","_loop","_maintainAspectRatio","_maintainScale","_playVideo","source","getProperty","tagName","isNaN","duration","Promise","resolve","onloadedmetadata","video","volume","stop","destroyed","pScale","w","$9736e5d4a7871309$export$3729c40aa34df6ff","$68be543dfb80fbf0$export$4569ea13832ce134","$ed38b6bd78b4a5ef$export$c3ce4d77f1074b4d","ColorReplaceFilter","originalColor","newColor","epsilon","$21badb97c59966b9$export$711d0b0b05d4a93a","$855c97940ea7d48a$export$19612c32a2f7f4cd","MAIN","$855c97940ea7d48a$export$7afd9c1079ecedf7","$855c97940ea7d48a$var$params","$855c97940ea7d48a$var$presetObject","name","library","sepia","noiseSize","scratchWidth","vignettingAlpha","vignettingBlur","$855c97940ea7d48a$export$bfc0b9c61923b5ec","defaultTexture","$855c97940ea7d48a$export$9381e89181e5b461","$65a4ae23b1e0568d$var$Magic","$843aec23ddc05ff2$export$4367b12d875874d3","$65a4ae23b1e0568d$export$df3971f21aaed551","ARCHAIC","V030","V040","V040b","V041","V043","$65a4ae23b1e0568d$export$182eb7a8e7220720","$843aec23ddc05ff2$export$485113ed30b22bb8","dataVersionNow","e","$65a4ae23b1e0568d$var$updatePresetsV030","$65a4ae23b1e0568d$var$updatePresetsV040","$65a4ae23b1e0568d$var$updatePresetsV040b","$65a4ae23b1e0568d$var$updatePresetsV041","$65a4ae23b1e0568d$var$updatePresetsV043","presets","$843aec23ddc05ff2$export$bef1f36f5486a6a3","foundTemplateLibrary","preset","newPresets","$843aec23ddc05ff2$export$a3bc9b8ed74fc","importPresetLibraryFromPath","overwrite","$8e9589e1a89f7fdf$export$1ab2366e25c48ed5","CRTFilter","curvature","lineWidth","lineContrast","verticalLine","$affe7c1f1e13b606$export$767e09686399ca49","RGBSplitFilter","redX","redY","greenX","greenY","blueX","blueY","$df9b71b8b9df6e3e$var$fromConfig","config","o","tokenmagic","tmfxPreset","tmfxTexture","tint","tmfxTint","tmfxTextureAlpha","opacity","updateSource","flags","$df9b71b8b9df6e3e$var$fromItem","wrapped","item","overrides","$df9b71b8b9df6e3e$var$fromOverrides","find","el","toLowerCase","$df9b71b8b9df6e3e$var$fromCategories","categories","dmgSettings","hasDamage","_","dmgType","damage","parts","t","$df9b71b8b9df6e3e$export$2e33ee4bec8a51fe","defaultConfiguration","defaultConfig","CONFIG","DND5E","damageTypes","MeasuredTemplate","types","tplType","_enabled","configure","system","modules","libWrapper","register","origFromItem","dnd5e","AbilityTemplate","fromItem","call","unregister","location","reload","getData","hasAutoTemplates","dmgTypes","templateTypes","$e71b84600a531e84$var$fromConfig","$e71b84600a531e84$export$437ce40001ae0212","PF2E","damageTraits","preCreateMeasuredTemplate","origin","pf2e","$e71b84600a531e84$var$fromOverrides","slug","$e71b84600a531e84$var$fromCategories","traits","trait","$d6a82333f27252db$var$fromConfig","templateData","$d6a82333f27252db$export$e8d12d88f51888cc","witcher","meleeSkills","meleeSkillType","$d6a82333f27252db$var$fromOverrides","$d6a82333f27252db$var$fromCategories","$3cb990d4b29536ce$var$Magic","$3cb990d4b29536ce$export$804072f25096732f","FormApplication","object","defaultOptions","title","i18n","localize","classes","tabs","navSelector","contentSelector","initial","submitOnClose","init","menuAutoTemplateSettings","key","label","hint","restricted","settingAutoTemplateSettings","scope","default","templates","getSystemTemplates","registerMenu","Boolean","onChange","configureAutoTemplate","Number","String","loadTemplates","getSettingsData","settingsData","autoTemplateEnable","emptyPreset","getPresets","submitText","_updateObject","formData","expandObject","entries","compacted","val","idx","activateListeners","html","click","_onAddOverride","_onRemoveOverride","event","preventDefault","closest","querySelectorAll","last","dataset","updateData","_onSubmit","preventClose","render","Hooks","once","wmtApplyRenderFlags","wmtApplyRenderFlagsType","wmtRefreshTemplate","wmtRefreshTemplateType","Handlebars","registerHelper","pop","join","wmtdUpdate","hasPresetData","hasTexture","_getPresetTemplateDefaultTexture","startsWith","wmtDraw","retVal","$843aec23ddc05ff2$export$62085f0363fc8c9","toRadians","refreshShape","_destroyed","isVisible","lineStyle","_borderThickness","borderColor","beginFill","mat","IDENTITY","rotate","direction","rays","angles","Ray","fromAngle","sqrt","B","beginTextureFill","matrix","muted","drawShape","drawCircle","ray","dx","dy","controlIcon","visible","layer","border","hover","autohideTemplateElements","borderThickness","_original","preview","_hover","show","graphicsData","fillStyle","invalidate","ruler","owner","handle","_wmtApplyRenderFlags","mx","my","getLocalPosition","placeables","hl","grid","getHighlightLayer","cx","cy","mouseover","contains","cmtdUpdate","MeasuredTemplateDocument","cmtDraw","_draw","cmtApplyRenderFlags","_applyRenderFlags","cmtRefreshTemplate","_refreshTemplate","$843aec23ddc05ff2$var$moduleTM","$843aec23ddc05ff2$export$c67e46de1ec7dfa6","adjustment","ascii","dot","crt","oldfilm","glow","outline","bevel","xbloom","shadow","devicePixelRatio","twist","zoomblur","strengthX","strengthY","bulgepinch","zapshadow","fog","xfog","electric","wave","shockwave","fire","fumes","smoke","flood","images","field","xray","liquid","xglow","pixel","web","ripples","globes","splash","polymorph","xfire","spriteMask","replaceColor","ddTint","rgbSplit","Token","Tile","Drawing","$843aec23ddc05ff2$var$i18n","$843aec23ddc05ff2$var$exportObjectAsJson","exportObj","exportName","jsonStr","JSON","stringify","createElement","file","Blob","href","URL","createObjectURL","download","revokeObjectURL","socketAction","tmAction","tmPlaceableId","tmPlaceableType","tmFlag","tmViewedScene","user","viewedScene","socket","emit","resp","$843aec23ddc05ff2$export$73ccc1811a23c47","moduleName","has","$843aec23ddc05ff2$export$db02b1003f6b14db","$843aec23ddc05ff2$export$4d149f3fface3da5","theOne","users","isGM","$843aec23ddc05ff2$export$2bf9d1af56f0b37d","console","log","$843aec23ddc05ff2$export$c106dd0671a0fc2d","warn","error","path","base","url","prefix","ROUTE_PREFIX","pathname","err","slice","$843aec23ddc05ff2$export$674b9bd489502778","authorizedLayers","tokens","tiles","drawings","some","activeLayer","p","controlled","$843aec23ddc05ff2$export$c0c03469ba031852","isTargeted","findPlaceable","rplaceable","n","$843aec23ddc05ff2$var$randomizeParams","params1","randomized","param","opts","rVal","isArray","list","step","stepsInRange","isInteger","setProperty","link","$843aec23ddc05ff2$export$45dd0c4934db71d0","sources","s_val","t_val","_cachedContainer","Container","addFiltersOnSelected","getPreset","addUpdateFiltersOnSelected","addUpdateFiltersOnTargeted","targeted","token","addFiltersOnTargeted","actualFlags","newFlags","updateId","tmFilters","tmFilterType","tmFilterOwner","tmParams","updateParams","workingFlags","deleteFiltersOnTargeted","deleteFiltersOnSelected","isApplicableUser","hasUser","arr","include","exclude","_checkFilterId","found","_assignFilters","bulkLoading","animeInfos","filterInfo","_loadPersistedValues","_assignFilter","workingFilterInfo","setFilter","_singleLoadFilters","loadingRequest","_importPresetContent","content","check","element","replaceLibrary","pst","it","index","indexOf","_importTemplateSettingsContent","response","fetch","json","message","importTemplateSettingsFromPath","presetName","pName","pLibrary","argIsObj","adjustmentProp","filterProp","filterPropVal","deepClone","updateFilters","placeableIdSet","Set","animations","updateFiltersOnSelected","updateFiltersOnTargeted","importTemplateSettings","FilePicker","current","callback","browse","exportTemplateSettings","exportPresetLibrary","importPresetLibrary","importPresetLibraryFromURL","$","getJSON","resetPresetLibrary","confirm","ui","notifications","info","libraryName","addPreset","silent","pDefaultTexture","presetObject","deletePreset","splice","getControlledPlaceables","getTargetedTokens","getPlaceableById","_loadFilters","reverse","_clearImgFiltersByPlaceable","filterById","destroyClearedFilters","theFilters","filterTheFiltering","_getAnimeMap","_updateFilters","_id","foundFilter","filterFlag","puppets","_fxPseudoEqual","flagObject","filterObject","isObject","flagKeys","flagKey","flagValue","filterValue","areObjects","_updateTemplateData","presetLibrary","$843aec23ddc05ff2$var$compilingShaders","filterTypes","tmpRenderTexture","RenderTexture","create","renderTexture","$843aec23ddc05ff2$var$requestLoadFilters","startTimeout","reqTimer","setTimeout","clearTimeout","launchRequest","$843aec23ddc05ff2$var$getAnchor","shapeType","dirRad","angleRad","cosRa1","rsinRa1","cosRa2","rsinRa2","$843aec23ddc05ff2$var$onMeasuredTemplateConfig","querySelector","tmTemplate","isNewerVersion","version","currentPreset","tmfxTemplateData","hex2string","tmfxValues","selected","divPreset","htmlForm","after","css","$843aec23ddc05ff2$var$initSocketListener","updateFlags","targetFlag","scene","scenes","updateEmbeddedDocuments","canvas1","document1","k","src","overhead","measuredTemplateInstance","templateTint","presetUpdate","tintUpdate","directionUpdate","angleUpdate","typeUpdate","valueOf","templateFX","presetOptions","Levels3DPreview","_active","hasFlags","hasPreset","hasTint","hasOpacity","hasFlagsNoOptions","newFilters","tmfxFiltersData","pstSearch","defaultTex","persist","tmfxFlags","FilterType","PlaceableType","SocketAction","broadcast","isActiveModule","getMinPadding","isAdditivePaddingConfig","isFilterCachingDisabled","isVideoDisabled","isTheOne","mustBroadCast","autosetPaddingMode","isZOrderConfig","isAnimationDisabled","fixPath","objectAssign","Magic"],"version":3,"file":"tokenmagicBundle.js.map"}